{"version":3,"sources":["./src/app/plugins/hystModal_.js","./src/app/views/feed/feed-main/feed-main.component.ts","./src/app/views/feed/feed-main/feed-main.component.html","./src/app/store/my-profile/my-profile.selectors.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/pipes/masked-email/masked-email.pipe.ts","./src/app/store/auth/auth.selectors.ts","./src/app/views/profile/edit-profile/edit-components/edit-additional-info/edit-additional-info.component.ts","./src/app/views/profile/edit-profile/edit-components/edit-additional-info/edit-additional-info.component.html","./src/app/store/my-profile/my-profile.effects.ts","./src/app/views/profile/profile.module.ts","./src/app/views/chat/chat-main/chat-main.component.html","./src/app/views/chat/chat-main/chat-main.component.ts","./src/app/services/profile.service.ts","./src/environments/environment.ts","./src/app/store/profile/profile.effects.ts","./src/app/views/profile/profile-main/profile-main.component.ts","./src/app/views/profile/profile-main/profile-main.component.html","./src/app/store/profile/profile.actions.ts","./src/app/store/auth/auth.actions.ts","./src/app/views/jobs/jobs.module.ts","./src/app/views/auth/auth.module.ts","./src/app/directives/directives.module.ts","./src/app/views/jobs/jobs.component.ts","./src/app/views/jobs/jobs.component.html","./src/app/views/auth/registration/registration.component.ts","./src/app/views/auth/registration/registration.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/store/profile/profile.reducer.ts","./src/app/layouts/base/base.component.ts","./src/app/layouts/base/base.component.html","./src/app/views/profile/edit-profile/edit-profile.component.ts","./src/app/views/profile/edit-profile/edit-profile.component.html","./src/app/components/network/connections-list/connections-list.component.ts","./src/app/components/network/connections-list/connections-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/views/feed/feed.module.ts","./src/app/guards/auth.guard.ts","./src/app/layouts/auth/auth.component.ts","./src/app/layouts/auth/auth.component.html","./src/app/svg-icon/svg-icon.component.ts","./src/app/views/profile/edit-profile/edit-profile-side/edit-profile-side.component.ts","./src/app/views/profile/edit-profile/edit-profile-side/edit-profile-side.component.html","./src/app/views/chat/chat-side/chat-side.component.html","./src/app/views/chat/chat-side/chat-side.component.ts","./src/app/store/posts/post.actions.ts","./src/app/store/index.ts","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/app/views/feed/feed-side/feed-side.component.ts","./src/app/views/feed/feed-side/feed-side.component.html","./src/app/pipes/prefix-plus-pipe/prefix-plus.pipe.ts","./src/app/services/file.service.ts","./src/app/views/profile/edit-profile/edit-components/edit-login-and-security/edit-login-and-security.component.ts","./src/app/views/profile/edit-profile/edit-components/edit-login-and-security/edit-login-and-security.component.html","./src/app/directives/var.directive.ts","./src/app/store/posts/post.effects.ts","./src/app/views/profile/profile-side/profile-side.component.ts","./src/app/views/profile/profile-side/profile-side.component.html","./src/app/store/my-profile/my-profile.actions.ts","./src/app/views/profile/edit-profile/edit-profile-main/edit-profile-main.component.ts","./src/app/views/profile/edit-profile/edit-profile-main/edit-profile-main.component.html","./src/app/components/account-deleted/account-deleted.component.ts","./src/app/components/account-deleted/account-deleted.component.html","./src/app/store/my-profile/my-profile.reducer.ts","./src/app/services/web-socket.service.ts","./src/app/pipes/pipes.module.ts","./src/app/views/auth/authorization/authorization.component.ts","./src/app/views/auth/authorization/authorization.component.html","./src/app/components/components.module.ts","./src/app/services/posts.service.ts","./src/app/views/chat/chat.module.ts","./src/app/views/chat/chat.component.ts","./src/app/views/chat/chat.component.html","./src/app/services/auth.service.ts","./src/app/pipes/avatar.pipe.ts","./src/app/views/network/network-main/network-main.component.ts","./src/app/views/network/network-main/network-main.component.html","./src/app/pipes/name-pipe/name-pipe.pipe.ts","./src/app/views/profile/edit-profile/edit-components/edit-personal-data/edit-personal-data.component.ts","./src/app/views/profile/edit-profile/edit-components/edit-personal-data/edit-personal-data.component.html","./src/app/components/network/users-list/users-list.component.ts","./src/app/components/network/users-list/users-list.component.html","./src/app/views/feed/feed.component.ts","./src/app/views/feed/feed.component.html","./src/app/store/auth/auth.reducer.ts","./src/app/services/chat.service.ts","./src/app/pipes/masked-phone/masked-phone.pipe.ts","./src/app/views/notices/notices.module.ts","./src/app/svg-icon/svg-icon.module.ts","./src/app/store/profile/profile.selectors.ts","./src/app/views/network/network.component.ts","./src/app/views/network/network.component.html","./src/app/app-routing.module.ts","./src/app/components/network/invitations/invitations.component.ts","./src/app/components/network/invitations/invitations.component.html","./src/app/store/posts/post.reducer.ts","./src/app/views/profile/profile.component.ts","./src/app/views/profile/profile.component.html","./src/app/store/posts/post.selectors.ts","./src/app/views/network/network-side/network-side.component.ts","./src/app/views/network/network-side/network-side.component.html","./src/app/views/notices/notices.component.ts","./src/app/views/notices/notices.component.html","./src/app/views/network/network.module.ts","./src/app/views/views.module.ts","./src/app/components/select/select.component.ts","./src/app/components/select/select.component.html","./src/app/svg-icon/icons-path.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":["export class HystModal {\n    constructor(props) {\n        let defaultConfig = {\n            backscroll: true,\n            linkAttributeName: 'data-hystmodal',\n            closeOnOverlay: true,\n            closeOnEsc: true,\n            closeOnButton: true,\n            waitTransitions: false,\n            catchFocus: true,\n            fixedSelectors: '*[data-hystfixed]',\n            beforeOpen: () => {},\n            afterClose: () => {},\n        }\n        this.config = Object.assign(defaultConfig, props)\n        if (this.config.linkAttributeName) {\n            this.init()\n        }\n        this._closeAfterTransition = this._closeAfterTransition.bind(this)\n    }\n\n    init() {\n        this.isOpened = false\n        this.openedWindow = false\n        this.starter = false\n        this._nextWindows = false\n        this._scrollPosition = 0\n        this._reopenTrigger = false\n        this._overlayChecker = false\n        this._isMoved = false\n        this._focusElements = [\n            'a[href]',\n            'area[href]',\n            'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n            'select:not([disabled]):not([aria-hidden])',\n            'textarea:not([disabled]):not([aria-hidden])',\n            'button:not([disabled]):not([aria-hidden])',\n            'iframe',\n            'object',\n            'embed',\n            '[contenteditable]',\n            '[tabindex]:not([tabindex^=\"-\"])',\n        ]\n        this._modalBlock = false\n\n        let existingShadow = document.querySelector('.hystmodal__shadow')\n        if (existingShadow) {\n            this.shadow = existingShadow\n        } else {\n            this.shadow = document.createElement('div')\n            this.shadow.classList.add('hystmodal__shadow')\n            document.body.appendChild(this.shadow)\n        }\n        this.eventsFeeler()\n    }\n\n    eventsFeeler() {\n        document.addEventListener(\n            'click',\n            function (e) {\n                const clickedlink = e.target.closest(\n                    '[' + this.config.linkAttributeName + ']',\n                )\n                if (!this._isMoved && clickedlink) {\n                    e.preventDefault()\n                    this.starter = clickedlink\n                    let targetSelector = this.starter.getAttribute(\n                        this.config.linkAttributeName,\n                    )\n                    this._nextWindows = document.querySelector(targetSelector)\n                    this.open()\n                    return\n                }\n                if (\n                    this.config.closeOnButton &&\n                    e.target.closest('[data-hystclose]')\n                ) {\n                    this.close()\n                    return\n                }\n            }.bind(this),\n        )\n\n        if (this.config.closeOnOverlay) {\n            document.addEventListener(\n                'mousedown',\n                function (e) {\n                    if (\n                        !this._isMoved &&\n                        e.target instanceof Element &&\n                        !e.target.classList.contains('hystmodal__wrap')\n                    )\n                        return\n                    this._overlayChecker = true\n                }.bind(this),\n            )\n\n            document.addEventListener(\n                'mouseup',\n                function (e) {\n                    if (\n                        !this._isMoved &&\n                        e.target instanceof Element &&\n                        this._overlayChecker &&\n                        e.target.classList.contains('hystmodal__wrap')\n                    ) {\n                        e.preventDefault()\n                        !this._overlayChecker\n                        this.close()\n                        return\n                    }\n                    this._overlayChecker = false\n                }.bind(this),\n            )\n        }\n\n        window.addEventListener(\n            'keydown',\n            function (e) {\n                if (\n                    !this._isMoved &&\n                    this.config.closeOnEsc &&\n                    e.which == 27 &&\n                    this.isOpened\n                ) {\n                    e.preventDefault()\n                    this.close()\n                    return\n                }\n                if (\n                    !this._isMoved &&\n                    this.config.catchFocus &&\n                    e.which == 9 &&\n                    this.isOpened\n                ) {\n                    this.focusCatcher(e)\n                    return\n                }\n            }.bind(this),\n        )\n    }\n\n    open(selector) {\n        if (selector) {\n            if (typeof selector === 'string') {\n                this._nextWindows = document.querySelector(selector)\n            } else {\n                this._nextWindows = selector\n            }\n        }\n        if (!this._nextWindows) {\n            console.log('Warning: hystModal selector is not found')\n            return\n        }\n        if (this.isOpened) {\n            this._reopenTrigger = true\n            this.close()\n            return\n        }\n        this.openedWindow = this._nextWindows\n        this._modalBlock = this.openedWindow.querySelector('.hystmodal__window')\n        this.config.beforeOpen(this)\n        this._bodyScrollControl()\n        this.shadow.classList.add('hystmodal__shadow--show')\n        this.openedWindow.classList.add('hystmodal--active')\n        this.openedWindow.setAttribute('aria-hidden', 'false')\n        if (this.config.catchFocus) this.focusControl()\n        this.isOpened = true\n    }\n\n    close() {\n        if (!this.isOpened) {\n            return\n        }\n        if (this.config.waitTransitions) {\n            this.openedWindow.classList.add('hystmodal--moved')\n            this._isMoved = true\n            this.openedWindow.addEventListener(\n                'transitionend',\n                this._closeAfterTransition,\n            )\n            this.openedWindow.classList.remove('hystmodal--active')\n        } else {\n            this.openedWindow.classList.remove('hystmodal--active')\n            this._closeAfterTransition()\n        }\n    }\n\n    _closeAfterTransition() {\n        this.openedWindow.classList.remove('hystmodal--moved')\n        this.openedWindow.removeEventListener(\n            'transitionend',\n            this._closeAfterTransition,\n        )\n        this._isMoved = false\n        this.shadow.classList.remove('hystmodal__shadow--show')\n        this.openedWindow.setAttribute('aria-hidden', 'true')\n\n        if (this.config.catchFocus) this.focusControl()\n        this._bodyScrollControl()\n        this.isOpened = false\n        this.openedWindow.scrollTop = 0\n        this.config.afterClose(this)\n\n        if (this._reopenTrigger) {\n            this._reopenTrigger = false\n            this.open()\n        }\n    }\n\n    focusControl() {\n        const nodes = this.openedWindow.querySelectorAll(this._focusElements)\n        if (this.isOpened && this.starter) {\n            this.starter.focus()\n        } else {\n            if (nodes.length) nodes[0].focus()\n        }\n    }\n\n    focusCatcher(e) {\n        const nodes = this.openedWindow.querySelectorAll(this._focusElements)\n        const nodesArray = Array.prototype.slice.call(nodes)\n        if (!this.openedWindow.contains(document.activeElement)) {\n            nodesArray[0].focus()\n            e.preventDefault()\n        } else {\n            const focusedItemIndex = nodesArray.indexOf(document.activeElement)\n            console.log(focusedItemIndex)\n            if (e.shiftKey && focusedItemIndex === 0) {\n                nodesArray[nodesArray.length - 1].focus()\n                e.preventDefault()\n            }\n            if (!e.shiftKey && focusedItemIndex === nodesArray.length - 1) {\n                nodesArray[0].focus()\n                e.preventDefault()\n            }\n        }\n    }\n\n    _bodyScrollControl() {\n        if (!this.config.backscroll) return\n\n        // collect fixed selectors to array\n        let fixedSelectors = Array.prototype.slice.call(\n            document.querySelectorAll(this.config.fixedSelectors),\n        )\n\n        let html = document.documentElement\n        if (this.isOpened === true) {\n            html.classList.remove('hystmodal__opened')\n            html.style.marginRight = ''\n            fixedSelectors.map(el => {\n                el.style.marginRight = ''\n            })\n            window.scrollTo(0, this._scrollPosition)\n            html.style.top = ''\n            return\n        }\n        this._scrollPosition = window.pageYOffset\n        let marginSize = window.innerWidth - html.clientWidth\n        html.style.top = -this._scrollPosition + 'px'\n\n        if (marginSize) {\n            html.style.marginRight = marginSize + 'px'\n            fixedSelectors.map(el => {\n                el.style.marginRight =\n                    parseInt(getComputedStyle(el).marginRight) +\n                    marginSize +\n                    'px'\n            })\n        }\n        html.classList.add('hystmodal__opened')\n    }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { FileService } from 'src/app/services/file.service'\nimport { select, Store } from '@ngrx/store'\nimport { PostState } from '../../../store/posts/post.reducer'\nimport {\n    PostCreateAction,\n    PostGetAction,\n} from '../../../store/posts/post.actions'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { postsSelector } from '../../../store/posts/post.selectors'\nimport { IPost } from '../../../interfaces/post/post'\nimport { ICreator } from '../../../interfaces/post/creator'\nimport { IAttached } from '../../../interfaces/post/attached'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport { myProfileSelector } from '../../../store/my-profile/my-profile.selectors'\n\n@Component({\n    selector: 'app-feed-main',\n    templateUrl: './feed-main.component.html',\n    styleUrls: ['./feed-main.component.less', '../feed.component.less'],\n})\nexport class FeedMainComponent implements OnInit {\n    constructor(\n        private fileService: FileService,\n        private store$: Store<PostState | MyProfileState>,\n    ) {}\n\n    posts$: Observable<IPost[]> = this.store$.pipe(select(postsSelector))\n    isPosts$: Observable<boolean> = this.posts$.pipe(map(posts => !!posts[0]))\n\n    creator$: Observable<ICreator> = this.store$.pipe(\n        select(myProfileSelector),\n        map(profile => {\n            console.log('PROFILE => ', profile)\n            return {\n                id: profile.id,\n                fullName: `${profile.firstName} ${profile.lastName}`,\n                profession: profile.info.profession,\n                avatar:\n                    profile.info.avatar?.url ??\n                    '../../../../assets/img/avatar-man.png',\n            }\n        }),\n    )\n\n    feedPostSortingType: string | null = 'trending'\n\n    attached: IAttached = {}\n\n    creator: ICreator = {\n        id: 0,\n        fullName: '',\n        profession: '',\n        avatar: '',\n    }\n    textareaContent: string = ''\n\n    createPost(): void {\n        this.store$.dispatch(\n            new PostCreateAction({\n                creator: this.creator,\n                content: this.textareaContent,\n                dateOfCreation: Date.now(),\n                attached: this.attached,\n            }),\n        )\n        this.textareaContent = ''\n    }\n\n    textareaResize(e: Event): void {\n        const elem = e.target as HTMLElement\n        const offset = elem.offsetHeight - elem.clientHeight\n\n        elem.style.height = 'auto'\n        elem.style.height = elem.scrollHeight + offset + 'px'\n    }\n\n    changeSortingType(e: MouseEvent, sortList: HTMLElement): void {\n        const elem = e.target as HTMLElement\n        this.feedPostSortingType = elem.textContent\n\n        sortList.classList.remove('active')\n    }\n\n    fileUpload(fileInput: HTMLInputElement, type: string): void {\n        this.fileService.fileUpload(fileInput, type, this.attached)\n    }\n\n    ngOnInit(): void {\n        this.creator$.subscribe(creator => (this.creator = creator))\n        this.posts$.subscribe(posts => console.log('posts =>', posts))\n\n        this.store$.dispatch(new PostGetAction({ id: 'all' }))\n    }\n}\n","<div class=\"feed__main\">\n    <div class=\"new-post\">\n        <h3>NEW POST</h3>\n        <div class=\"create-post\">\n            <textarea\n                rows=\"2\"\n                contenteditable=\"true\"\n                (input)=\"textareaResize($event)\"\n                onblur=\"this.value = this.value.trim()\"\n                placeholder=\"What's on your mind?\"\n                [(ngModel)]=\"textareaContent\"\n            ></textarea>\n            <div class=\"controls\">\n                <input type=\"file\" multiple style=\"display: none\" #fileInput />\n                <svg\n                    (click)=\"fileUpload(fileInput, 'file')\"\n                    icon=\"attach\"\n                    class=\"attach-icon\"\n                ></svg>\n                <svg\n                    (click)=\"fileUpload(fileInput, 'image')\"\n                    icon=\"picture\"\n                    class=\"attach-icon\"\n                ></svg>\n                <svg\n                    (click)=\"fileUpload(fileInput, 'video')\"\n                    icon=\"film\"\n                    class=\"attach-icon\"\n                ></svg>\n                <button (click)=\"createPost()\" class=\"btn-post\">\n                    <svg icon=\"send\" class=\"send\"></svg>\n                </button>\n            </div>\n        </div>\n        <div class=\"attached\">\n            <div class=\"files\">\n                <a\n                    *ngFor=\"let attach of attached.files\"\n                    [href]=\"attach.result\"\n                    download=\"{{ attach.name }}\"\n                >\n                    <span class=\"name\">{{ attach.name }}</span>\n                    <span class=\"size\">{{ attach.size }}</span>\n                </a>\n            </div>\n            <div class=\"images\"></div>\n            <div class=\"videos\"></div>\n        </div>\n    </div>\n\n    <div class=\"sort\">\n        <h4>\n            SORT BY:\n            <div>\n                <span\n                    (click)=\"sortList.classList.toggle('active')\"\n                    class=\"sort-type\"\n                >\n                    {{ feedPostSortingType }}\n                    <svg class=\"icon\" icon=\"chevronDown\"></svg>\n                </span>\n                <div class=\"sort-list\" #sortList>\n                    <ul\n                        (click)=\"changeSortingType($event, sortList)\"\n                        class=\"list\"\n                    >\n                        <li>trending</li>\n                        <li>newest first</li>\n                        <li>lastest first</li>\n                        <li>by title</li>\n                    </ul>\n                </div>\n            </div>\n        </h4>\n    </div>\n    <!-- Ted Bell, Annette Nguyen and Cody Hawkins liked this -->\n    <div *ngIf=\"(isPosts$ | async)\" class=\"posts\">\n        <app-post [postInfo]=\"post\" *ngFor=\"let post of (posts$ | async)\"></app-post>\n    </div>\n    <h2 *ngIf=\"!(isPosts$ | async)\" class=\"no-posts\">There are no posts in your feed yet</h2>\n</div>\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { myProfileNode, MyProfileState } from './my-profile.reducer'\n\nexport const myProfileFeatureSelector = createFeatureSelector<MyProfileState>(\n    myProfileNode,\n)\n\nexport const myProfileSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state,\n)\n\nexport const myProfileIdSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.id,\n)\n\nexport const myProfileNameSelector = createSelector(\n    myProfileFeatureSelector,\n    state => ({\n        firstName: state.firstName,\n        lastName: state.lastName,\n    }),\n)\n\nexport const myProfilePhoneSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.phone,\n)\n\nexport const myProfileEmailSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.email,\n)\n\nexport const myProfilePostsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.posts,\n)\n\nexport const myProfileCurrentViewsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.views.current,\n)\n\nexport const myProfilePrevViewsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.views.prev,\n)\n\nexport const myProfileAvatarSelector = createSelector(\n    myProfileFeatureSelector,\n    state => {\n        return state.info.avatar?.url ?? '../../../assets/img/avatar-man.png'\n    },\n)\n\nexport const myProfileProfessionSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.profession,\n)\n\nexport const myProfileRoleSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.role,\n)\n\nexport const myProfileDescriptionSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.description,\n)\n\nexport const myProfileAboutSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.about,\n)\n\nexport const myProfileDOBSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.dateOfBirth,\n)\n\nexport const myProfileLocalitySelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.locality,\n)\n\nexport const myProfileGenderSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.gender,\n)\n\nexport const myProfileDateOfLastPasswordUpdateSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.dateOfLastPasswordUpdate,\n)\n\nexport const myProfileSentConnectionsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.sentConnections,\n)\n\nexport const myProfileReceivedConnectionsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.receivedConnections,\n)\n\nexport const myProfileConnectionsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.connections,\n)\n\nexport const myProfileContactInfoSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.contactInfo,\n)\n\nexport const myProfileProjectsSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.projects,\n)\n\nexport const myProfileExperienceSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.experience,\n)\n\nexport const myProfileEducationSelector = createSelector(\n    myProfileFeatureSelector,\n    state => state.info.education,\n)\n","import { Component, OnInit } from '@angular/core'\nimport { ProfileService } from '../../services/profile.service'\n\nimport { IRoute } from '../../../../../server/src/interfaces/route'\nimport { Observable, of } from 'rxjs'\nimport { MyProfileState } from '../../store/my-profile/my-profile.reducer'\nimport { select, Store } from '@ngrx/store'\n\nimport { map } from 'rxjs/operators'\nimport {\n    myProfileAvatarSelector,\n    myProfileCurrentViewsSelector,\n    myProfileNameSelector,\n    myProfilePrevViewsSelector,\n} from '../../store/my-profile/my-profile.selectors'\nimport { IBuffer } from '../../interfaces/buffer'\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.less'],\n})\nexport class HeaderComponent implements OnInit {\n    constructor(\n        private profileService: ProfileService,\n        private store$: Store<MyProfileState>,\n    ) {}\n\n    prevViews$: Observable<number> = this.store$.pipe(\n        select(myProfilePrevViewsSelector),\n    )\n    currentViews$: Observable<number> = this.store$.pipe(\n        select(myProfileCurrentViewsSelector),\n    )\n    fullName$: Observable<string> = this.store$.pipe(\n        select(myProfileNameSelector),\n        map(name => `${name.firstName[0]}. ${name.lastName}`),\n    )\n    avatar$: Observable<string> = this.store$.pipe(\n        select(myProfileAvatarSelector),\n        map(avatar => {\n            return avatar\n        }),\n    )\n\n    routes: IRoute[] = [\n        { path: '/feed', icon: 'feed', name: 'feed' },\n        { path: '/network', icon: 'network', name: 'network' },\n        { path: '/jobs', icon: 'jobs', name: 'jobs' },\n        { path: '/chats', icon: 'chats', name: 'chats' },\n        { path: '/notices', icon: 'notices', name: 'notices' },\n    ]\n    location: Location = location\n\n    viewsProgress(): number {\n        let prev: number\n        let current: number\n        this.currentViews$.subscribe(res => {\n            current = res\n        })\n        this.prevViews$.subscribe(res => {\n            prev = res\n        })\n        // @ts-ignore\n        return current - prev\n    }\n\n    trendingIcon(): string {\n        if (this.viewsProgress() > 0) return 'trendingUp'\n        if (this.viewsProgress() < 0) return 'trendingDown'\n        return 'trendingFlat'\n    }\n\n    ngOnInit(): void {}\n}\n","<header class=\"header\">\n\t<div class=\"left-side\">\n\t\t<nav class=\"navigation\">\n\t\t\t<a class=\"link\" id=\"logo\" routerLink=\"/feed\">\n\t\t\t\t<img alt=\"logo\" src=\"../../assets/img/logo.png\"/>\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\t\t*ngFor=\"let route of routes\"\n\t\t\t\t\t[class.active]=\"location.pathname === route.path\"\n\t\t\t\t\t[routerLink]=\"route.path\"\n\t\t\t\t\tclass=\"link\"\n\t\t\t>\n\t\t\t\t<svg [icon]=\"route.icon\" class=\"icon\"></svg>\n\t\t\t\t{{ route.name }}\n\t\t\t</a>\n\t\t</nav>\n\t</div>\n\t<div class=\"right-side\">\n\t\t<a class=\"profile-link\" routerLink=\"/profile\">\n\t\t\t<div class=\"profile\">\n\t\t\t\t<div class=\"photo\">\n\t\t\t\t\t<img [src]=\"(avatar$ | async)\" alt=\"avatar\" id=\"avatar\"/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info\">\n\t\t\t\t\t<p class=\"name\">\n\t\t\t\t\t\t{{ fullName$ | async }} <span>YOU</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p class=\"views\">\n\t\t\t\t\t\t{{ currentViews$ | async }} views today\n\t\t\t\t\t\t<span id=\"progress\"\n\t\t\t\t\t\t\t  [class.danger]=\"viewsProgress() < 0\"\n\t\t\t\t\t\t\t  [class.success]=\"viewsProgress() > 0\"\n\t\t\t\t\t\t\t  [class.base]=\"viewsProgress() === 0\"\n\t\t\t\t\t\t>\n                            {{ viewsProgress() | prefixPlus }}\n\t\t\t\t\t\t\t<svg [icon]=\"trendingIcon()\"\n\t\t\t\t\t\t\t></svg>\n                        </span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</a>\n\t\t<a class=\"link\" href=\"#\">\n\t\t\t<svg class=\"icon\" icon=\"other\"></svg>\n\t\t\t<p>OTHER</p>\n\t\t</a>\n\t</div>\n</header>\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'maskedEmail',\n})\nexport class MaskedEmailPipe implements PipeTransform {\n    transform(value: string, ...args: unknown[]): string {\n        const [startEmail, endEmail] = value.split('@')\n        const maskedStart = `${startEmail[0] + startEmail[1]}•••`\n\n        return maskedStart + '@' + endEmail\n    }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { authNode, AuthState } from './auth.reducer'\n\nexport const authFeatureSelector = createFeatureSelector<AuthState>(authNode)\n\nexport const authStatusSelector = createSelector(\n    authFeatureSelector,\n    (state: AuthState) => state.authStatus,\n)\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { IProject } from '../../../../../interfaces/project'\nimport { IContact } from '../../../../../interfaces/contact'\nimport { IFile } from '../../../../../interfaces/file'\nimport { IExp } from '../../../../../interfaces/exp'\nimport { IUniversity } from '../../../../../interfaces/university'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n    selector: 'app-edit-additional-info',\n    templateUrl: './edit-additional-info.component.html',\n    styleUrls: ['./edit-additional-info.component.less'],\n})\nexport class EditAdditionalInfoComponent implements OnInit {\n    @Input() role: string = ''\n    @Input() about: string = ''\n    @Input() profession: string = ''\n    @Input() locality: { country: string; city: string } = {\n        country: '',\n        city: '',\n    }\n    @Input() contactInfo: IContact[] = [{ contactWay: null, data: null }]\n    @Input() projects: IProject[] = [\n        {\n            name: null,\n            role: null,\n            date: null,\n            about: null,\n            poster: null,\n        },\n    ]\n    @Input() experience: IExp[] = []\n    @Input() education: IUniversity[] = []\n\n    @Output() onChange = new EventEmitter<{ type: string; data: any }>()\n\n    localityForm = new FormGroup({\n        country: new FormControl(this.locality.country, [Validators.required]),\n        city: new FormControl(this.locality.city, [Validators.required]),\n    })\n\n    contactInfoError: string = ''\n    projectsError: string = ''\n    jobError: string = ''\n    educationError: string = ''\n\n    constructor() {}\n\n    addContactWay(): void {\n        this.contactInfo.push({\n            contactWay: null,\n            data: null,\n        })\n    }\n\n    removeContactWay(contact: IContact): void {\n        this.contactInfo = this.contactInfo.filter(c => c !== contact)\n    }\n\n    addProject(): void {\n        this.projects.push({\n            name: null,\n            role: null,\n            date: null,\n            about: null,\n            poster: null,\n        })\n    }\n\n    removeProject(project: IProject): void {\n        this.projects = this.projects.filter(p => p !== project)\n    }\n\n    addJob(): void {\n        this.experience.push({\n            companyName: '',\n            profession: '',\n            start: '',\n            end: '',\n            logo: null,\n        })\n    }\n\n    removeJob(job: IExp): void {\n        this.experience = this.experience.filter(j => j !== job)\n    }\n\n    addUniversity(): void {\n        this.education.push({\n            name: '',\n            facultyAndDegree: '',\n            comment: '',\n            start: '',\n            end: '',\n            logo: null,\n        })\n    }\n\n    removeUniversity(university: IUniversity): void {\n        this.education = this.education.filter(u => u !== university)\n    }\n\n    uploadPosterHandler(e: Event, project: IProject): void {\n        const target = e.target as HTMLInputElement\n        const file = target.files?.item(0) as File\n        this.uploadPoster(file, project)\n    }\n\n    uploadJobLogoHandler(e: Event, job: IExp): void {\n        const target = e.target as HTMLInputElement\n        const file = target.files?.item(0) as File\n        this.uploadJobLogo(file, job)\n    }\n    uploadUniversityLogoHandler(e: Event, university: IUniversity): void {\n        const target = e.target as HTMLInputElement\n        const file = target.files?.item(0) as File\n        this.uploadUniversityLogo(file, university)\n    }\n\n    uploadPoster(file: File, project: IProject): void {\n        this.uploadFile(file, (e: ProgressEvent) => {\n            console.log(e)\n            const fr = e.target as FileReader\n            if (project.poster) project.poster.url = fr.result as string\n            else {\n                project.poster = {\n                    encoding: '',\n                    fileName: '',\n                    mimetype: '',\n                    size: 0,\n                    url: fr.result as string,\n                    file,\n                }\n            }\n        })\n    }\n\n    uploadJobLogo(file: File, job: IExp): void {\n        this.uploadFile(file, (e: ProgressEvent) => {\n            const fr = e.target as FileReader\n            if (job.logo) job.logo.url = fr.result as string\n            else {\n                job.logo = {\n                    encoding: '',\n                    fileName: '',\n                    mimetype: '',\n                    size: 0,\n                    url: fr.result as string,\n                    file,\n                }\n            }\n        })\n    }\n\n    uploadUniversityLogo(file: File, university: IUniversity): void {\n        this.uploadFile(file, (e: ProgressEvent) => {\n            const fr = e.target as FileReader\n            if (university.logo) university.logo.url = fr.result as string\n            else {\n                university.logo = {\n                    encoding: '',\n                    fileName: '',\n                    mimetype: '',\n                    size: 0,\n                    url: fr.result as string,\n                    file,\n                }\n            }\n        })\n    }\n\n    uploadFile(file: File, cb: (ev: ProgressEvent) => void): void {\n        const fr = new FileReader()\n        fr.onload = cb\n        fr.readAsDataURL(file)\n    }\n\n    changeRole(): void {\n        this.onChange.emit({ type: 'role', data: this.role })\n    }\n\n    changeAbout(): void {\n        this.onChange.emit({ type: 'about', data: this.about })\n    }\n\n    changeProfession(): void {\n        this.onChange.emit({ type: 'profession', data: this.profession })\n    }\n\n    changeLocality(): void {\n        this.onChange.emit({ type: 'locality', data: this.localityForm.value })\n    }\n\n    changeContactInfo(): void {\n        for (const contactWay of this.contactInfo) {\n            if (this.isEmpty(contactWay)) {\n                this.projectsError = 'All fields must be filled'\n                return\n            }\n        }\n\n        this.onChange.emit({ type: 'contact-info', data: this.contactInfo })\n    }\n\n    changeProjects(): void {\n        for (const project of this.projects) {\n            if (this.isEmpty(project)) {\n                this.projectsError = 'All fields must be filled'\n                return\n            }\n        }\n\n        this.onChange.emit({ type: 'projects', data: this.projects })\n        this.projectsError = ''\n    }\n\n    changeExperience(): void {\n        for (const job of this.experience) {\n            console.log(job)\n            if (this.isEmpty(job)) {\n                this.jobError = 'All fields must be filled'\n                return\n            }\n\n            if (!this.dateValidation(job.start, job.end)) {\n                this.jobError = 'The date of dismissal cannot be earlier than the date of employment'\n                return\n            }\n        }\n\n        this.onChange.emit({ type: 'experience', data: this.experience })\n        this.jobError = ''\n    }\n\n    changeEducation(): void {\n        for (const university of this.education) {\n            if (this.isEmpty(university)) {\n                this.jobError = 'All fields must be filled'\n                return\n            }\n\n            if (!this.dateValidation(university.start, university.end)) {\n                this.educationError = 'The graduation date of the university cannot be earlier than the admission date'\n                return\n            }\n        }\n\n        this.onChange.emit({ type: 'education', data: this.education })\n        this.educationError = ''\n    }\n\n    entries(object: any): Array<any> {\n        return Object.entries(object)\n    }\n\n    isEmpty(entity: any): boolean {\n        entity = Object.entries(entity)\n        for (const [_, val] of entity) {\n            if (val === '') return true\n        }\n\n        return false\n    }\n\n    dateValidation(start: string, end: string): boolean {\n        const [startYear, startMonth, startDay] = start.split('-')\n        const [endYear, endMonth, endDay] = end.split('-')\n\n        if (\n            endYear < startYear\n            || ((endYear === startYear) && (endMonth < startMonth))\n            || ((endYear === startYear) && (endMonth === startMonth) && (endDay < startDay))\n        ) return false\n\n        return true\n    }\n\n    ngOnInit(): void {}\n}\n","<div class=\"additional-info-edit\">\n\t<div class=\"role\">\n\t\t<h3 class=\"title\">Role</h3>\n\t\t<div class=\"role__select\">\n\t\t\t<app-select class=\"select\"\n\t\t\t\t\t\t[options]=\"['HR', 'jobseeker']\"\n\t\t\t\t\t\t[selectedByDefault]=\"role ? role : 'Choose your role'\"\n\t\t\t\t\t\t[error]=\"false\"\n\t\t\t\t\t\t(onChange)=\"role = $event\"\n\t\t\t></app-select>\n\t\t\t<button class=\"btn\" [disabled]=\"role === '' || role === 'Choose your role'\" (click)=\"changeRole()\">Choose</button>\n\t\t</div>\n\t\t\n\t</div>\n\t<div class=\"company\" *ngIf=\"role === 'HR'\"></div>\n\t<div class=\"about\">\n\t\t<h3 class=\"title\">About yourself</h3>\n\t\t<textarea [(ngModel)]=\"about\" class=\"about__textarea control-textarea\" rows=\"6\" placeholder=\"White about yourself\"></textarea>\n\t\t<button class=\"btn\" [disabled]=\"about === ''\" (click)=\"changeAbout()\">Save</button>\n\t</div>\n\t<div class=\"profession\">\n\t\t<h3 class=\"title\">Profession</h3>\n\t\t<input class=\"control\" [(ngModel)]=\"profession\" type=\"text\" id=\"profession\" placeholder=\"White your profession\">\n\t\t<button class=\"btn\" [disabled]=\"profession === ''\" (click)=\"changeProfession()\">Save</button>\n\t</div>\n\t<div class=\"locality\">\n\t\t<h3 class=\"title\">Locality</h3>\n\t\t<form [formGroup]=\"localityForm\" id=\"locality\" (ngSubmit)=\"changeLocality()\">\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tCountry\n\t\t\t\t<input class=\"control\" type=\"text\" formControlName=\"country\" name=\"country\">\n\t\t\t</label>\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tCity\n\t\t\t\t<input class=\"control\" type=\"text\" formControlName=\"city\" name=\"city\">\n\t\t\t</label>\n\t\t\t<button class=\"btn\" type=\"submit\" [disabled]=\"localityForm.invalid\">Save</button>\n\t\t</form>\n\t</div>\n\t<div class=\"contact-info\">\n\t\t<h3 class=\"title\">Contact Information</h3>\n\t\t<p class=\"help\">Write here ways of contacting you. Please note that this data will be available to everyone!</p>\n\t\t\n\t\t<div class=\"error\" *ngIf=\"projectsError\">{{ projectsError }}</div>\n\t\t\n\t\t<label *ngFor=\"let contact of contactInfo\" class=\"control-wrapper\">\n\t\t\t<input class=\"control\" [(ngModel)]=\"contact.contactWay\" type=\"text\" placeholder=\"Way of contact\">\n\t\t\t<input class=\"control\" [(ngModel)]=\"contact.data\" type=\"text\" placeholder=\"Contact data\">\n\t\t\t<svg icon=\"close\" class=\"remove\" (click)=\"removeContactWay(contact)\"></svg>\n\t\t</label>\n\t\t\n\t\t<div class=\"controls\">\n\t\t\t<button class=\"btn\" (click)=\"addContactWay()\">Add</button>\n\t\t\t<button class=\"btn\">Save</button>\n\t\t</div>\n\t\t\n\t</div>\n\t<div class=\"projects\">\n\t\t<h3 class=\"title\">Projects</h3>\n\t\t<div class=\"error\" *ngIf=\"projectsError\">{{ projectsError }}</div>\n\t\t<div *ngFor=\"let project of projects, let i = index\" class=\"project\">\n\t\t\t<svg class=\"close\" icon=\"close\" (click)=\"removeProject(project)\"></svg>\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tName\n\t\t\t\t<input [(ngModel)]=\"project.name\" class=\"control\" type=\"text\">\n\t\t\t</label>\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tRole\n\t\t\t\t<input [(ngModel)]=\"project.role\"class=\"control\" type=\"text\">\n\t\t\t</label>\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tDate\n\t\t\t\t<input [(ngModel)]=\"project.date\" class=\"control\" type=\"date\">\n\t\t\t</label>\n\t\t\t<label class=\"control-wrapper\">\n\t\t\t\tAbout\n\t\t\t\t<textarea class=\"control-textarea\" [(ngModel)]=\"project.about\" rows=\"3\" placeholder=\"Write about project\"></textarea>\n\t\t\t</label>\n\t\t\t<div class=\"poster-upload\">\n\t\t\t\tUpload poster\n\t\t\t\t<input class=\"hidden\" type=\"file\" (change)=\"uploadPosterHandler($event, project)\" #input_file>\n\t\t\t\t<button class=\"btn-outline upload\" (click)=\"input_file.click()\">Upload</button>\n\t\t\t\t<div *ngIf=\"project.poster\" class=\"uploaded\" #uploaded>\n\t\t\t\t\t<img [src]=\"project.poster.url\" alt=\"poster\">\n\t\t\t\t\t<span class=\"size\">{{ uploaded.clientWidth + 'x' + uploaded.clientHeight }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"controls\">\n\t\t\t<button class=\"btn\" (click)=\"addProject()\">Add</button>\n\t\t\t<button class=\"btn\">Save</button>\n\t\t</div>\n\t</div>\n\t<div class=\"experience\">\n\t\t<h3 class=\"title\">Experience</h3>\n\t\t<div class=\"error\" *ngIf=\"jobError\">{{ jobError }}</div>\n\t\t<div *ngFor=\"let job of experience\" class=\"job\">\n\t\t\t<svg class=\"close\" icon=\"close\" (click)=\"removeJob(job)\"></svg>\n\t\t\t<div class=\"company\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tCompany\n\t\t\t\t\t<input type=\"text\" class=\"control\" [(ngModel)]=\"job.companyName\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"profession\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tProfession\n\t\t\t\t\t<input type=\"text\" class=\"control\" [(ngModel)]=\"job.profession\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"start\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tWorked from\n\t\t\t\t\t<input type=\"date\" class=\"control\" [(ngModel)]=\"job.start\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"end\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tWorked to\n\t\t\t\t\t<input type=\"date\" class=\"control\" [(ngModel)]=\"job.end\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"logo\">\n\t\t\t\tLogo\n\t\t\t\t<div *ngIf=\"job.logo\" class=\"uploaded\" #uploaded>\n\t\t\t\t\t<img [src]=\"job.logo.url\" alt=\"logo\">\n\t\t\t\t\t<span class=\"size\">{{ uploaded.clientWidth + 'x' + uploaded.clientHeight }}</span>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"btn-outline upload\" (click)=\"job_logo_upload.click()\">Upload</button>\n\t\t\t\t<input type=\"file\" class=\"hidden\" #job_logo_upload (change)=\"uploadJobLogoHandler($event, job)\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"controls\">\n\t\t\t<button class=\"btn\" (click)=\"addJob()\">Add</button>\n\t\t\t<button class=\"btn\" (click)=\"changeExperience()\">Save</button>\n\t\t</div>\n\t</div>\n\t<div class=\"education\">\n\t\t<h3 class=\"title\">Education</h3>\n\t\t<div class=\"error\" *ngIf=\"educationError\">{{ educationError }}</div>\n\t\t\n\t\t<div *ngFor=\"let university of education\" class=\"university\">\n\t\t\t<svg class=\"close\" icon=\"close\" (click)=\"removeUniversity(university)\"></svg>\n\t\t\t<div class=\"name\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tUniversity name\n\t\t\t\t\t<input type=\"text\" class=\"control\" [(ngModel)]=\"university.name\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"faculty-and-degree\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tFaculty and degree\n\t\t\t\t\t<input type=\"text\" class=\"control\" [(ngModel)]=\"university.facultyAndDegree\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"start\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tStudied from\n\t\t\t\t\t<input type=\"date\" class=\"control\" [(ngModel)]=\"university.start\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"end\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tStudied to\n\t\t\t\t\t<input type=\"date\" class=\"control\" [(ngModel)]=\"university.end\">\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"comment\">\n\t\t\t\t<label class=\"control-wrapper\">\n\t\t\t\t\tComment\n\t\t\t\t\t<textarea rows=\"3\" class=\"control-textarea\" [(ngModel)]=\"university.comment\"></textarea>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class=\"logo\">\n\t\t\t\tLogo\n\t\t\t\t<div *ngIf=\"university.logo\" class=\"uploaded\" #uploaded>\n\t\t\t\t\t<img [src]=\"university.logo.url\" alt=\"logo\">\n\t\t\t\t\t<span class=\"size\">{{ uploaded.clientWidth + 'x' + uploaded.clientHeight }}</span>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"btn-outline upload\" (click)=\"university_logo_upload.click()\">Upload</button>\n\t\t\t\t<input type=\"file\" class=\"hidden\" #university_logo_upload (change)=\"uploadUniversityLogoHandler($event, university)\">\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"controls\">\n\t\t\t<button class=\"btn\" (click)=\"addUniversity()\">Add</button>\n\t\t\t<button class=\"btn\" (click)=\"changeEducation()\">Save</button>\n\t\t</div>\n\t</div>\n</div>\n","import { Injectable } from '@angular/core'\nimport { Actions, Effect, ofType } from '@ngrx/effects'\nimport { ProfileService } from '../../services/profile.service'\nimport {\n    ACCEPT_CONNECTION_ACTION_TYPE,\n    CANCEL_CONNECTION_ACTION_TYPE,\n    DECLINE_CONNECTION_ACTION_TYPE,\n    GET_MY_PROFILE_INFO_ACTION_TYPE,\n    REMOVE_CONNECTION_ACTION_TYPE,\n    JOIN_TO_CHAT,\n    MyProfileAcceptConnectionAction,\n    MyProfileAcceptConnectionSuccessAction,\n    MyProfileActions,\n    MyProfileCancelConnectionAction,\n    MyProfileCancelConnectionSuccessAction,\n    MyProfileDeclineConnectionAction,\n    MyProfileDeclineConnectionSuccessAction,\n    MyProfileGetInfoAction,\n    MyProfileGetInfoSuccessAction,\n    MyProfileRemoveConnectionAction,\n    MyProfileRemoveConnectionSuccessAction,\n    MyProfileChangeRoleAction,\n    CHANGE_ROLE_ACTION_TYPE,\n    CHANGE_ABOUT_ACTION_TYPE,\n    MyProfileChangeAboutAction,\n    CHANGE_PROFESSION_ACTION_TYPE,\n    MyProfileChangeProfessionAction,\n    MyProfileChangeRoleSuccessAction,\n    MyProfileChangeAboutSuccessAction,\n    MyProfileChangeProfessionSuccessAction,\n    MyProfileChangeLocalityAction,\n    MyProfileChangeLocalitySuccessAction,\n    CHANGE_LOCALITY_ACTION_TYPE,\n    MyProfileChangeContactInfoAction,\n    CHANGE_CONTACT_INFO_ACTION_TYPE,\n    MyProfileChangeContactInfoSuccessAction,\n    CHANGE_PROJECTS_ACTION_TYPE,\n    MyProfileChangeProjectsAction,\n    MyProfileChangeProjectsSuccessAction,\n    CHANGE_EXPERIENCE_ACTION_TYPE,\n    MyProfileChangeExperienceAction,\n    MyProfileChangeEducationSuccessAction, CHANGE_EDUCATION_ACTION_TYPE, MyProfileChangeEducationAction,\n} from './my-profile.actions'\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../environments/environment'\nimport { IUser } from '../../interfaces/user'\nimport { EMPTY, Observable } from 'rxjs'\nimport { ChatService } from '../../services/chat.service'\n\n@Injectable()\nexport class MyProfileEffects {\n    constructor(\n        private actions$: Actions,\n        private profileService: ProfileService,\n        private chatService: ChatService,\n        private http: HttpClient,\n    ) {}\n\n    @Effect()\n    getProfileInfo$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(GET_MY_PROFILE_INFO_ACTION_TYPE),\n            switchMap((action: MyProfileGetInfoAction) => {\n                if (Number.isInteger(action.payload.id)) {\n                    return this.profileService\n                        .getProfileInfo<{ user: IUser }>(action.payload.id)\n                        .pipe(\n                            map(res => {\n                                console.log(res.user)\n                                return new MyProfileGetInfoSuccessAction({\n                                    profile: res.user,\n                                })\n                            }),\n                            catchError(() => EMPTY),\n                        )\n                }\n                return EMPTY\n            }),\n        )\n    }\n\n    @Effect()\n    acceptConnection$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(ACCEPT_CONNECTION_ACTION_TYPE),\n            switchMap((action: MyProfileAcceptConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .acceptConnection(\n                        payload.senderId,\n                        payload.userId,\n                        payload.date,\n                    )\n                    .pipe(\n                        map(res => {\n                            this.chatService.joinToChat(res.chatId)\n                            return new MyProfileAcceptConnectionSuccessAction({\n                                senderId: payload.senderId,\n                                date: payload.date,\n                            })\n                        }),\n                        catchError(err => {\n                            console.log(\n                                'MyProfileAcceptConnectionAction error: ',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    declineConnection$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(DECLINE_CONNECTION_ACTION_TYPE),\n            switchMap((action: MyProfileDeclineConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .declineConnection(payload.senderId, payload.userId)\n                    .pipe(\n                        map(\n                            () =>\n                                new MyProfileDeclineConnectionSuccessAction({\n                                    senderId: payload.senderId,\n                                }),\n                        ),\n                        catchError(err => {\n                            console.log(\n                                'MyProfileDeclineConnectionAction error:',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    cancelConnection$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CANCEL_CONNECTION_ACTION_TYPE),\n            switchMap((action: MyProfileCancelConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .cancelConnection(payload.senderId, payload.userId)\n                    .pipe(\n                        map(\n                            () =>\n                                new MyProfileCancelConnectionSuccessAction({\n                                    userId: payload.userId,\n                                }),\n                        ),\n                        catchError(err => EMPTY),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    removeConnection$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(REMOVE_CONNECTION_ACTION_TYPE),\n            mergeMap((action: MyProfileRemoveConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .removeConnection(payload.senderId, payload.userId)\n                    .pipe(\n                        map(\n                            () =>\n                                new MyProfileRemoveConnectionSuccessAction({\n                                    userId: payload.userId,\n                                }),\n                        ),\n                        catchError(err => {\n                            console.log(\n                                'ProfileRemoveConnectionAction error:',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    changeRole$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_ROLE_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeRoleAction) => {\n                const { role, id } = action.payload\n                return this.profileService\n                    .changeRole(role, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeRoleSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    // changeCompany$(): Observable<MyProfileActions> {}\n\n    @Effect()\n    changeAbout$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_ABOUT_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeAboutAction) => {\n                const { about, id } = action.payload\n                return this.profileService\n                    .changeAbout(about, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeAboutSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeProfession$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_PROFESSION_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeProfessionAction) => {\n                const { profession, id } = action.payload\n                return this.profileService\n                    .changeProfession(profession, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeProfessionSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeLocality$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_LOCALITY_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeLocalityAction) => {\n                const { locality, id } = action.payload\n                return this.profileService\n                    .changeLocality(locality, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeLocalitySuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeContactInfo$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_CONTACT_INFO_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeContactInfoAction) => {\n                const { contactInfo, id } = action.payload\n                return this.profileService\n                    .changeContactInfo(contactInfo, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeContactInfoSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeProjects$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_PROJECTS_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeProjectsAction) => {\n                const { projects, id } = action.payload\n                return this.profileService\n                    .changeProjects(projects, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeProjectsSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeExperience$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_EXPERIENCE_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeExperienceAction) => {\n                const { experience, id } = action.payload\n                return this.profileService\n                    .changeExperience(experience, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeEducationSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n\n    @Effect()\n    changeEducation$(): Observable<MyProfileActions> {\n        return this.actions$.pipe(\n            ofType(CHANGE_EDUCATION_ACTION_TYPE),\n            mergeMap((action: MyProfileChangeEducationAction) => {\n                const { education, id } = action.payload\n                return this.profileService\n                    .changeEducation(education, id)\n                    .pipe(\n                        map(changed => {\n                            console.log(changed)\n                            return new MyProfileChangeEducationSuccessAction({})\n                        }),\n                        catchError(err => {\n                            console.log(err)\n                            return EMPTY\n                        })\n                    )\n            })\n        )\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { ComponentsModule } from '../../components/components.module'\nimport { SvgIconModule } from '../../svg-icon/svg-icon.module'\n\nimport { ProfileComponent } from './profile.component'\nimport { ProfileMainComponent } from './profile-main/profile-main.component'\nimport { ProfileSideComponent } from './profile-side/profile-side.component'\n\nimport { EditProfileSideComponent } from './edit-profile/edit-profile-side/edit-profile-side.component'\nimport { EditProfileMainComponent } from './edit-profile/edit-profile-main/edit-profile-main.component'\nimport { EditProfileComponent } from './edit-profile/edit-profile.component'\nimport { EditPersonalDataComponent } from './edit-profile/edit-components/edit-personal-data/edit-personal-data.component'\nimport { EditLoginAndSecurityComponent } from './edit-profile/edit-components/edit-login-and-security/edit-login-and-security.component'\nimport { EditAdditionalInfoComponent } from './edit-profile/edit-components/edit-additional-info/edit-additional-info.component'\nimport { PipesModule } from '../../pipes/pipes.module'\nimport { VarDirective } from '../../directives/var.directive'\nimport { DirectivesModule } from '../../directives/directives.module'\n\n@NgModule({\n    declarations: [\n        ProfileComponent,\n        ProfileMainComponent,\n        ProfileSideComponent,\n        EditProfileComponent,\n        EditProfileSideComponent,\n        EditProfileMainComponent,\n        EditPersonalDataComponent,\n        EditLoginAndSecurityComponent,\n        EditAdditionalInfoComponent,\n    ],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        RouterModule,\n        ReactiveFormsModule,\n        SvgIconModule,\n        FormsModule,\n        PipesModule,\n        DirectivesModule,\n    ],\n})\nexport class ProfileModule {}\n","<div class=\"chat\">\n\t<div class=\"chat__header\">\n\t\t<div class=\"buddy-info\">\n\t\t\t<div class=\"name\">Chat with <span>{{ 'buddy name' }}</span></div>\n\t\t\t<div class=\"online-status\" >\n\t\t\t\t{{\n                \tbuddy.isOnline\n                    ? 'Online'\n                    : 'Last seen ' + dateParser(Date.now(), buddy.lastOnline)\n\t\t\t\t}}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"shared-media\">\n\t\t\tShared media ({{ 'shared.length' }})\n\t\t</div>\n\t</div>\n\t<div class=\"chat__body\">\n\t\t<div class=\"messages\">\n\t\t\t<div class=\"day\">\n\t\t\t\tYesterday, 12 apr\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let message of messages\"\n\t\t\t\t [class.message-in]=\"message.type === 'in'\"\n\t\t\t\t [class.message-out]=\"message.type === 'out'\"\n\t\t\t>\n\t\t\t\t<div class=\"message\">\n\t\t\t\t\t<div class=\"content\">{{ message.content }}</div>\n\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t<div class=\"time\">{{ message.time | date: 'h:mm a' }}</div>\n\t\t\t\t\t\t<div *ngIf=\"message.type === 'out' && message.status\" class=\"status\">\n\t\t\t\t\t\t\t<svg *ngIf=\"message.status === 'wait'\" icon=\"chatStatusWait\"></svg>\n\t\t\t\t\t\t\t<svg *ngIf=\"message.status === 'sent'\" icon=\"chatStatusSent\"></svg>\n\t\t\t\t\t\t\t<svg *ngIf=\"message.status === 'read'\" icon=\"chatStatusRead\"></svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"chat__footer\">\n\t\t<textarea\n\t\t\t\trows=\"3\"\n\t\t\t\tcontenteditable=\"true\"\n\t\t\t\tonblur=\"this.value = this.value.trim()\"\n\t\t\t\tplaceholder=\"White your message\"\n\t\t\t\t[(ngModel)]=\"messageContent\"\n\t\t></textarea>\n\t\t<div class=\"controls\">\n\t\t\t<svg class=\"attach\" icon=\"attach\"></svg>\n\t\t\t<button (click)=\"sendMessage()\" class=\"send\">\n\t\t\t\t<svg icon=\"send\"></svg>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core'\nimport { ChatService } from '../../../services/chat.service'\n\n@Component({\n    selector: 'app-chat-main',\n    templateUrl: './chat-main.component.html',\n    styleUrls: ['./chat-main.component.less'],\n})\nexport class ChatMainComponent implements OnInit {\n    constructor(private chatService: ChatService) {}\n\n    buddy = {\n        isOnline: false,\n        lastOnline: Date.now() - 60 * 60 * 5,\n    }\n\n    Date = Date\n\n    messageContent: string = ''\n\n    messages = [\n        {\n            type: 'in',\n            content: 'Hello!',\n            time: Date.now(),\n            status: 'sent',\n        },\n        {\n            type: 'in',\n            content: 'How do you do?',\n            time: Date.now(),\n            status: 'sent',\n        },\n        {\n            type: 'out',\n            content: 'Hello, my friend!',\n            time: Date.now(),\n            status: 'read',\n        },\n        {\n            type: 'out',\n            content: \"I'm fine, thank you)\",\n            time: Date.now(),\n            status: 'read',\n        },\n        {\n            type: 'out',\n            content: 'And you?',\n            time: Date.now(),\n            status: 'read',\n        },\n    ]\n\n    sendMessage(): void {\n        this.chatService.test(this.messageContent)\n    }\n\n    dateParser(now: number, last: number): string {\n        const deltaSec = (now - last) / 1000\n        const secondsPerDay = 60 * 60 * 24\n        const secondsPerHour = 60 * 60\n        const secondsPerMinute = 60\n\n        if (deltaSec > secondsPerDay) {\n            const days = Math.floor(deltaSec / secondsPerDay)\n            if (days < 2) return 'day ago'\n            return Math.floor(deltaSec / secondsPerDay) + ' days ago'\n        } else if (deltaSec > secondsPerHour) {\n            const hours = Math.floor(deltaSec / secondsPerDay)\n            if (hours < 2) return 'hour ago'\n            return Math.floor(deltaSec / secondsPerHour) + ' hours ago'\n        } else if (deltaSec > secondsPerMinute) {\n            const minutes = Math.floor(deltaSec / secondsPerDay)\n            if (minutes < 2) return 'minute ago'\n            return Math.floor(deltaSec / secondsPerMinute) + ' minutes ago'\n        } else return 'minute ago'\n    }\n\n    ngOnInit(): void {}\n}\n","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment'\nimport { Observable, of } from 'rxjs'\nimport { AuthState } from '../store/auth/auth.reducer'\nimport { IUser } from '../interfaces/user'\nimport { map } from 'rxjs/operators'\nimport { IPersonalInfo } from '../interfaces/edit-profile/personalInfo'\nimport {IContact} from \"../interfaces/contact\";\nimport {IProject} from \"../interfaces/project\";\nimport {IExp} from \"../interfaces/exp\";\nimport {IUniversity} from \"../interfaces/university\";\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProfileService {\n    constructor(private http: HttpClient) {}\n\n    getProfileInfo<T>(id: number | string): Observable<T> {\n        return this.http.get<T>(`${environment.server_url}/users/find/${id}`)\n    }\n\n    getConnectionsById$(\n        connections: { userId: number; date: number }[],\n    ): Observable<{ user: IUser; date: number }[]> {\n        const identifiers = connections.map(connection => connection.userId)\n        if (identifiers.length > 1) {\n            return this.getProfileInfo<{ users: IUser[] }>(\n                identifiers.join(','),\n            ).pipe(\n                map(res => {\n                    return connections.map(connection => {\n                        return {\n                            user: res.users.find(\n                                us => us.id === connection.userId,\n                            ) as IUser,\n                            date: connection.date,\n                        }\n                    })\n                }),\n            )\n        } else if (identifiers.length === 1) {\n            return this.getProfileInfo<{ user: IUser }>(\n                identifiers.join(','),\n            ).pipe(\n                map(res => {\n                    return connections.map(connection => {\n                        return {\n                            user: res.user,\n                            date: connection.date,\n                        }\n                    })\n                }),\n            )\n        } else {\n            console.log('connections is empty')\n            return of([])\n        }\n    }\n\n    sendConnection(\n        senderId: number,\n        userId: number,\n        message: string,\n    ): Observable<{ sent: boolean }> {\n        return this.http.post<{ sent: boolean }>(\n            `${environment.server_url}/users/connections/send/${userId}`,\n            {\n                senderId,\n                message,\n            },\n        )\n    }\n    acceptConnection(\n        senderId: number,\n        userId: number,\n        date: number,\n    ): Observable<{ user: IUser; chatId: number }> {\n        return this.http.post<{ user: IUser; chatId: number }>(\n            `${environment.server_url}/users/connections/accept/${senderId}`,\n            { userId, date },\n        )\n    }\n    declineConnection(senderId: number, userId: number): Observable<IUser> {\n        return this.http.post<IUser>(\n            `${environment.server_url}/users/connections/decline/${senderId}`,\n            { userId },\n        )\n    }\n    cancelConnection(senderId: number, userId: number): Observable<IUser> {\n        return this.http.post<IUser>(\n            `${environment.server_url}/users/connections/decline/${senderId}`,\n            { userId },\n        )\n    }\n    removeConnection(senderId: number, userId: number): Observable<IUser> {\n        return this.http.post<IUser>(\n            `${environment.server_url}/users/connections/remove/${senderId}`,\n            { userId },\n        )\n    }\n\n    editPersonalInfo(info: IPersonalInfo, id: number): Observable<any> {\n        return this.http.post(\n            `${environment.server_url}/users/find/${id}/edit/profile-info`,\n            info,\n        )\n    }\n\n    changeAvatar(\n        fileToUpload: File,\n        id: number,\n    ): Observable<{ message: string; url: string }> {\n        const formData: FormData = new FormData()\n        formData.append('avatar', fileToUpload, fileToUpload.name)\n        console.log(formData)\n        return this.http.post<{ message: string; url: string }>(\n            `${environment.server_url}/users/${id}/avatar/upload`,\n            formData,\n        )\n    }\n\n    deleteAvatar(id: number): Observable<{ message: string }> {\n        return this.http.delete<{ message: string }>(\n            `${environment.server_url}/users/${id}/avatar/delete`,\n        )\n    }\n\n    changeEmail(id: number, email: string): Observable<{ message: string }> {\n        return this.http.post<{ message: string }>(\n            `${environment.server_url}/users/${id}/change/email`,\n            { email },\n        )\n    }\n    changePhone(id: number, phone: string): Observable<{ message: string }> {\n        return this.http.post<{ message: string }>(\n            `${environment.server_url}/users/${id}/change/phone`,\n            { phone },\n        )\n    }\n    changePassword(\n        id: number,\n        newPassword: string,\n        oldPassword: string,\n    ): Observable<{ message: string }> {\n        return this.http.post<{ message: string }>(\n            `${environment.server_url}/users/${id}/change/password`,\n            { oldPassword, newPassword },\n        )\n    }\n\n    deleteAccount(userId: number, password: string): Observable<any> {\n        return this.http.post(\n            `${environment.server_url}/users/remove/${userId}`,\n            { password },\n        )\n    }\n\n    changeRole(role: string, id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/role`, { role })\n    }\n    changeCompany(company: any, id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/company`, { company })\n    }\n    changeAbout(about: string, id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/about`, { about })\n    }\n    changeProfession(profession: string, id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/profession`, { profession })\n    }\n    changeLocality(locality: { country: string; city: string }, id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/locality`, { locality })\n    }\n    changeContactInfo(contactInfo: IContact[], id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/contact-info`, { contactInfo })\n    }\n    changeProjects(projects: IProject[], id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/projects`, { projects })\n    }\n    changeExperience(experience: IExp[], id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/experience`, { experience })\n    }\n    changeEducation(education: IUniversity[], id: number): Observable<any> {\n        return this.http.post(`${environment.server_url}/users/${id}/change/education`, { education })\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    server_url: '', // http://localhost:3000\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\nimport { Actions, Effect, ofType } from '@ngrx/effects'\nimport { ProfileService } from '../../services/profile.service'\nimport {\n    ACCEPT_CONNECTION_ACTION_TYPE,\n    DECLINE_CONNECTION_ACTION_TYPE,\n    GET_PROFILE_INFO_ACTION_TYPE,\n    ProfileAcceptConnectionAction,\n    ProfileAcceptConnectionSuccessAction,\n    ProfileActions,\n    ProfileDeclineConnectionAction,\n    ProfileDeclineConnectionSuccessAction,\n    ProfileGetInfoAction,\n    ProfileGetInfoSuccessAction,\n    ProfileRemoveConnectionAction,\n    ProfileRemoveConnectionSuccessAction,\n    ProfileSendConnectionAction,\n    ProfileSendConnectionSuccessAction,\n    REMOVE_CONNECTION_ACTION_TYPE,\n    SEND_CONNECTION_ACTION_TYPE,\n} from './profile.actions'\nimport { catchError, map, switchMap } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../environments/environment'\nimport { IUser } from '../../interfaces/user'\nimport { EMPTY, Observable, of } from 'rxjs'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class ProfileEffects {\n    constructor(\n        private actions$: Actions,\n        private profileService: ProfileService,\n        private http: HttpClient,\n        private router: Router,\n    ) {}\n\n    @Effect()\n    getProfileInfo$(): Observable<ProfileActions> {\n        return this.actions$.pipe(\n            ofType(GET_PROFILE_INFO_ACTION_TYPE),\n            switchMap((action: ProfileGetInfoAction) => {\n                if (Number.isInteger(action.payload.id)) {\n                    return this.profileService\n                        .getProfileInfo<{ user: IUser }>(action.payload.id)\n                        .pipe(\n                            map(res => {\n                                return new ProfileGetInfoSuccessAction({\n                                    profile: res.user,\n                                })\n                            }),\n                            catchError(() => {\n                                this.router.navigate(['/profile/not-found'])\n                                return EMPTY\n                            }),\n                        )\n                }\n                return EMPTY\n            }),\n        )\n    }\n\n    @Effect()\n    sendConnection$(): Observable<ProfileActions> {\n        return this.actions$.pipe(\n            ofType(SEND_CONNECTION_ACTION_TYPE),\n            switchMap((action: ProfileSendConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .sendConnection(\n                        payload.senderId,\n                        payload.userId,\n                        payload.message,\n                    )\n                    .pipe(\n                        map(() => {\n                            return new ProfileSendConnectionSuccessAction({\n                                senderId: payload.senderId,\n                            })\n                        }),\n                        catchError(err => {\n                            console.log('send connection effect error: ', err)\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    acceptConnection$(): Observable<ProfileActions> {\n        return this.actions$.pipe(\n            ofType(ACCEPT_CONNECTION_ACTION_TYPE),\n            switchMap((action: ProfileAcceptConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .acceptConnection(\n                        payload.senderId,\n                        payload.userId,\n                        payload.date,\n                    )\n                    .pipe(\n                        map(\n                            () =>\n                                new ProfileAcceptConnectionSuccessAction({\n                                    userId: payload.userId,\n                                    date: payload.date,\n                                }),\n                        ),\n                        catchError(err => {\n                            console.log(\n                                'ProfileAcceptConnectionAction error: ',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    declineConnection$(): Observable<ProfileActions> {\n        return this.actions$.pipe(\n            ofType(DECLINE_CONNECTION_ACTION_TYPE),\n            switchMap((action: ProfileDeclineConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .declineConnection(payload.senderId, payload.userId)\n                    .pipe(\n                        map(\n                            () =>\n                                new ProfileDeclineConnectionSuccessAction({\n                                    senderId: payload.senderId,\n                                }),\n                        ),\n                        catchError(err => {\n                            console.log(\n                                'ProfileDeclineConnectionAction error:',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    removeConnection$(): Observable<ProfileActions> {\n        return this.actions$.pipe(\n            ofType(REMOVE_CONNECTION_ACTION_TYPE),\n            switchMap((action: ProfileRemoveConnectionAction) => {\n                const payload = action.payload\n                return this.profileService\n                    .removeConnection(payload.senderId, payload.userId)\n                    .pipe(\n                        map(\n                            () =>\n                                new ProfileRemoveConnectionSuccessAction({\n                                    senderId: payload.senderId,\n                                }),\n                        ),\n                        catchError(err => {\n                            console.log(\n                                'ProfileRemoveConnectionAction error:',\n                                err,\n                            )\n                            return EMPTY\n                        }),\n                    )\n            }),\n        )\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core'\nimport { ProfileState } from '../../../store/profile/profile.reducer'\nimport { initialProfileState } from '../profile.component'\nimport { Observable } from 'rxjs'\nimport { select, Store } from '@ngrx/store'\nimport {\n    profileAvatarSelector,\n    profileConnectionsSelector,\n    profileDescriptionSelector,\n    profileHeaderBgSelector,\n    profileLocalitySelector,\n    profileNameSelector,\n    profileProfessionSelector,\n    profileSelector,\n    profileSentConnectionsSelector,\n} from '../../../store/profile/profile.selectors'\nimport { IUser } from '../../../interfaces/user'\nimport { map, switchMap } from 'rxjs/operators'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport {\n    myProfileReceivedConnectionsSelector,\n    myProfileSelector,\n} from '../../../store/my-profile/my-profile.selectors'\n\n// @ts-ignore\nimport { HystModal } from '../../../plugins/hystModal_.js'\nimport {\n    ProfileAcceptConnectionAction,\n    ProfileDeclineConnectionAction,\n    ProfileRemoveConnectionAction,\n    ProfileSendConnectionAction,\n} from '../../../store/profile/profile.actions'\nimport { ProfileService } from '../../../services/profile.service'\n\n@Component({\n    selector: 'app-profile-main',\n    templateUrl: './profile-main.component.html',\n    styleUrls: ['./profile-main.component.less', '../profile.component.less'],\n})\nexport class ProfileMainComponent implements OnInit {\n    constructor(\n        private store$: Store<ProfileState | MyProfileState>,\n        private profileService: ProfileService,\n    ) {}\n\n    @Input() isMyProfile: boolean = false\n\n    currentTab = 'profile'\n\n    headerBg$: Observable<string> = this.store$.pipe(\n        select(profileHeaderBgSelector),\n    )\n    avatar$: Observable<string> = this.store$.pipe(\n        select(profileAvatarSelector),\n    )\n    fullName$: Observable<string> = this.store$.pipe(\n        select(profileNameSelector),\n    )\n    description$: Observable<string> = this.store$.pipe(\n        select(profileDescriptionSelector),\n    )\n    profession$: Observable<string> = this.store$.pipe(\n        select(profileProfessionSelector),\n    )\n    connections$: Observable<\n        { user: IUser; date: number }[]\n    > = this.store$.pipe(\n        select(profileConnectionsSelector),\n        switchMap(connections => {\n            return this.profileService.getConnectionsById$(connections)\n        }),\n    )\n    connectionsLength$: Observable<number> = this.connections$.pipe(\n        map(connections => connections.length),\n    )\n    locality$: Observable<string> = this.store$.pipe(\n        select(profileLocalitySelector),\n    )\n\n    sentConnection: boolean = false\n    incomingConnection: boolean = false\n    isConnection: boolean = false\n\n    myProfile = { id: 0 }\n    profile = { id: 0 }\n\n    connectionsListModal: HystModal\n\n    sendConnection(message: string): void {\n        this.store$.dispatch(\n            new ProfileSendConnectionAction({\n                senderId: this.myProfile.id,\n                userId: this.profile.id,\n                message,\n            }),\n        )\n    }\n\n    acceptConnection(): void {\n        this.store$.dispatch(\n            new ProfileAcceptConnectionAction({\n                senderId: this.profile.id,\n                userId: this.myProfile.id,\n                date: Date.now(),\n            }),\n        )\n    }\n\n    declineConnection(): void {\n        this.store$.dispatch(\n            new ProfileDeclineConnectionAction({\n                senderId: this.myProfile.id,\n                userId: this.profile.id,\n            }),\n        )\n    }\n\n    removeConnection(): void {\n        this.store$.dispatch(\n            new ProfileRemoveConnectionAction({\n                senderId: this.myProfile.id,\n                userId: this.profile.id,\n            }),\n        )\n    }\n\n    activateTab(e: MouseEvent): void {\n        const element = e.target as HTMLElement\n        const parent = element.parentNode as HTMLElement\n        const children = Array.from(parent.children)\n\n        children.forEach(el => el.classList.remove('active'))\n\n        element.classList.add('active')\n        this.currentTab = (element.textContent as string).toLowerCase()\n    }\n\n    ngOnInit(): void {\n        const sendConnectionModal = new HystModal({\n            linkAttributeName: 'data-hystmodal',\n        })\n\n        const connectionsListModal = new HystModal({\n            linkAttributeName: 'data-hystmodal',\n        })\n\n        const profile$ = this.store$.pipe(select(profileSelector))\n\n        this.store$\n            .pipe(select(myProfileSelector))\n            .subscribe(res => (this.myProfile = res))\n\n        profile$.subscribe(res => {\n            this.profile = res\n            this.store$\n                .pipe(\n                    select(profileSentConnectionsSelector),\n                    map(incoming =>\n                        incoming.some(\n                            user => user.userId === this.myProfile.id,\n                        ),\n                    ),\n                )\n                .subscribe(resp => (this.incomingConnection = resp))\n        })\n\n        profile$\n            .pipe(\n                map(user => user.info.receivedConnections),\n                map(received =>\n                    received.some(user => user.userId === this.myProfile.id),\n                ),\n            )\n            .subscribe(res => (this.sentConnection = res))\n\n        profile$\n            .pipe(\n                map(user => user.info.connections),\n                map(connections =>\n                    connections.some(user => user.userId === this.myProfile.id),\n                ),\n            )\n            .subscribe(res => (this.isConnection = res))\n    }\n}\n","<div class=\"profile__main\">\n    <div class=\"profile__header\">\n        <div class=\"profile__header--bg\">\n            <img [src]=\"headerBg$ | async\" alt=\"bg\" />\n        </div>\n        <div class=\"profile__header--info\">\n            <div class=\"avatar-box\" [style]=\"'background: url(' + (avatar$ | async) + ')'\">\n                <img [src]=\"avatar$ | async\" alt=\"avatar\" />\n            </div>\n            <div class=\"information\">\n                <div class=\"information__header\">\n                    <h3 class=\"name\">\n                        {{ fullName$ | async }}\n                        <span>\n                            <img src=\"../../../../assets/img/gold-logo.png\" alt=\"gold-logo\" />\n                        </span>\n                    </h3>\n                    <p class=\"location\">\n                        <span>\n                            <img src=\"../../../../assets/img/location.png\" alt=\"location\" />\n                        </span>\n                        {{ locality$ | async }}\n                    </p>\n                </div>\n                <div class=\"information__content\">\n                    <p>\n                        {{ description$ | async }}\n                    </p>\n                    <button class=\"btn\">Contact Info</button>\n                    <button routerLink=\"/profile/edit\" *ngIf=\"isMyProfile\" class=\"btn\">\n                        <i class=\"fas fa-user-edit\"></i>\n                        Edit profile\n                    </button>\n                    <button *ngIf=\"!isMyProfile && !sentConnection && !isConnection && !incomingConnection\" data-hystmodal=\"#sendConnectionModal\" class=\"btn\">\n                        Send connection\n                    </button>\n                    <button *ngIf=\"!isMyProfile && sentConnection\" class=\"btn-outline\" (click)=\"declineConnection()\">\n                        Connection was sent\n                    </button>\n                    <button *ngIf=\"!isMyProfile && incomingConnection\" class=\"btn-outline\" (click)=\"acceptConnection()\">\n                        Accept connection\n                    </button>\n                    <button *ngIf=\"!isMyProfile && isConnection\" class=\"btn-outline\" (click)=\"removeConnection()\">Remove connection</button>\n                    <button class=\"btn-outline\" data-hystmodal=\"#connectionsListModal\">{{ connectionsLength$ | async }} Connections</button>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"profile__content\">\n        <div (click)=\"activateTab($event)\" class=\"tabs\">\n            <p class=\"tab active\">Profile</p>\n            <p class=\"tab\">Activity & Interest</p>\n            <p class=\"tab\">Articles (3)</p>\n        </div>\n\n        <div class=\"about\">\n            <h3>About</h3>\n            <p>\n                3rd year student of NSTU, I am fond of programming, especially\n                web development and javascript, I study javascript frameworks\n                for both frontend and backend.\n            </p>\n            <p class=\"more\">SEE MORE</p>\n        </div>\n        <div class=\"projects\">\n            <div class=\"head\">\n                <h3>Projects</h3>\n                <p>3 of 12</p>\n            </div>\n\n            <div class=\"cards\">\n                <div class=\"card\">\n                    <img\n                        src=\"../../../../assets/img/project1.png\"\n                        alt=\"project1\"\n                    />\n                    <p class=\"project-name\">Zara redesign concept</p>\n                    <p class=\"info\">UX/UI design, 15.07.2019</p>\n                </div>\n                <div class=\"card\">\n                    <img\n                        src=\"../../../../assets/img/project2.png\"\n                        alt=\"project2\"\n                    />\n                    <p class=\"project-name\">SCTHON event brand identity</p>\n                    <p class=\"info\">Graphic design, 31.03.2019</p>\n                </div>\n                <div class=\"card\">\n                    <img\n                        src=\"../../../../assets/img/project3.png\"\n                        alt=\"project3\"\n                    />\n                    <p class=\"project-name\">Drozd. Brand identity, 2016</p>\n                    <p class=\"info\">Graphic design, 03.04.2016</p>\n                </div>\n            </div>\n\n            <p class=\"more\">SHOW ALL (12)</p>\n        </div>\n        <div class=\"reputation\">\n            <h3>Skills & Endoresments</h3>\n            <div class=\"containers\">\n                <div class=\"container\">\n                    <div class=\"container__header\">\n                        <h4>User experience (UX)</h4>\n                        <p class=\"count\">6</p>\n                    </div>\n\n                    <div class=\"photo-queue\">\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo2.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo3.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo4.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo5.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/count1.png\"\n                            alt=\"Count\"\n                        />\n                    </div>\n                </div>\n\n                <div class=\"container\">\n                    <div class=\"container__header\">\n                        <h4>User interface (UI)</h4>\n                        <p class=\"count\">7</p>\n                    </div>\n\n                    <div class=\"photo-queue\">\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo6.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo7.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo8.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo9.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo10.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/count2.png\"\n                            alt=\"Count\"\n                        />\n                    </div>\n                </div>\n\n                <div class=\"container\">\n                    <div class=\"container__header\">\n                        <h4>Brand Identity</h4>\n                        <p class=\"count\">5</p>\n                    </div>\n\n                    <div class=\"photo-queue\">\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo11.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo12.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo13.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo14.png\"\n                            alt=\"Photo\"\n                        />\n                        <img\n                            src=\"../../../../assets/img/microphotos/Photo15.png\"\n                            alt=\"Photo\"\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <p class=\"more\">SHOW ALL (18)</p>\n        </div>\n        <div class=\"experience\">\n            <h3>Experience</h3>\n\n            <div class=\"container\">\n                <div class=\"container__icon\">\n                    <img\n                        src=\"../../../../assets/img/freelance.png\"\n                        alt=\"freelance\"\n                    />\n                </div>\n                <div class=\"container__main\">\n                    <div class=\"container__header\">\n                        <h4>Freelance UX/UI designer</h4>\n                        <p class=\"position\">\n                            Self Employed <span>Around the world</span>\n                        </p>\n                        <p class=\"date\">\n                            Jun 2016 - Present\n                            <span class=\"duration\">3 yrs 3 mos</span>\n                        </p>\n                    </div>\n                    <div class=\"container__content\">\n                        <p>\n                            Work with clients and web studios as freelancer.\n                            Work in next areas: eCommerce web projects; creative\n                            landing pages; iOs and Android apps; corporate web\n                            sites and corporate identity sometimes.\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"container\">\n                <div class=\"container__icon\">\n                    <img src=\"../../../../assets/img/upwork.png\" alt=\"upwork\" />\n                </div>\n                <div class=\"container__main\">\n                    <div class=\"container__header\">\n                        <h4>UX/UI designer</h4>\n                        <p class=\"company\">Upwork<span>International</span></p>\n                        <p class=\"date\">\n                            Jun 2019 - Present\n                            <span class=\"duration\">3 mos</span>\n                        </p>\n                    </div>\n                    <div class=\"container__content\">\n                        <p>\n                            New experience with Upwork system. Work in next\n                            areas: UX/UI design, graphic design, interaction\n                            design, UX research.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"education\">\n            <h3>Education</h3>\n\n            <div class=\"container\">\n                <div class=\"container__icon\">\n                    <img src=\"../../../../assets/img/NGTU.jpg\" alt=\"NGTU\" />\n                </div>\n\n                <div class=\"container__main\">\n                    <div class=\"container__header\">\n                        <h4>Nizhniy Novgorod State Technical University</h4>\n                        <p class=\"degree\">\n                            Bachelor's Degree in Information Systems and\n                            Technology\n                        </p>\n                        <p class=\"date\">2018 - 2022</p>\n                    </div>\n                    <div class=\"container__content\">\n                        <p>\n                            Additional course on web development on Angular and\n                            independent study of web development on VUE and Nest\n                            js\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal send connection -->\n<div class=\"hystmodal\" id=\"sendConnectionModal\" aria-hidden=\"true\">\n    <div class=\"hystmodal__wrap\">\n        <div class=\"hystmodal__window\" role=\"dialog\" aria-modal=\"true\">\n            <button data-hystclose class=\"hystmodal__close\">Close</button>\n            <div class=\"hystmodal__header\">\n                <h2 class=\"hystmodal__title\">Send connection</h2>\n            </div>\n            <div class=\"hystmodal__body\">\n                <div class=\"message\">\n                    <p class=\"message__title\">Message</p>\n                    <textarea\n                            class=\"message__textarea\"\n                            id=\"message\"\n                            rows=\"6\"\n                            placeholder=\"If you want to say something, write it here\"\n                            #textarea\n                    ></textarea>\n                </div>\n                \n            </div>\n            <div class=\"hystmodal__footer\">\n                <div class=\"controls\">\n                    <button (click)=\"textarea.value = ''\" data-hystclose class=\"btn-outline decline\">Decline</button>\n                    <button (click)=\"sendConnection(textarea.value)\" data-hystclose class=\"btn send\">Send connection</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal connections -->\n<div class=\"hystmodal\" id=\"connectionsListModal\" aria-hidden=\"true\">\n    <div class=\"hystmodal__wrap\">\n        <div class=\"hystmodal__window\" role=\"dialog\" aria-modal=\"true\">\n            <button data-hystclose class=\"hystmodal__close\">Close</button>\n            <div class=\"hystmodal__header\">\n                <h2 class=\"hystmodal__title\">List of connections</h2>\n            </div>\n            <div class=\"hystmodal__body\">\n                <app-users-list [connections]=\"(connections$ | async) || []\" [isMyProfile]=\"isMyProfile\"></app-users-list>\n            </div>\n        </div>\n    </div>\n</div>\n","/* ACTION TYPES */\nimport { Action } from '@ngrx/store'\nimport { ProfileState } from './profile.reducer'\nimport { IUser } from '../../interfaces/user'\n\nexport const GET_PROFILE_INFO_ACTION_TYPE = '[PROFILE] get info'\nexport const GET_PROFILE_INFO_SUCCESS_ACTION_TYPE = '[PROFILE] success get info'\n\nexport const SEND_CONNECTION_ACTION_TYPE = '[PROFILE] send connection'\nexport const ACCEPT_CONNECTION_ACTION_TYPE = '[PROFILE] accept connection'\nexport const DECLINE_CONNECTION_ACTION_TYPE = '[PROFILE] decline connection'\nexport const REMOVE_CONNECTION_ACTION_TYPE = '[PROFILE] remove connection'\n\nexport const SEND_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[PROFILE] success send connection'\nexport const ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[PROFILE] success accept connection'\nexport const DECLINE_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[PROFILE] success decline connection'\nexport const REMOVE_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[PROFILE] success remove connection'\n\n/* ACTIONS */\n\n/*  GET INFO  */\n\nexport class ProfileGetInfoAction implements Action {\n    readonly type = GET_PROFILE_INFO_ACTION_TYPE\n    constructor(\n        public payload: {\n            id: number\n        },\n    ) {}\n}\n\nexport class ProfileGetInfoSuccessAction implements Action {\n    readonly type = GET_PROFILE_INFO_SUCCESS_ACTION_TYPE\n    constructor(public payload: { profile: IUser }) {}\n}\n\n/*  CONNECTIONS  */\n\nexport class ProfileSendConnectionAction implements Action {\n    readonly type = SEND_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n            message: string\n        },\n    ) {}\n}\n\nexport class ProfileAcceptConnectionAction implements Action {\n    readonly type = ACCEPT_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n            date: number\n        },\n    ) {}\n}\n\nexport class ProfileDeclineConnectionAction implements Action {\n    readonly type = DECLINE_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class ProfileRemoveConnectionAction implements Action {\n    readonly type = REMOVE_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class ProfileSendConnectionSuccessAction implements Action {\n    readonly type = SEND_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n        },\n    ) {}\n}\n\nexport class ProfileAcceptConnectionSuccessAction implements Action {\n    readonly type = ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            userId: number\n            date: number\n        },\n    ) {}\n}\n\nexport class ProfileDeclineConnectionSuccessAction implements Action {\n    readonly type = DECLINE_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n        },\n    ) {}\n}\n\nexport class ProfileRemoveConnectionSuccessAction implements Action {\n    readonly type = REMOVE_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n        },\n    ) {}\n}\n\nexport type ProfileActions =\n    | ProfileGetInfoAction\n    | ProfileGetInfoSuccessAction\n    | ProfileSendConnectionAction\n    | ProfileSendConnectionSuccessAction\n    | ProfileAcceptConnectionAction\n    | ProfileAcceptConnectionSuccessAction\n    | ProfileDeclineConnectionAction\n    | ProfileDeclineConnectionSuccessAction\n    | ProfileRemoveConnectionAction\n    | ProfileRemoveConnectionSuccessAction\n","import { Action } from '@ngrx/store'\n\n/* ACTION TYPES */\nexport const SIGN_IN_ACTION_TYPE: string = '[AUTH] sign in'\nexport const SIGN_IN_SUCCESS_ACTION_TYPE: string = '[AUTH] sign in success'\nexport const SIGN_IN_FAILED_ACTION_TYPE: string = '[AUTH] sign in failed'\n\nexport const LOG_OUT_ACTION_TYPE: string = '[AUTH] log out'\nexport const LOG_OUT_SUCCESS_ACTION_TYPE: string = '[AUTH] log out success'\nexport const LOG_OUT_FAILED_ACTION_TYPE: string = '[AUTH] log out failed'\n\n/* ACTIONS */\nexport class SignInAction implements Action {\n    readonly type = SIGN_IN_ACTION_TYPE\n}\n\nexport class LogOutAction implements Action {\n    readonly type = LOG_OUT_ACTION_TYPE\n}\n\nexport type AuthActions = SignInAction | LogOutAction\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { JobsComponent } from './jobs.component'\n\n@NgModule({\n    declarations: [JobsComponent],\n    imports: [CommonModule],\n})\nexport class JobsModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { AuthorizationComponent } from './authorization/authorization.component'\nimport { RegistrationComponent } from './registration/registration.component'\nimport { HttpClientModule } from '@angular/common/http'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { SvgIconModule } from '../../svg-icon/svg-icon.module'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n    declarations: [AuthorizationComponent, RegistrationComponent],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        SvgIconModule,\n        RouterModule,\n    ],\n})\nexport class AuthModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { VarDirective } from './var.directive'\n\n@NgModule({\n    declarations: [VarDirective],\n    imports: [CommonModule],\n    exports: [VarDirective],\n})\nexport class DirectivesModule {}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-jobs',\n    templateUrl: './jobs.component.html',\n    styleUrls: ['./jobs.component.less'],\n})\nexport class JobsComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","{{ 983134800000 | date: 'medium' }}\n","import { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms'\nimport { environment } from 'src/environments/environment'\nimport { AuthService } from 'src/app/services/auth.service'\nimport { debounceTime } from 'rxjs/operators'\nimport { IsdCountryCode } from '../../../../../../server/src/interfaces/auth/isdCountryCode'\nimport { RegistrationForm } from '../../../../../../server/src/interfaces/auth/registration'\nimport { IAuthError } from '../../../../../../server/src/interfaces/auth/authError'\nimport { Router } from '@angular/router'\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.less', '../auth.styles.less'],\n})\nexport class RegistrationComponent implements OnInit {\n    constructor(private authService: AuthService, private router: Router) {}\n\n    IsdCountryCodes: IsdCountryCode[] | undefined\n\n    repeatPasswordError = false\n    backendError = ''\n\n    registrationForm = new FormGroup({\n        firstName: new FormControl('', [\n            Validators.minLength(2),\n            Validators.required,\n        ]),\n        lastName: new FormControl('', [\n            Validators.minLength(2),\n            Validators.required,\n        ]),\n        email: new FormControl('', [Validators.email, Validators.required]),\n        phone: new FormControl('', [\n            Validators.required,\n            Validators.pattern('[- +()0-9]{5,}'),\n        ]),\n        password: new FormControl('', [\n            Validators.minLength(6),\n            Validators.required,\n        ]),\n        passwordRepeat: new FormControl('', [\n            Validators.minLength(6),\n            Validators.required,\n        ]),\n    })\n\n    onSubmit(): void {\n        const form: RegistrationForm = this.registrationForm.value\n        if (form.password === form.passwordRepeat) {\n            this.repeatPasswordError = false\n            if (this.registrationForm.valid) {\n                this.authService\n                    .signUpRequest(this.registrationForm.value)\n                    .subscribe(\n                        res => {\n                            console.log(res)\n                            this.router.navigate(['/signin'], {\n                                queryParams: {\n                                    message:\n                                        'You have successfully registered and you can log in',\n                                },\n                            })\n                        },\n                        err => (this.backendError = err.error.error),\n                    )\n            }\n        } else {\n            this.repeatPasswordError = true\n        }\n    }\n\n    ngOnInit(): void {\n        this.authService\n            .getIsdCountryCode()\n            .subscribe(val => (this.IsdCountryCodes = val))\n\n        this.registrationForm.valueChanges\n            .pipe(debounceTime(600))\n            .subscribe(form => {\n                if (form.password === form.passwordRepeat)\n                    this.repeatPasswordError = false\n                else this.repeatPasswordError = true\n            })\n    }\n}\n","<div class=\"wrapper\">\n\t<div class=\"container\">\n\t\t<div class=\"container__header\">\n\t\t\t<h2 class=\"logo\">Linked<svg icon=\"whiteLogo\"></svg></h2>\n\t\t</div>\n\t\t<div class=\"container__body\">\n\t\t\t<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n\t\t\t\t\n\t\t\t\t<ul class=\"form__errors\">\n\t\t\t\t\t<li *ngIf=\"registrationForm.controls['firstName'].invalid\n\t\t\t\t\t&& registrationForm.controls['firstName'].touched\">\n\t\t\t\t\t\tInvalid first name\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"registrationForm.controls['lastName'].invalid\n\t\t\t\t\t&& registrationForm.controls['lastName'].touched\">\n\t\t\t\t\t\tInvalid last name\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"registrationForm.controls['email'].invalid\n\t\t\t\t\t&& registrationForm.controls['email'].touched\">\n\t\t\t\t\t\tInvalid email\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"registrationForm.controls['phone'].invalid\n\t\t\t\t\t&& registrationForm.controls['phone'].touched\">\n\t\t\t\t\t\tInvalid phone\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"registrationForm.controls['password'].invalid\n\t\t\t\t\t&& registrationForm.controls['password'].touched\">\n\t\t\t\t\t\tinvalid password\n\t\t\t\t\t</li>\n\t\t\t\t\t<li *ngIf=\"repeatPasswordError\">Password mismatch</li>\n\t\t\t\t\t<li *ngIf=\"backendError\">{{ backendError }}</li>\n\t\t\t\t</ul>\n\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"firstName\">First name</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"text\" id=\"firstName\" formControlName=\"firstName\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"lastName\">Last name</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"text\" id=\"lastName\" formControlName=\"lastName\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"email\">E-mail</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"email\" id=\"email\" formControlName=\"email\" email=\"true\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"phone\">Phone</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"text\" id=\"phone\" formControlName=\"phone\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"password\">Password</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"password\" id=\"password\" formControlName=\"password\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"passwordRepeat\">Repeat password</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"password\" id=\"passwordRepeat\" formControlName=\"passwordRepeat\" required>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"agree\">By clicking Agree & Join, you agree to the LinkedIn User Agreement, Privacy Policy, and Cookie Policy.</div>\n\t\t\t\t<button class=\"submit\" type=\"submit\">Agree & Join</button>\n\t\t\t\t<span class=\"auth-link\">Already on LinkedIn? <a routerLink=\"/signin\">Sign in</a></span>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.less'],\n})\nexport class FooterComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"footer\">FOOTER</div>\n","import {\n    ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE,\n    DECLINE_CONNECTION_SUCCESS_ACTION_TYPE,\n    GET_PROFILE_INFO_SUCCESS_ACTION_TYPE,\n    ProfileActions,\n    REMOVE_CONNECTION_SUCCESS_ACTION_TYPE,\n    SEND_CONNECTION_SUCCESS_ACTION_TYPE,\n} from './profile.actions'\nimport { IFile } from '../../interfaces/file'\n\nexport const profileNode = 'profile'\n\nexport interface ProfileState {\n    id: number\n\n    firstName: string\n    lastName: string\n    email: string\n    phone: string\n    password: string\n\n    info: {\n        isOnline: boolean\n        description: string\n        views: {\n            current: number\n            prev: number\n        }\n        connections: { userId: number; date: number }[]\n        sentConnections: { userId: number; message: string }[]\n        receivedConnections: { userId: number /* message: string */ }[]\n        posts: {\n            postId: number\n        }[]\n        avatar: IFile | null\n        profileHeaderBg: IFile | null\n        dateOfBirth: number\n        profession: string\n        locality: {\n            country: string\n            city: string\n        }\n    }\n}\n\nconst initialState: ProfileState = {\n    id: -1,\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n\n    info: {\n        isOnline: false,\n        description: '',\n        views: {\n            current: 0,\n            prev: 0,\n        },\n        connections: [],\n        sentConnections: [],\n        receivedConnections: [],\n        posts: [],\n        avatar: null,\n        profileHeaderBg: null,\n        dateOfBirth: 0,\n        profession: '',\n        locality: {\n            country: '',\n            city: '',\n        },\n    },\n}\n\nexport const profileReducer = (\n    state: ProfileState = initialState,\n    action: ProfileActions,\n) => {\n    switch (action.type) {\n        case GET_PROFILE_INFO_SUCCESS_ACTION_TYPE:\n            return action.payload.profile\n        case SEND_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    receivedConnections: [\n                        ...state.info.receivedConnections,\n                        { userId: action.payload.senderId },\n                    ],\n                },\n            }\n        case ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    connections: [\n                        ...state.info.connections,\n                        {\n                            userId: action.payload.userId,\n                            date: action.payload.date,\n                        },\n                    ],\n                    sentConnections: state.info.sentConnections.filter(\n                        user => user.userId !== action.payload.userId,\n                    ),\n                },\n            }\n        case DECLINE_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    receivedConnections: state.info.receivedConnections.filter(\n                        user => user.userId !== action.payload.senderId,\n                    ),\n                },\n            }\n        case REMOVE_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    connections: state.info.connections.filter(\n                        user => user.userId !== action.payload.senderId,\n                    ),\n                },\n            }\n        default:\n            return state\n    }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { AuthState } from '../../store/auth/auth.reducer'\nimport { select, Store } from '@ngrx/store'\nimport { Observable } from 'rxjs'\nimport { authStatusSelector } from '../../store/auth/auth.selectors'\nimport { Router } from '@angular/router'\nimport { PostGetAction } from '../../store/posts/post.actions'\n\n@Component({\n    selector: 'app-base-layout',\n    templateUrl: './base.component.html',\n    styleUrls: ['./base.component.less'],\n})\nexport class BaseLayoutComponent implements OnInit {\n    authStatus$: Observable<boolean> = this.store$.pipe(\n        select(authStatusSelector),\n    )\n\n    constructor(private store$: Store<AuthState>, private router: Router) {}\n\n    ngOnInit(): void {\n        this.authStatus$.subscribe(res => {\n            if (!res) {\n                this.router.navigate(['/signin'])\n            }\n        })\n    }\n}\n","<div class=\"base-layout__wrapper\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n    <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-edit-profile',\n    templateUrl: './edit-profile.component.html',\n    styleUrls: ['./edit-profile.component.less'],\n})\nexport class EditProfileComponent implements OnInit {\n    constructor() {}\n\n    currentTab: string = 'Additional information' // 'Personal data'\n\n    changeTab(tab: string): void {\n        this.currentTab = tab.trim()\n    }\n\n    ngOnInit(): void {}\n}\n","<div class=\"edit-profile\">\n\t<app-edit-profile-side (onChangeTab)=\"changeTab($event)\" class=\"edit-side\"></app-edit-profile-side>\n\t<app-edit-profile-main [currentTab]=\"currentTab\" class=\"edit-main\"></app-edit-profile-main>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { IUser } from '../../../interfaces/user'\n\n@Component({\n    selector: 'app-connections-list',\n    templateUrl: './connections-list.component.html',\n    styleUrls: ['./connections-list.component.less'],\n})\nexport class ConnectionsListComponent implements OnInit {\n    @Input() connections: { user: IUser; message: string }[] = []\n    @Input() type: string = ''\n\n    @Output() action = new EventEmitter<{ type: string; id: number }>()\n\n    acceptConnection(id: number): void {\n        this.action.emit({ type: 'accept', id })\n    }\n    declineConnection(id: number): void {\n        this.action.emit({ type: 'decline', id })\n    }\n    cancelConnection(id: number): void {\n        this.action.emit({ type: 'cancel', id })\n    }\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"connections\">\n\t<div class=\"connections__have\">\n\t\tYou have <span>{{ connections.length }} {{ type }} connections</span>\n\t</div>\n\t\n\t<div class=\"connections__list\">\n\t\t<div *ngFor=\"let connection of connections\" class=\"connection\">\n\t\t\t<a class=\"profile-link\" [routerLink]=\"'/profile/' + connection.user.id\">\n\t\t\t\t<div class=\"user\">\n\t\t\t\t\t<div class=\"avatar-box\">\n\t\t\t\t\t\t<img [src]=\"connection.user.info.avatar ? connection.user.info.avatar.url : 'assets/img/avatar-man.png'\" alt=\"avatar\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t<div class=\"name\">{{ connection.user.firstName + ' ' + connection.user.lastName }}</div>\n\t\t\t\t\t\t<div class=\"profession\">{{ connection.user.info.profession }}</div>\n\t\t\t\t\t\t<div class=\"connections-count\">{{ connection.user.info.connections.length + ' connections' }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<div class=\"message\">\n\t\t\t\t{{ connection.message }}\n\t\t\t</div>\n\t\t\t<div class=\"controls\">\n\t\t\t\t<button *ngIf=\"type === 'incoming'\" class=\"btn-accept\" (click)=\"acceptConnection(connection.user.id)\">Accept</button>\n\t\t\t\t<button *ngIf=\"type === 'incoming'\" class=\"btn-decline\" (click)=\"declineConnection(connection.user.id)\">Decline</button>\n\t\t\t\t<button *ngIf=\"type === 'sent'\" class=\"btn-decline\" (click)=\"cancelConnection(connection.user.id)\">Cancel</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport { AuthState } from './store/auth/auth.reducer'\nimport { SignInAction } from './store/auth/auth.actions'\nimport { MyProfileState } from './store/my-profile/my-profile.reducer'\nimport { MyProfileGetInfoAction } from './store/my-profile/my-profile.actions'\nimport { WebSocketService } from './services/web-socket.service'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.less'],\n})\nexport class AppComponent implements OnInit {\n    title = 'client'\n\n    constructor(\n        private store$: Store<AuthState | MyProfileState>,\n        private webSocketService: WebSocketService,\n    ) {}\n\n    ngOnInit(): void {\n        if (localStorage.getItem('currentUser')) {\n            this.store$.dispatch(new SignInAction())\n            this.store$.dispatch(\n                new MyProfileGetInfoAction({\n                    id: JSON.parse(\n                        localStorage.getItem('currentUser') as string,\n                    ).user.id,\n                }),\n            )\n        }\n\n        this.webSocketService\n            .listen('some event')\n            .subscribe(data => console.log(data))\n    }\n}\n","<div id=\"app\">\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { SvgIconModule } from '../../svg-icon/svg-icon.module'\n\nimport { FeedComponent } from './feed.component'\nimport { FeedMainComponent } from './feed-main/feed-main.component'\nimport { FeedSideComponent } from './feed-side/feed-side.component'\nimport { PostComponent } from '../../components/post/post.component'\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n    declarations: [\n        FeedComponent,\n        FeedMainComponent,\n        FeedSideComponent,\n        PostComponent,\n    ],\n    imports: [CommonModule, SvgIconModule, FormsModule],\n})\nexport class FeedModule {}\n","import { Injectable } from '@angular/core'\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n    UrlTree,\n} from '@angular/router'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ):\n        | Observable<boolean | UrlTree>\n        | Promise<boolean | UrlTree>\n        | boolean\n        | UrlTree {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/signin'], {\n            queryParams: { returnUrl: state.url },\n        })\n        return false\n    }\n}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-auth-layout',\n    templateUrl: './auth.component.html',\n    styleUrls: ['./auth.component.less'],\n})\nexport class AuthLayoutComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"auth-layout__wrapper\">\n    <router-outlet></router-outlet>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    Inject,\n} from '@angular/core'\nimport { ICONS_PATH } from './icons-path'\n\n@Component({\n    selector: 'svg[icon]',\n    template: '<svg:use [attr.href]=\"href\"></svg:use>',\n    styles: [':host { fill: transparent; stroke: transparent; }'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n    @Input()\n    icon = ''\n\n    constructor(@Inject(ICONS_PATH) private readonly path: string) {}\n\n    get href(): string {\n        return `${this.path}/${this.icon}.svg#${this.icon}Icon`\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n    selector: 'app-edit-profile-side',\n    templateUrl: './edit-profile-side.component.html',\n    styleUrls: ['./edit-profile-side.component.less'],\n})\nexport class EditProfileSideComponent implements OnInit {\n    @Output() onChangeTab = new EventEmitter<string>()\n\n    constructor() {}\n\n    activateTab(e: MouseEvent, menu: HTMLElement): void {\n        const tabs = Array.from(menu.children) as HTMLElement[]\n        const target = e.target as HTMLElement\n\n        if (target.classList.contains('menu')) return\n\n        tabs.forEach(el => el.classList.remove('active'))\n        if (!target.classList.contains('tab')) {\n            const tab = target.closest('.tab') as HTMLElement\n            tab.classList.add('active')\n            this.onChangeTab.emit(tab.textContent ?? '')\n        } else {\n            target.classList.add('active')\n            this.onChangeTab.emit(target.textContent ?? '')\n        }\n    }\n\n    ngOnInit(): void {}\n}\n","<div class=\"edit-profile-sidebar\">\n\t<div class=\"menu\" (click)=\"activateTab($event, menu)\" #menu>\n\t\t<div class=\"tab active\">\n\t\t\t<svg icon=\"clipboard\"></svg>\n\t\t\tPersonal data\n\t\t</div>\n\t\t<div class=\"tab\">\n\t\t\t<svg icon=\"security\"></svg>\n\t\t\tLogin and security\n\t\t</div>\n\t\t<div class=\"tab\">\n\t\t\t<svg icon=\"additionalInfo\"></svg>\n\t\t\tAdditional information\n\t\t</div>\n\t</div>\n</div>\n","<div class=\"chat-side\">\n\t<div class=\"title\">Chats</div>\n\t\n\t<div class=\"chats\" (click)=\"activateChat($event, chats)\" #chats>\n\t\t<div class=\"chat\" *ngFor=\"let a of [1,2,3,4,5,6,7]\">\n\t\t\t<div class=\"user\">\n\t\t\t\t<div class=\"avatar-box\">\n\t\t\t\t\t<img src=\"assets/img/avatar-man.png\" alt=\"avatar\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info\">\n\t\t\t\t\t<div class=\"name\">{{ 'User Name' }}</div>\n\t\t\t\t\t<div class=\"last-message\">{{ 'Last message' }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"unread.length\" class=\"unread\">{{ unread.length+4 }}</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-chat-side',\n    templateUrl: './chat-side.component.html',\n    styleUrls: ['./chat-side.component.less'],\n})\nexport class ChatSideComponent implements OnInit {\n    constructor() {}\n\n    unread = [1]\n\n    activeChat: string = ''\n\n    activateChat(e: MouseEvent, chatList: HTMLElement): void {\n        if (e.target === chatList) return\n\n        const element = (e.target as HTMLElement).closest('.chat')\n        const chats = Array.from(chatList.children)\n\n        chats.forEach(chat => chat.classList.remove('active'))\n        element?.classList.add('active')\n\n        this.activeChat = element?.querySelector('.name')?.textContent ?? ''\n        console.log(this.activeChat)\n    }\n\n    ngOnInit(): void {}\n}\n","import { Action } from '@ngrx/store'\nimport { PostDto } from '../../dto/post.dto'\nimport { IPost } from '../../interfaces/post/post'\nimport { CommentDto } from '../../dto/comment.dto'\n\n/* TYPES */\n/* POSTS TYPES */\n\nexport const POST_CREATE_ACTION_TYPE = '[POST] Create'\nexport const POST_CREATE_SUCCESS_ACTION_TYPE = '[POST] Create success'\nexport const POST_CREATE_FAILED_ACTION_TYPE = '[POST] Create failed'\n\nexport const POST_EDIT_ACTION_TYPE = '[POST] Edit'\nexport const POST_EDIT_SUCCESS_ACTION_TYPE = '[POST] Edit success'\nexport const POST_EDIT_FAILED_ACTION_TYPE = '[POST] Edit failed'\n\nexport const POST_GET_ACTION_TYPE = '[POST] Get'\nexport const POST_GET_SUCCESS_ACTION_TYPE = '[POST] Get success'\nexport const POST_GET_FAILED_ACTION_TYPE = '[POST] Get failed'\n\nexport const POST_REMOVE_ACTION_TYPE = '[POST] Remove'\nexport const POST_REMOVE_SUCCESS_ACTION_TYPE = '[POST] Remove success'\nexport const POST_REMOVE_FAILED_ACTION_TYPE = '[POST] Remove failed'\n\nexport const POST_LIKE_ACTION_TYPE = '[POST] Like'\nexport const POST_LIKE_SUCCESS_ACTION_TYPE = '[POST] Like success'\nexport const POST_LIKE_FAILED_ACTION_TYPE = '[POST] Like failed'\n\nexport const POST_DONT_LIKE_ACTION_TYPE = '[POST] Dont like'\nexport const POST_DONT_LIKE_SUCCESS_ACTION_TYPE = '[POST] Dont like success'\nexport const POST_DONT_LIKE_FAILED_ACTION_TYPE = '[POST] Dont like failed'\n\n/* COMMENTS TYPES */\n\nexport const COMMENT_CREATE_ACTION_TYPE = '[COMMENT] Create'\nexport const COMMENT_CREATE_SUCCESS_ACTION_TYPE = '[COMMENT] Create success'\nexport const COMMENT_CREATE_FAILED_ACTION_TYPE = '[COMMENT] Create failed'\n\nexport const COMMENT_EDIT_ACTION_TYPE = '[COMMENT] Edit'\nexport const COMMENT_EDIT_SUCCESS_ACTION_TYPE = '[COMMENT] Edit success'\nexport const COMMENT_EDIT_FAILED_ACTION_TYPE = '[COMMENT] Edit failed'\n\nexport const COMMENT_GET_ACTION_TYPE = '[COMMENT] Get'\nexport const COMMENT_GET_SUCCESS_ACTION_TYPE = '[COMMENT] Get success'\nexport const COMMENT_GET_FAILED_ACTION_TYPE = '[COMMENT] Get failed'\n\nexport const COMMENT_REMOVE_ACTION_TYPE = '[COMMENT] Remove'\nexport const COMMENT_REMOVE_SUCCESS_ACTION_TYPE = '[COMMENT] Remove success'\nexport const COMMENT_REMOVE_FAILED_ACTION_TYPE = '[COMMENT] Remove failed'\n\nexport const COMMENT_LIKE_ACTION_TYPE = '[COMMENT] Like'\nexport const COMMENT_LIKE_SUCCESS_ACTION_TYPE = '[COMMENT] Like success'\nexport const COMMENT_LIKE_FAILED_ACTION_TYPE = '[COMMENT] Like failed'\n\nexport const COMMENT_DONT_LIKE_ACTION_TYPE = '[COMMENT] Dont like'\nexport const COMMENT_DONT_LIKE_SUCCESS_ACTION_TYPE =\n    '[COMMENT] Dont like success'\nexport const COMMENT_DONT_LIKE_FAILED_ACTION_TYPE = '[COMMENT] Dont like failed'\n\nexport const POST_COMMENTS_OPEN_ACTION_TYPE = '[POST] Comments open'\nexport const POST_COMMENTS_CLOSE_ACTION_TYPE = '[POST] Comments close'\n\n/* POSTS */\n\nexport class PostCreateAction implements Action {\n    readonly type = POST_CREATE_ACTION_TYPE\n    constructor(public payload: PostDto) {}\n}\n\nexport class PostCreateSuccessAction implements Action {\n    readonly type = POST_CREATE_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            post: IPost\n        },\n    ) {}\n}\n\nexport class PostCreateFailedAction implements Action {\n    readonly type = POST_CREATE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostEditAction implements Action {\n    readonly type = POST_EDIT_ACTION_TYPE\n}\n\nexport class PostEditSuccessAction implements Action {\n    readonly type = POST_EDIT_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class PostEditFailedAction implements Action {\n    readonly type = POST_EDIT_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostGetAction implements Action {\n    readonly type = POST_GET_ACTION_TYPE\n    constructor(\n        public payload: {\n            id: string | number\n        },\n    ) {}\n}\n\nexport class PostGetSuccessAction implements Action {\n    readonly type = POST_GET_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            posts: IPost[]\n        },\n    ) {}\n}\n\nexport class PostGetFailedAction implements Action {\n    readonly type = POST_GET_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostRemoveAction implements Action {\n    readonly type = POST_REMOVE_ACTION_TYPE\n}\n\nexport class PostRemoveSuccessAction implements Action {\n    readonly type = POST_REMOVE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class PostRemoveFailedAction implements Action {\n    readonly type = POST_REMOVE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostLikeAction implements Action {\n    readonly type = POST_LIKE_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class PostLikeSuccessAction implements Action {\n    readonly type = POST_LIKE_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class PostLikeFailedAction implements Action {\n    readonly type = POST_LIKE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostDontLikeAction implements Action {\n    readonly type = POST_DONT_LIKE_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class PostDontLikeSuccessAction implements Action {\n    readonly type = POST_DONT_LIKE_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class PostDontLikeFailedAction implements Action {\n    readonly type = POST_DONT_LIKE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class PostCommentsOpenAction implements Action {\n    readonly type = POST_COMMENTS_OPEN_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n        },\n    ) {}\n}\nexport class PostCommentsCloseAction implements Action {\n    readonly type = POST_COMMENTS_CLOSE_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n        },\n    ) {}\n}\n\n/* COMMENTS */\n\nexport class CommentCreateAction implements Action {\n    readonly type = COMMENT_CREATE_ACTION_TYPE\n    constructor(\n        public payload: {\n            postId: number\n            commentInfo: CommentDto\n        },\n    ) {}\n}\n\nexport class CommentCreateSuccessAction implements Action {\n    readonly type = COMMENT_CREATE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentCreateFailedAction implements Action {\n    readonly type = COMMENT_CREATE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class CommentEditAction implements Action {\n    readonly type = COMMENT_EDIT_ACTION_TYPE\n}\n\nexport class CommentEditSuccessAction implements Action {\n    readonly type = COMMENT_EDIT_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentEditFailedAction implements Action {\n    readonly type = COMMENT_EDIT_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class CommentGetAction implements Action {\n    readonly type = COMMENT_GET_ACTION_TYPE\n    constructor(payload: { id: string | number }) {}\n}\n\nexport class CommentGetSuccessAction implements Action {\n    readonly type = COMMENT_GET_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentGetFailedAction implements Action {\n    readonly type = COMMENT_GET_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class CommentRemoveAction implements Action {\n    readonly type = COMMENT_REMOVE_ACTION_TYPE\n}\n\nexport class CommentRemoveSuccessAction implements Action {\n    readonly type = COMMENT_REMOVE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentRemoveFailedAction implements Action {\n    readonly type = COMMENT_REMOVE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class CommentLikeAction implements Action {\n    readonly type = COMMENT_LIKE_ACTION_TYPE\n}\n\nexport class CommentLikeSuccessAction implements Action {\n    readonly type = COMMENT_LIKE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentLikeFailedAction implements Action {\n    readonly type = COMMENT_LIKE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport class CommentDontLikeAction implements Action {\n    readonly type = COMMENT_DONT_LIKE_ACTION_TYPE\n}\n\nexport class CommentDontLikeSuccessAction implements Action {\n    readonly type = COMMENT_DONT_LIKE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {}) {}\n}\n\nexport class CommentDontLikeFailedAction implements Action {\n    readonly type = COMMENT_DONT_LIKE_FAILED_ACTION_TYPE\n    constructor(\n        public payload: {\n            err: any\n        },\n    ) {}\n}\n\nexport type PostActions =\n    | PostCreateSuccessAction\n    | PostCreateFailedAction\n    | PostEditSuccessAction\n    | PostEditFailedAction\n    | PostGetSuccessAction\n    | PostGetFailedAction\n    | PostRemoveSuccessAction\n    | PostRemoveFailedAction\n    | PostLikeSuccessAction\n    | PostLikeFailedAction\n    | PostDontLikeSuccessAction\n    | PostDontLikeFailedAction\n    | PostCommentsOpenAction\n    | PostCommentsCloseAction\n    | CommentCreateSuccessAction\n    | CommentCreateFailedAction\n    | CommentEditSuccessAction\n    | CommentEditFailedAction\n    | CommentGetSuccessAction\n    | CommentGetFailedAction\n    | CommentRemoveSuccessAction\n    | CommentRemoveFailedAction\n    | CommentLikeSuccessAction\n    | CommentLikeFailedAction\n    | CommentDontLikeSuccessAction\n    | CommentDontLikeFailedAction\n","import { Action, ActionReducerMap, MetaReducer } from '@ngrx/store'\nimport { environment } from '../../environments/environment'\nimport { authNode, authReducer, AuthState } from './auth/auth.reducer'\nimport { postNode, postReducer, PostState } from './posts/post.reducer'\nimport {\n    myProfileNode,\n    myProfileReducer,\n    MyProfileState,\n} from './my-profile/my-profile.reducer'\nimport {\n    profileNode,\n    profileReducer,\n    ProfileState,\n} from './profile/profile.reducer'\n\nexport interface State {\n    [authNode]: AuthState\n    [myProfileNode]: MyProfileState\n    [postNode]: PostState\n}\n\nexport const reducers: ActionReducerMap<State> = {\n    [authNode]: authReducer,\n    // @ts-ignore\n    [postNode]: postReducer,\n    // @ts-ignore\n    [myProfileNode]: myProfileReducer,\n    [profileNode]: profileReducer,\n}\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production\n    ? []\n    : []\n","import { Component, Input, OnInit } from '@angular/core'\nimport { FeedMainComponent } from '../../views/feed/feed-main/feed-main.component'\nimport { select, Store } from '@ngrx/store'\nimport { PostState } from '../../store/posts/post.reducer'\nimport { MyProfileState } from '../../store/my-profile/my-profile.reducer'\nimport {\n    CommentCreateAction,\n    PostCommentsCloseAction,\n    PostCommentsOpenAction,\n    PostDontLikeAction,\n    PostLikeAction,\n} from '../../store/posts/post.actions'\nimport { myProfileSelector } from '../../store/my-profile/my-profile.selectors'\nimport { map } from 'rxjs/operators'\nimport { PostsService } from '../../services/posts.service'\nimport { ILike } from '../../interfaces/post/like'\nimport { IPost } from '../../interfaces/post/post'\nimport { ICreator } from '../../interfaces/post/creator'\nimport { Observable, of } from 'rxjs'\n\n@Component({\n    selector: 'app-post',\n    templateUrl: './post.component.html',\n    styleUrls: ['./post.component.less'],\n})\nexport class PostComponent implements OnInit {\n    constructor(\n        private feedMainComponent: FeedMainComponent,\n        private store$: Store<PostState | MyProfileState>,\n        private postsService: PostsService,\n    ) {}\n\n    @Input() postInfo: IPost = {\n        attached: {},\n        content: '',\n        creator: {\n            id: 0,\n            fullName: '',\n            profession: '',\n            avatar: '',\n        },\n        dateOfCreation: 0,\n        id: 0,\n        likes: [],\n        comments: [],\n        commentsOpen: false,\n    }\n\n    content: string = ''\n\n    profile: ICreator = {\n        id: 0,\n        fullName: '',\n        profession: '',\n        avatar: null,\n    }\n\n    likes: ILike[] = this.postInfo.likes\n    liked: boolean = false\n\n    createComment(textarea: HTMLTextAreaElement): void {\n        this.store$.dispatch(\n            new CommentCreateAction({\n                postId: this.postInfo.id,\n                commentInfo: {\n                    creator: this.profile,\n                    content: textarea.value.replace(/\\n/g, '<br>'),\n                    dateOfCreation: Date.now(),\n                },\n            }),\n        )\n    }\n\n    likePost(like: HTMLElement): void {\n        if (!this.liked) {\n            like.classList.add('waiting')\n            this.store$.dispatch(\n                new PostLikeAction({\n                    postId: this.postInfo.id,\n                    userId: this.profile.id,\n                }),\n            )\n            // like.classList.remove('waiting')\n        } else {\n            like.classList.add('waiting')\n            this.store$.dispatch(\n                new PostDontLikeAction({\n                    postId: this.postInfo.id,\n                    userId: this.profile.id,\n                }),\n            )\n        }\n    }\n\n    openCloseComments(): void {\n        if (!this.postInfo.commentsOpen)\n            this.store$.dispatch(\n                new PostCommentsOpenAction({ postId: this.postInfo.id }),\n            )\n        if (this.postInfo.commentsOpen)\n            this.store$.dispatch(\n                new PostCommentsCloseAction({ postId: this.postInfo.id }),\n            )\n    }\n\n    likeComment(): void {}\n\n    textareaResize(e: Event): void {\n        this.feedMainComponent.textareaResize(e)\n    }\n\n    ngOnInit(): void {\n        console.log(this.postInfo)\n        this.content = this.postInfo.content.replace(/\\n/g, '<br>')\n        this.likes = this.postInfo.likes\n        this.store$\n            .pipe(\n                select(myProfileSelector),\n                map(profile => {\n                    return {\n                        id: profile.id,\n                        fullName: `${profile.firstName} ${profile.lastName}`,\n                        profession: profile.info.profession,\n                        avatar:\n                            profile.info.avatar?.url ??\n                            '../../../../assets/img/avatar-man.png',\n                    }\n                }),\n            )\n            .subscribe(creator => (this.profile = creator))\n\n        this.liked = !!this.likes.find(like => like.userId === this.profile.id)\n\n        console.log('likes', this.likes)\n        console.log('liked', this.liked)\n    }\n}\n","<div class=\"post\">\n    <div class=\"post__header\">\n        <div class=\"other\">\n            <svg icon=\"other\"></svg>\n            <div class=\"other-list hidden\"></div>\n        </div>\n    </div>\n    <div class=\"post__body\">\n        <div class=\"creator\">\n            <div>\n                <div class=\"avatar-box\">\n                    <img\n                        class=\"avatar\"\n                        [src]=\"postInfo.creator.avatar || 'assets/img/avatar-man.png'\"\n                        alt=\"avatar\"\n                    />\n                </div>\n                <div class=\"description\">\n                    <span class=\"name\">{{ postInfo.creator.fullName }}</span>\n                    <span class=\"profession\">{{ postInfo.creator.profession }}</span>\n                </div>\n            </div>\n            <span class=\"date\">\n                {{\n                    !!postInfo.dateOfLastModify\n                    ? (postInfo.dateOfLastModify | date: 'medium') + '(edited)'\n                    : postInfo.dateOfCreation | date: 'medium'\n                }}\n            </span>\n        </div>\n        <div class=\"content\" [innerHTML]=\"content\"></div>\n    </div>\n    <div class=\"post__footer\">\n        <div class=\"left-side\">\n            <span (click)=\"likePost(like)\" class=\"like\" [class.liked]=\"liked\" #like>\n                <svg icon=\"like\"></svg>\n                {{ likes.length }}\n            </span>\n            <span class=\"comment\" (click)=\"openCloseComments()\">\n                <svg class=\"comment\" icon=\"comment\"></svg>\n                {{ postInfo.comments ? postInfo.comments.length : 0 }}\n            </span>\n        </div>\n        <span class=\"share\">\n            <svg icon=\"share\"></svg>\n            Share\n        </span>\n    </div>\n    <div class=\"comments-wrapper\" [class.open]=\"postInfo.commentsOpen\">\n        <div *ngIf=\"postInfo.comments\" class=\"comments\">\n            <div *ngFor=\"let comment of postInfo.comments\" class=\"comment\">\n                <div class=\"avatar-box\">\n                    <img\n                            class=\"avatar\"\n                            [src]=\"comment.creator.avatar\"\n                            alt=\"avatar\"\n                    />\n                </div>\n                <div class=\"content\">\n                    <span class=\"name\">{{ comment.creator.fullName }}</span>\n                    <span class=\"text\" [innerHTML]=\"comment.content\"></span>\n                    <div class=\"another\">\n                        <span class=\"date\">\n                            {{\n                                !!comment.dateOfLastModify\n                                ? (comment.dateOfLastModify | date: 'medium') + '(edited)'\n                                : comment.dateOfCreation | date: 'medium'\n                            }}\n                        </span>\n                        <span class=\"like\">\n                            <svg icon=\"like\"></svg>\n                            {{ comment.likes.length }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"new-comment\">\n            <textarea #commentInput\n                rows=\"1\"\n                contenteditable=\"true\"\n                (input)=\"textareaResize($event)\"\n                onblur=\"this.value = this.value.trim()\"\n                placeholder=\"Add a public comment...\"\n            ></textarea>\n            <button class=\"btn-comment\" (click)=\"createComment(commentInput)\">\n                <svg icon=\"send\" class=\"send\"></svg>\n            </button>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { AppRoutingModule } from './app-routing.module'\nimport { SvgIconModule } from './svg-icon/svg-icon.module'\nimport { ViewsModule } from './views/views.module'\nimport { PipesModule } from './pipes/pipes.module'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component'\nimport { HeaderComponent } from './components/header/header.component'\nimport { FooterComponent } from './components/footer/footer.component'\nimport { AuthLayoutComponent } from './layouts/auth/auth.component'\nimport { BaseLayoutComponent } from './layouts/base/base.component'\n\nimport { StoreModule } from '@ngrx/store'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\nimport { environment } from '../environments/environment'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreRouterConnectingModule } from '@ngrx/router-store'\nimport { SocketIoConfig, SocketIoModule } from 'ngx-socket-io'\n\nimport { metaReducers, reducers } from './store'\nimport { PostEffects } from './store/posts/post.effects'\nimport { MyProfileEffects } from './store/my-profile/my-profile.effects'\nimport { ProfileEffects } from './store/profile/profile.effects'\nimport { DirectivesModule } from './directives/directives.module'\n\nconst config: SocketIoConfig = { url: environment.server_url, options: {} }\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HeaderComponent,\n        FooterComponent,\n        AuthLayoutComponent,\n        BaseLayoutComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        SvgIconModule,\n        ViewsModule,\n        PipesModule,\n        DirectivesModule,\n        ReactiveFormsModule,\n        StoreModule.forRoot(reducers, {\n            metaReducers,\n            runtimeChecks: {\n                strictActionImmutability: true,\n                strictStateImmutability: true,\n            },\n        }),\n        StoreDevtoolsModule.instrument({\n            maxAge: 25,\n            logOnly: environment.production,\n        }),\n        EffectsModule.forRoot([PostEffects, MyProfileEffects, ProfileEffects]),\n        StoreRouterConnectingModule.forRoot(),\n        SocketIoModule.forRoot(config),\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n    exports: [],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport { Observable } from 'rxjs'\nimport { myProfileSelector } from '../../../store/my-profile/my-profile.selectors'\nimport { map } from 'rxjs/operators'\nimport { IBuffer } from '../../../interfaces/buffer'\n\n@Component({\n    selector: 'app-feed-side',\n    templateUrl: './feed-side.component.html',\n    styleUrls: ['./feed-side.component.less', '../feed.component.less'],\n})\nexport class FeedSideComponent implements OnInit {\n    constructor(private store$: Store<MyProfileState>) {}\n\n    profile$: Observable<MyProfileState> = this.store$.pipe(\n        select(myProfileSelector),\n    )\n\n    fullName$: Observable<string> = this.profile$.pipe(\n        map(profile => `${profile.firstName} ${profile.lastName}`),\n    )\n\n    description$: Observable<string> = this.profile$.pipe(\n        map(profile => profile.info.description),\n    )\n\n    avatar$: Observable<string> = this.profile$.pipe(\n        map(profile => profile.info.avatar?.url ?? 'assets/img/avatar-man.png'),\n    )\n\n    ngOnInit(): void {}\n}\n","<div class=\"feed__sidebar\">\n\t<div class=\"feed__sidebar__header\">\n\t\t<img src=\"../../../../assets/img/header-bg-2.png\" alt=\"bg\" class=\"header-bg\">\n\t\t<div class=\"profile-info\">\n\t\t\t<div class=\"avatar-box\">\n\t\t\t\t<img [src]=\"avatar$ | async\" alt=\"avatar\">\n\t\t\t</div>\n\t\t\t<div class=\"name\">\n\t\t\t\t{{ fullName$ | async }}\n\t\t\t\t<span class=\"account-status\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"description\">\n\t\t\t\t{{ description$ | async }}\n\t\t\t</div>\n\t\t\t<button class=\"btn\">Write new article</button>\n\t\t</div>\n\t</div>\n\t<div class=\"groups\">\n\t\t<div class=\"groups__header\">\n\t\t\t<span class=\"title\">My groups</span>\n\t\t\t<a href=\"#\" class=\"edit-list more\">Edit list</a>\n\t\t</div>\n\t\t<div class=\"groups__body\">\n\t\t\t<div class=\"group\">\n\t\t\t\t<div class=\"group__icon\">\n\t\t\t\t\t<img src=\"../../../../assets/img/NGTU.jpg\" alt=\"group-icon\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group__name\">\n\t\t\t\t\t{{ 'Nizhniy Novgorod State Technical University' }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"groups__footer\">\n\t\t\t<a class=\"more\" href=\"#\">show all ({{ 8 }})</a>\n\t\t</div>\n\t</div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'prefixPlus',\n})\nexport class PrefixPlusPipe implements PipeTransform {\n    transform(value: number | string, ...args: unknown[]): string {\n        value = Number(value)\n        if (value || value === 0) {\n            if (value >= 0) {\n                return `+${value}`\n            }\n            return `${value}`\n        }\n\n        return 'Not a Number'\n    }\n}\n","import { Injectable } from '@angular/core'\n\nimport { IAttach } from '../interfaces/post/attach'\nimport { IAttached } from '../interfaces/post/attached'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FileService {\n    constructor() {}\n\n    fileUpload(\n        fileInput: HTMLInputElement,\n        type: string,\n        attached: IAttached,\n    ): void {\n        fileInput.onchange = (e: Event) => {\n            const { files } = e.target as HTMLInputElement\n\n            ;[].forEach.call(files, (file: File) => {\n                const fileReader = new FileReader()\n\n                console.log(file)\n\n                fileReader.onload = (ev: ProgressEvent) => {\n                    const fr = ev.target as FileReader\n                    console.log(fr)\n\n                    const attach: IAttach = {\n                        name: file.name,\n                        type: file.type,\n                        size: file.size,\n                        result: fr.result,\n                    }\n\n                    if (file.type.match('image')) {\n                        if (!attached.images) attached.images = []\n                        attached.images.push(attach)\n                    } else if (file.type.match('video')) {\n                        if (!attached.videos) attached.videos = []\n                        attached.videos.push(attach)\n                    } else {\n                        if (!attached.files) attached.files = []\n                        attached.files.push(attach)\n                    }\n                }\n\n                fileReader.readAsDataURL(file)\n            })\n        }\n\n        fileInput.click()\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n// @ts-ignore\nimport { HystModal } from '../../../../../plugins/hystModal_.js'\nimport { ProfileService } from '../../../../../services/profile.service'\nimport { Router } from '@angular/router'\n\n@Component({\n    selector: 'app-edit-login-and-security',\n    templateUrl: './edit-login-and-security.component.html',\n    styleUrls: ['./edit-login-and-security.component.less'],\n})\nexport class EditLoginAndSecurityComponent implements OnInit {\n    constructor(\n        private profileService: ProfileService,\n        private router: Router,\n    ) {}\n\n    @Input() profileId: number = -1\n    @Input() email: string = ''\n    @Input() phone: string = ''\n    @Input() dateOfLastPasswordUpdate: number | null = null\n\n    @Input() phoneConfirmed: boolean = false\n    @Input() emailConfirmed: boolean = false\n\n    @Output() action = new EventEmitter<{ type: string; data: any }>()\n\n    isChangePhone: boolean = false\n    isChangeEmail: boolean = false\n    isChangePassword: boolean = false\n\n    changePhoneError: string = ''\n    changeEmailError: string = ''\n    changePasswordError: string = ''\n\n    changePasswordForm = new FormGroup({\n        currentPassword: new FormControl('', [\n            Validators.required,\n            Validators.minLength(6),\n        ]),\n        newPassword: new FormControl('', [\n            Validators.required,\n            Validators.minLength(6),\n        ]),\n        newPasswordRepeat: new FormControl('', [\n            Validators.required,\n            Validators.minLength(6),\n        ]),\n    })\n\n    changePhoneMode(): void {\n        this.isChangePhone = true\n        this.isChangeEmail = false\n        this.isChangePassword = false\n    }\n    changeEmailMode(): void {\n        this.isChangePhone = false\n        this.isChangeEmail = true\n        this.isChangePassword = false\n    }\n    changePasswordMode(): void {\n        this.isChangePhone = false\n        this.isChangeEmail = false\n        this.isChangePassword = true\n    }\n\n    closeChangeBlock(): void {\n        this.isChangePhone = false\n        this.isChangeEmail = false\n        this.isChangePassword = false\n    }\n\n    deleteAccount(password: string): void {\n        this.profileService.deleteAccount(this.profileId, password).subscribe(\n            res => {\n                localStorage.removeItem('currentUser')\n                this.router.navigate(['/account-deleted'])\n            },\n            err => {},\n        )\n    }\n\n    changeEmail(email: string): void {\n        const match = email.match(/.+@.+\\..+/i)\n\n        console.log(match)\n\n        if (!match) {\n            this.changeEmailError = 'Invalid email'\n            return\n        }\n\n        if (this.email === email) {\n            this.changeEmailError = 'Email addresses match'\n            return\n        }\n\n        this.profileService.changeEmail(this.profileId, email).subscribe(\n            res => {\n                console.log(res.message)\n            },\n            err => {\n                console.error(err.message)\n            },\n        )\n    }\n\n    changePhone(phone: string): void {\n        const match = phone.match(/^[- +()0-9]{5,}/)\n\n        if (!match) {\n            this.changePhoneError = 'Invalid phone'\n            return\n        }\n\n        if (this.phone === phone) {\n            this.changePhoneError = 'Phones match'\n            return\n        }\n\n        this.profileService.changePhone(this.profileId, phone).subscribe(\n            res => {\n                console.log(res.message)\n            },\n            err => {\n                console.error(err.message)\n            },\n        )\n    }\n\n    changePassword(): void {\n        const form = this.changePasswordForm.value\n        if (form.newPassword !== form.newPasswordRepeat) {\n            this.changePasswordError = 'Password mismatch'\n            return\n        }\n        if (form.newPassword === form.currentPassword) {\n            this.changePasswordError = 'Old and new passwords are the same'\n            return\n        }\n\n        if (form.newPassword.length < 6) {\n            this.changePasswordError = 'New password is too short'\n            return\n        }\n\n        this.profileService\n            .changePassword(\n                this.profileId,\n                form.newPassword,\n                form.currentPassword,\n            )\n            .subscribe(\n                res => {\n                    console.log(res.message)\n                },\n                err => {\n                    console.error(err.message)\n                },\n            )\n    }\n\n    ngOnInit(): void {\n        const deleteAccountModal = new HystModal({\n            linkAttributeName: 'data-hystmodal',\n        })\n    }\n}\n","<div class=\"edit-login-and-security\" *ngIf=\"!isChangePassword && !isChangePhone && !isChangeEmail\">\n\t<div class=\"login-data\">\n\t\t<h3 class=\"title\">\n\t\t\tData change\n\t\t\t<svg icon=\"security\"></svg>\n\t\t</h3>\n\t\t<div class=\"phone\" (click)=\"changePhoneMode()\">\n\t\t\t<div class=\"title\">\n\t\t\t\t<svg icon=\"phone\" class=\"icon\"></svg>\n\t\t\t\tPhone\n\t\t\t</div>\n\t\t\t<div class=\"value\">{{ phone | maskedPhone }}</div>\n\t\t</div>\n\t\t<div class=\"email\" (click)=\"changeEmailMode()\">\n\t\t\t<div class=\"title\">\n\t\t\t\t<svg icon=\"email\" class=\"icon\"></svg>\n\t\t\t\tEmail\n\t\t\t</div>\n\t\t\t<div class=\"value\">{{ email | maskedEmail }}</div>\n\t\t</div>\n\t\t<div class=\"password\" (click)=\"changePasswordMode()\">\n\t\t\t<div class=\"title\">\n\t\t\t\t<svg icon=\"key\" class=\"icon\"></svg>\n\t\t\t\tPassword\n\t\t\t</div>\n\t\t\t<div *ngIf=\"dateOfLastPasswordUpdate || dateOfLastPasswordUpdate === 0\" class=\"date-of-last-update\">updated {{ dateOfLastPasswordUpdate | date: 'dd.MM.yyyy' }}</div>\n\t\t\t<div *ngIf=\"!dateOfLastPasswordUpdate && dateOfLastPasswordUpdate !== 0\" class=\"date-of-last-update\">password never updated</div>\n\t\t</div>\n\t</div>\n\t<div class=\"increased-security\">\n\t\t<h3 class=\"title\">\n\t\t\tIncreased security\n\t\t\t<svg icon=\"confirm\"></svg>\n\t\t</h3>\n\t\t<p class=\"help\">Increase  the security of your account by verifying your email and phone</p>\n\t\t\n\t\t<div class=\"confirm-email\">\n\t\t\t<div *ngIf=\"!emailConfirmed\" class=\"title\">\n\t\t\t\t<svg icon=\"email\"></svg>\n\t\t\t\tConfirm email\n\t\t\t</div>\n\t\t\t<div *ngIf=\"emailConfirmed\" class=\"title confirmed\">\n\t\t\t\t<svg icon=\"email\"></svg>\n\t\t\t\tEmail confirmed\n\t\t\t\t<svg icon=\"confirmed\" class=\"confirmed-icon\"></svg>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"confirm-phone\">\n\t\t\t<div *ngIf=\"!phoneConfirmed\" class=\"title\">\n\t\t\t\t<svg icon=\"phone\"></svg>\n\t\t\t\tConfirm phone\n\t\t\t</div>\n\t\t\t<div *ngIf=\"phoneConfirmed\" class=\"title confirmed\">\n\t\t\t\t<svg icon=\"phone\"></svg>\n\t\t\t\tPhone confirmed\n\t\t\t\t<svg icon=\"confirmed\" class=\"confirmed-icon\"></svg>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"delete-profile\">\n\t\t<h3 class=\"title\">\n\t\t\tDelete account\n\t\t\t<svg icon=\"trash\"></svg>\n\t\t</h3>\n\t\t<p class=\"help\">\n\t\t\tYou can delete your profile with all data and cannot be restored\n\t\t</p>\n\t\t<button data-hystmodal=\"#delete-account-confirmation-modal\" class=\"delete-account-btn\">\n\t\t\t<svg icon=\"trash\"></svg>\n\t\t\tDelete\n\t\t</button>\n\t</div>\n</div>\n\n<div class=\"changeEmail\" *ngIf=\"isChangeEmail\">\n\t<svg (click)=\"closeChangeBlock()\" class=\"back\" icon=\"back\"></svg>\n\t<div class=\"error\" *ngIf=\"changeEmailError\">\n\t\t{{ changeEmailError }}\n\t\t<svg icon=\"close\" class=\"close\" (click)=\"changeEmailError = ''\"></svg>\n\t</div>\n\t<h3 class=\"title\">Change email</h3>\n\t<p class=\"help\">Current email: {{ email | maskedEmail }}</p>\n\t\n\t<input class=\"control\" type=\"email\" placeholder=\"Enter new email\" #change_email_input>\n\t<button class=\"btn\" (click)=\"changeEmail(change_email_input.value)\" [disabled]=\"change_email_input.value === ''\">Save</button>\n</div>\n\n<div class=\"changePhone\" *ngIf=\"isChangePhone\">\n\t<svg (click)=\"closeChangeBlock()\" class=\"back\" icon=\"back\"></svg>\n\t<div class=\"error\" *ngIf=\"changePhoneError\">\n\t\t{{ changePhoneError }}\n\t\t<svg icon=\"close\" class=\"close\" (click)=\"changePhoneError = ''\"></svg>\n\t</div>\n\t<h3 class=\"title\">Change phone</h3>\n\t<p class=\"help\">Current phone: {{ phone | maskedPhone }}</p>\n\t\n\t<input class=\"control\" type=\"tel\" id=\"phone\" placeholder=\"Enter new phone\" #change_phone_input>\n\t<button class=\"btn\" (click)=\"changePhone(change_phone_input.value)\" [disabled]=\"change_phone_input.value === ''\">Save</button>\n</div>\n\n<div class=\"changePassword\" *ngIf=\"isChangePassword\">\n\t<svg (click)=\"closeChangeBlock()\" class=\"back\" icon=\"back\"></svg>\n\t<div class=\"error\" *ngIf=\"changePasswordError\">\n\t\t{{ changePasswordError }}\n\t\t<svg icon=\"close\" class=\"close\" (click)=\"changePasswordError = ''\"></svg>\n\t</div>\n\t<h3 class=\"title\">Change password</h3>\n\t\n\t<form [formGroup]=\"changePasswordForm\" class=\"changePasswordForm\" (ngSubmit)=\"changePassword()\">\n\t\t<div class=\"password-wrapper\">\n\t\t\t<label for=\"old-password\">Old password</label>\n\t\t\t<input id=\"old-password\" [type]=\"showOld.var ? 'text' : 'password'\" formControlName=\"currentPassword\">\n\t\t\t<span class=\"eye-icon\" #showOld=\"var\" [var]=\"false\">\n\t\t\t\t<svg *ngIf=\"!showOld.var\" (click)=\"showOld.var = !showOld.var\" icon=\"showPassword\"></svg>\n\t\t\t\t<svg *ngIf=\"showOld.var\" (click)=\"showOld.var = !showOld.var\" icon=\"hidePassword\"></svg>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class=\"password-wrapper\">\n\t\t\t<label for=\"new-password\">New password</label>\n\t\t\t<input id=\"new-password\" [type]=\"showNew.var ? 'text' : 'password'\" formControlName=\"newPassword\">\n\t\t\t<span class=\"eye-icon\" #showNew=\"var\" [var]=\"false\">\n\t\t\t\t<svg *ngIf=\"!showNew.var\" (click)=\"showNew.var = !showNew.var\" icon=\"showPassword\"></svg>\n\t\t\t\t<svg *ngIf=\"showNew.var\" (click)=\"showNew.var = !showNew.var\" icon=\"hidePassword\"></svg>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class=\"password-wrapper\">\n\t\t\t<label for=\"new-password-repeat\">Repeat password</label>\n\t\t\t<input id=\"new-password-repeat\" [type]=\"showRepeat.var ? 'text' : 'password'\" formControlName=\"newPasswordRepeat\">\n\t\t\t<span class=\"eye-icon\" #showRepeat=\"var\" [var]=\"false\">\n\t\t\t\t<svg *ngIf=\"!showRepeat.var\" (click)=\"showRepeat.var = !showRepeat.var\" icon=\"showPassword\"></svg>\n\t\t\t\t<svg *ngIf=\"showRepeat.var\" (click)=\"showRepeat.var = !showRepeat.var\" icon=\"hidePassword\"></svg>\n\t\t\t</span>\n\t\t</div>\n\t\t\n\t\t<button [disabled]=\"changePasswordForm.invalid\" class=\"btn\" type=\"submit\">Change</button>\n\t</form>\n</div>\n\n<div class=\"hystmodal\" id=\"delete-account-confirmation-modal\" aria-hidden=\"true\">\n\t<div class=\"hystmodal__wrap\">\n\t\t<div class=\"hystmodal__window\" role=\"dialog\" aria-modal=\"true\">\n\t\t\t<button data-hystclose class=\"hystmodal__close\">Закрыть</button>\n\t\t\t<div class=\"delete-account-confirmation\">\n\t\t\t\t<svg icon=\"trash\"></svg>\n\t\t\t\t<p class=\"help\">You will not be able to return your account details, you really want to delete your account?</p>\n\t\t\t\t<div class=\"password-wrapper\">\n\t\t\t\t\t<label for=\"password\">Enter your password</label>\n\t\t\t\t\t<input id=\"password\" [type]=\"showPas.var ? 'text' : 'password'\" #pass>\n\t\t\t\t\t<span class=\"eye-icon\" #showPas=\"var\" [var]=\"false\">\n\t\t\t\t\t\t<svg *ngIf=\"!showPas.var\" (click)=\"showPas.var = !showPas.var\" icon=\"showPassword\"></svg>\n\t\t\t\t\t\t<svg *ngIf=\"showPas.var\" (click)=\"showPas.var = !showPas.var\" icon=\"hidePassword\"></svg>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"btn\" data-hystclose (click)=\"deleteAccount(pass.value)\">Delete</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Directive, Input } from '@angular/core'\n\n@Directive({\n    selector: '[var]',\n    exportAs: 'var',\n})\nexport class VarDirective {\n    @Input() var: any\n}\n","import { Injectable } from '@angular/core'\nimport { Actions, Effect, ofType } from '@ngrx/effects'\nimport {\n    COMMENT_CREATE_ACTION_TYPE,\n    CommentCreateAction,\n    CommentCreateFailedAction,\n    CommentCreateSuccessAction,\n    POST_CREATE_ACTION_TYPE,\n    POST_CREATE_FAILED_ACTION_TYPE,\n    POST_DONT_LIKE_ACTION_TYPE,\n    POST_GET_ACTION_TYPE,\n    POST_LIKE_ACTION_TYPE,\n    PostActions,\n    PostCreateAction,\n    PostCreateFailedAction,\n    PostCreateSuccessAction,\n    PostDontLikeAction,\n    PostDontLikeFailedAction,\n    PostDontLikeSuccessAction,\n    PostGetAction,\n    PostGetFailedAction,\n    PostGetSuccessAction,\n    PostLikeAction,\n    PostLikeFailedAction,\n    PostLikeSuccessAction,\n} from './post.actions'\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators'\nimport { PostsService } from '../../services/posts.service'\nimport { Observable, of } from 'rxjs'\nimport { PostDto } from '../../dto/post.dto'\nimport { CommentDto } from '../../dto/comment.dto'\n\n@Injectable()\nexport class PostEffects {\n    constructor(\n        private actions$: Actions,\n        private postsService: PostsService,\n    ) {}\n\n    @Effect()\n    createPost$(): Observable<PostActions> {\n        return this.actions$.pipe(\n            ofType(POST_CREATE_ACTION_TYPE),\n            switchMap((action: PostCreateAction) => {\n                return this.postsService\n                    .createPost(action.payload as PostDto)\n                    .pipe(\n                        map(post => {\n                            console.log('PAYLOAD:', action.payload)\n                            return new PostCreateSuccessAction({ post })\n                        }),\n                        catchError(err =>\n                            of(new PostCreateFailedAction({ err })),\n                        ),\n                    )\n            }),\n        )\n    }\n\n    editPost$(): Observable<PostActions> | any {}\n    removePost$(): Observable<PostActions> | any {}\n\n    @Effect()\n    likePost$(): Observable<PostActions> {\n        return this.actions$.pipe(\n            ofType(POST_LIKE_ACTION_TYPE),\n            switchMap((action: PostLikeAction) => {\n                const payload = action.payload\n                return this.postsService\n                    .likePost(payload.postId, payload.userId)\n                    .pipe(\n                        map(like => {\n                            return new PostLikeSuccessAction({\n                                postId: payload.postId,\n                                userId: payload.userId,\n                            })\n                        }),\n                        catchError(err =>\n                            of(new PostLikeFailedAction({ err })),\n                        ),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    dontLikePost$(): Observable<PostActions> {\n        return this.actions$.pipe(\n            ofType(POST_DONT_LIKE_ACTION_TYPE),\n            switchMap((action: PostDontLikeAction) => {\n                const payload = action.payload\n                return this.postsService\n                    .dontLikePost(payload.postId, payload.userId)\n                    .pipe(\n                        map(like => {\n                            return new PostDontLikeSuccessAction({\n                                postId: payload.postId,\n                                userId: payload.userId,\n                            })\n                        }),\n                        catchError(err =>\n                            of(new PostDontLikeFailedAction({ err })),\n                        ),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    addComment$(): Observable<PostActions> {\n        return this.actions$.pipe(\n            ofType(COMMENT_CREATE_ACTION_TYPE),\n            switchMap((action: CommentCreateAction) => {\n                const payload = action.payload as {\n                    postId: number\n                    commentInfo: CommentDto\n                }\n                return this.postsService\n                    .createComment(payload.commentInfo, payload.postId)\n                    .pipe(\n                        map(comments => {\n                            return new CommentCreateSuccessAction({\n                                ...comments,\n                                postId: payload.postId,\n                            })\n                        }),\n                        catchError(err =>\n                            of(new CommentCreateFailedAction({ err })),\n                        ),\n                    )\n            }),\n        )\n    }\n\n    @Effect()\n    getPosts$(): Observable<PostActions> {\n        return this.actions$.pipe(\n            ofType(POST_GET_ACTION_TYPE),\n            switchMap((action: PostGetAction) => {\n                return this.postsService.getPosts(action.payload.id).pipe(\n                    map(posts => {\n                        return posts.posts\n                    }),\n                    map(posts => new PostGetSuccessAction({ posts })),\n                    catchError(err => of(new PostGetFailedAction({ err }))),\n                )\n            }),\n        )\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core'\nimport { ProfileState } from '../../../store/profile/profile.reducer'\nimport { initialProfileState } from '../profile.component'\n\n@Component({\n    selector: 'app-profile-side',\n    templateUrl: './profile-side.component.html',\n    styleUrls: ['./profile-side.component.less', '../profile.component.less'],\n})\nexport class ProfileSideComponent implements OnInit {\n    constructor() {}\n\n    // @Input() isMyProfile: boolean = false\n\n    ngOnInit(): void {}\n}\n","<div class=\"profile__sidebar\">\n    <div class=\"dashboard\">\n        <div class=\"dashboard__header\">\n            <p>YOUR DASHBOARD</p>\n            <a href=\"#\" class=\"link more\">GO TO STATS</a>\n        </div>\n        <div class=\"stats\">\n            <div class=\"stat\">\n                <p class=\"count\">299</p>\n                <p class=\"description\">views today</p>\n            </div>\n            <div class=\"stat\">\n                <p class=\"count\">15</p>\n                <p class=\"description\">post views</p>\n            </div>\n            <div class=\"stat\">\n                <p class=\"count\">37</p>\n                <p class=\"description\">search appereances</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"visitors\">\n        <div class=\"visitors__header\">\n            <p>VISITORS</p>\n            <a href=\"#\" class=\"link more\">VIEW ALL</a>\n        </div>\n        <div class=\"visitor\">\n            <div class=\"avatar\">\n                <img src=\"../../../../assets/img/photos/Photo.png\" alt=\"ava\" />\n            </div>\n            <div>\n                <p class=\"name\">Darlene Black</p>\n                <p class=\"description\">HR-manager, 10 000 connec...</p>\n            </div>\n        </div>\n        <div class=\"visitor\">\n            <div class=\"avatar\">\n                <img src=\"../../../../assets/img/photos/Photo2.png\" alt=\"ava\" />\n            </div>\n            <div>\n                <p class=\"name\">Theresa Steward</p>\n                <p class=\"description\">iOS developer</p>\n            </div>\n        </div>\n        <div class=\"visitor\">\n            <div class=\"avatar\">\n                <img src=\"../../../../assets/img/photos/Photo3.png\" alt=\"ava\" />\n            </div>\n            <div>\n                <p class=\"name\">Brandon Wilson</p>\n                <p class=\"description\">Senior UX designer</p>\n            </div>\n        </div>\n        <div class=\"visitor\">\n            <div class=\"avatar\">\n                <img src=\"../../../../assets/img/photos/Photo4.png\" alt=\"ava\" />\n            </div>\n            <div>\n                <p class=\"name\">Kyle Fisher</p>\n                <p class=\"description\">Product designer at Com...</p>\n            </div>\n        </div>\n        <div class=\"visitor\">\n            <div class=\"avatar\">\n                <img src=\"../../../../assets/img/photos/Photo5.png\" alt=\"ava\" />\n            </div>\n            <div>\n                <p class=\"name\">Audrey Alexander</p>\n                <p class=\"description\">Team lead at Google</p>\n            </div>\n        </div>\n    </div>\n    <div class=\"courses\">\n        <div class=\"courses__header\">\n            <p>YOU MAY LIKE THESE COURSES</p>\n        </div>\n\n        <div class=\"course\">\n            <img\n                class=\"picture\"\n                src=\"../../../../assets/img/courses/Course.png\"\n                alt=\"course\"\n            />\n            <div>\n                <p class=\"name\">UX Foundations: Prototyping</p>\n                <p class=\"views\">27,959 viewers</p>\n            </div>\n        </div>\n        <div class=\"course\">\n            <img\n                class=\"picture\"\n                src=\"../../../../assets/img/courses/Course2.png\"\n                alt=\"course\"\n            />\n            <div>\n                <p class=\"name\">Designing with Adobe XD and pro</p>\n                <p class=\"views\">9,122 viewers</p>\n            </div>\n        </div>\n        <div class=\"course\">\n            <img\n                class=\"picture\"\n                src=\"../../../../assets/img/courses/Course3.png\"\n                alt=\"course\"\n            />\n            <div>\n                <p class=\"name\">UX Foundations: Styles and GUIs</p>\n                <p class=\"views\">13,858 viewers</p>\n            </div>\n        </div>\n\n        <a href=\"#\" class=\"link more\">SEE ALL RECOMENDATIONS</a>\n    </div>\n</div>\n","/* ACTION TYPES */\nimport { Action } from '@ngrx/store'\nimport { MyProfileState } from './my-profile.reducer'\nimport { IUser } from '../../interfaces/user'\nimport {IContact} from \"../../interfaces/contact\";\nimport {IProject} from \"../../interfaces/project\";\nimport {IUniversity} from \"../../interfaces/university\";\nimport {IExp} from \"../../interfaces/exp\";\n\nexport const GET_MY_PROFILE_INFO_ACTION_TYPE = '[MY PROFILE] get info'\nexport const GET_MY_PROFILE_INFO_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] get info success'\n\nexport const ACCEPT_CONNECTION_ACTION_TYPE = '[MY PROFILE] accept connection'\nexport const ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] success accept connection'\n\nexport const DECLINE_CONNECTION_ACTION_TYPE = '[MY PROFILE] decline connection'\nexport const DECLINE_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] success decline connection'\n\nexport const CANCEL_CONNECTION_ACTION_TYPE = '[MY PROFILE] cancel connection'\nexport const CANCEL_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] success cancel connection'\n\nexport const REMOVE_CONNECTION_ACTION_TYPE = '[MY PROFILE] remove connection'\nexport const REMOVE_CONNECTION_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] remove connection success'\n\nexport const CHANGE_AVATAR_ACTION_TYPE = '[MY PROFILE] change avatar'\nexport const CHANGE_AVATAR_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] change avatar success'\n\nexport const DELETE_AVATAR_SUCCESS_ACTION_TYPE =\n    '[MY PROFILE] delete avatar success'\n\n// change additional information action types\n\nexport const CHANGE_ROLE_ACTION_TYPE = '[MY PROFILE] change role'\nexport const CHANGE_ROLE_SUCCESS_ACTION_TYPE = '[MY PROFILE] change role success'\nexport const CHANGE_COMPANY_ACTION_TYPE = '[MY PROFILE] change company'\nexport const CHANGE_COMPANY_SUCCESS_ACTION_TYPE = '[MY PROFILE] change company success'\nexport const CHANGE_ABOUT_ACTION_TYPE = '[MY PROFILE] change about'\nexport const CHANGE_ABOUT_SUCCESS_ACTION_TYPE = '[MY PROFILE] change about success'\nexport const CHANGE_PROFESSION_ACTION_TYPE = '[MY PROFILE] change profession'\nexport const CHANGE_PROFESSION_SUCCESS_ACTION_TYPE = '[MY PROFILE] change profession success'\nexport const CHANGE_LOCALITY_ACTION_TYPE = '[MY PROFILE] change locality'\nexport const CHANGE_LOCALITY_SUCCESS_ACTION_TYPE = '[MY PROFILE] change locality success'\nexport const CHANGE_CONTACT_INFO_ACTION_TYPE = '[MY PROFILE] change contact info'\nexport const CHANGE_CONTACT_INFO_SUCCESS_ACTION_TYPE = '[MY PROFILE] change contact info success'\nexport const CHANGE_PROJECTS_ACTION_TYPE = '[MY PROFILE] change projects'\nexport const CHANGE_PROJECTS_SUCCESS_ACTION_TYPE = '[MY PROFILE] change projects success'\nexport const CHANGE_EXPERIENCE_ACTION_TYPE = '[MY PROFILE] change experience'\nexport const CHANGE_EXPERIENCE_SUCCESS_ACTION_TYPE = '[MY PROFILE] change experience success'\nexport const CHANGE_EDUCATION_ACTION_TYPE = '[MY PROFILE] change education'\nexport const CHANGE_EDUCATION_SUCCESS_ACTION_TYPE = '[MY PROFILE] change education success'\n\nexport const JOIN_TO_CHAT = '[MY PROFILE] join to chat'\n\n/* ACTIONS */\n\nexport class MyProfileGetInfoAction implements Action {\n    readonly type = GET_MY_PROFILE_INFO_ACTION_TYPE\n\n    constructor(\n        public payload: {\n            id: number\n        },\n    ) {}\n}\n\nexport class MyProfileGetInfoSuccessAction implements Action {\n    readonly type = GET_MY_PROFILE_INFO_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            profile: IUser\n        },\n    ) {}\n}\n\nexport class MyProfileAcceptConnectionAction implements Action {\n    readonly type = ACCEPT_CONNECTION_ACTION_TYPE\n\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n            date: number\n        },\n    ) {}\n}\n\nexport class MyProfileDeclineConnectionAction implements Action {\n    readonly type = DECLINE_CONNECTION_ACTION_TYPE\n\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class MyProfileCancelConnectionAction implements Action {\n    readonly type = CANCEL_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class MyProfileRemoveConnectionAction implements Action {\n    readonly type = REMOVE_CONNECTION_ACTION_TYPE\n    constructor(\n        public payload: {\n            senderId: number\n            userId: number\n        },\n    ) {}\n}\n\nexport class MyProfileAcceptConnectionSuccessAction implements Action {\n    readonly type = ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE\n\n    constructor(\n        public payload: {\n            senderId: number\n            date: number\n        },\n    ) {}\n}\n\nexport class MyProfileDeclineConnectionSuccessAction implements Action {\n    readonly type = DECLINE_CONNECTION_SUCCESS_ACTION_TYPE\n\n    constructor(\n        public payload: {\n            senderId: number\n        },\n    ) {}\n}\n\nexport class MyProfileCancelConnectionSuccessAction implements Action {\n    readonly type = CANCEL_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            userId: number\n        },\n    ) {}\n}\n\nexport class MyProfileRemoveConnectionSuccessAction implements Action {\n    readonly type = REMOVE_CONNECTION_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            userId: number\n        },\n    ) {}\n}\n\nexport class MyProfileChangeAvatarAction implements Action {\n    readonly type = CHANGE_AVATAR_ACTION_TYPE\n    constructor(\n        public payload: {\n            file: File\n        },\n    ) {}\n}\n\nexport class MyProfileChangeAvatarSuccessAction implements Action {\n    readonly type = CHANGE_AVATAR_SUCCESS_ACTION_TYPE\n    constructor(\n        public payload: {\n            url: string\n        },\n    ) {}\n}\n\nexport class MyProfileDeleteAvatarSuccessAction implements Action {\n    readonly type = DELETE_AVATAR_SUCCESS_ACTION_TYPE\n}\n\nexport class MyProfileChangeRoleAction implements Action {\n    readonly type = CHANGE_ROLE_ACTION_TYPE\n    constructor(public payload: {\n        role: string,\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeRoleSuccessAction implements Action {\n    readonly type = CHANGE_ROLE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeCompanyAction implements Action {\n    readonly type = CHANGE_COMPANY_ACTION_TYPE\n    constructor(public payload: {\n\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeCompanySuccessAction implements Action {\n    readonly type = CHANGE_COMPANY_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeAboutAction implements Action {\n    readonly type = CHANGE_ABOUT_ACTION_TYPE\n    constructor(public payload: {\n        about: string,\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeAboutSuccessAction implements Action {\n    readonly type = CHANGE_ABOUT_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeProfessionAction implements Action {\n    readonly type = CHANGE_PROFESSION_ACTION_TYPE\n    constructor(public payload: {\n        profession: string\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeProfessionSuccessAction implements Action {\n    readonly type = CHANGE_PROFESSION_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeLocalityAction implements Action {\n    readonly type = CHANGE_LOCALITY_ACTION_TYPE\n    constructor(public payload: {\n        locality: { country: string, city: string },\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeLocalitySuccessAction implements Action {\n    readonly type = CHANGE_LOCALITY_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeContactInfoAction implements Action {\n    readonly type = CHANGE_CONTACT_INFO_ACTION_TYPE\n    constructor(public payload: {\n        contactInfo: IContact[],\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeContactInfoSuccessAction implements Action {\n    readonly type = CHANGE_CONTACT_INFO_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeProjectsAction implements Action {\n    readonly type = CHANGE_PROJECTS_ACTION_TYPE\n    constructor(public payload: {\n        projects: IProject[],\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeProjectsSuccessAction implements Action {\n    readonly type = CHANGE_PROJECTS_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeExperienceAction implements Action {\n    readonly type = CHANGE_EXPERIENCE_ACTION_TYPE\n    constructor(public payload: {\n        experience: IExp[],\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeExperienceSuccessAction implements Action {\n    readonly type = CHANGE_EXPERIENCE_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\nexport class MyProfileChangeEducationAction implements Action {\n    readonly type = CHANGE_EDUCATION_ACTION_TYPE\n    constructor(public payload: {\n        education: IUniversity[],\n        id: number\n    }) {}\n}\n\nexport class MyProfileChangeEducationSuccessAction implements Action {\n    readonly type = CHANGE_EDUCATION_SUCCESS_ACTION_TYPE\n    constructor(public payload: {\n\n    }) {}\n}\n\n\nexport type MyProfileActions =\n    | MyProfileGetInfoAction\n    | MyProfileGetInfoSuccessAction\n    | MyProfileAcceptConnectionAction\n    | MyProfileAcceptConnectionSuccessAction\n    | MyProfileDeclineConnectionAction\n    | MyProfileDeclineConnectionSuccessAction\n    | MyProfileCancelConnectionAction\n    | MyProfileCancelConnectionSuccessAction\n    | MyProfileRemoveConnectionAction\n    | MyProfileRemoveConnectionSuccessAction\n    | MyProfileChangeAvatarAction\n    | MyProfileChangeAvatarSuccessAction\n    | MyProfileDeleteAvatarSuccessAction\n    | MyProfileChangeRoleAction\n    | MyProfileChangeRoleSuccessAction\n    | MyProfileChangeCompanyAction\n    | MyProfileChangeCompanySuccessAction\n    | MyProfileChangeAboutAction\n    | MyProfileChangeAboutSuccessAction\n    | MyProfileChangeProfessionAction\n    | MyProfileChangeProfessionSuccessAction\n    | MyProfileChangeLocalityAction\n    | MyProfileChangeLocalitySuccessAction\n    | MyProfileChangeContactInfoAction\n    | MyProfileChangeContactInfoSuccessAction\n    | MyProfileChangeProjectsAction\n    | MyProfileChangeProjectsSuccessAction\n    | MyProfileChangeExperienceAction\n    | MyProfileChangeExperienceSuccessAction\n    | MyProfileChangeEducationAction\n    | MyProfileChangeEducationSuccessAction\n","import { Component, Input, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { Observable } from 'rxjs'\nimport { map, take, takeUntil } from 'rxjs/operators'\nimport {\n    myProfileAboutSelector,\n    myProfileAvatarSelector,\n    myProfileContactInfoSelector,\n    myProfileDateOfLastPasswordUpdateSelector,\n    myProfileDOBSelector,\n    myProfileEducationSelector,\n    myProfileEmailSelector,\n    myProfileExperienceSelector,\n    myProfileGenderSelector,\n    myProfileIdSelector,\n    myProfileLocalitySelector,\n    myProfileNameSelector,\n    myProfilePhoneSelector,\n    myProfileProfessionSelector,\n    myProfileProjectsSelector,\n    myProfileRoleSelector,\n} from '../../../../store/my-profile/my-profile.selectors'\nimport { MyProfileState } from '../../../../store/my-profile/my-profile.reducer'\nimport { ProfileService } from '../../../../services/profile.service'\nimport { IPersonalInfo } from '../../../../interfaces/edit-profile/personalInfo'\nimport {\n    MyProfileChangeAboutAction,\n    MyProfileChangeAvatarSuccessAction,\n    MyProfileChangeContactInfoAction,\n    MyProfileChangeEducationAction,\n    MyProfileChangeExperienceAction,\n    MyProfileChangeLocalityAction,\n    MyProfileChangeProfessionAction,\n    MyProfileChangeProjectsAction,\n    MyProfileChangeRoleAction,\n    MyProfileDeleteAvatarSuccessAction,\n} from '../../../../store/my-profile/my-profile.actions'\nimport { IContact } from '../../../../interfaces/contact'\nimport { IProject } from '../../../../interfaces/project'\nimport { IUniversity } from '../../../../interfaces/university'\nimport { IExp } from '../../../../interfaces/exp'\n\n@Component({\n    selector: 'app-edit-profile-main',\n    templateUrl: './edit-profile-main.component.html',\n    styleUrls: ['./edit-profile-main.component.less'],\n})\nexport class EditProfileMainComponent implements OnInit {\n    constructor(\n        private store$: Store<MyProfileState>,\n        private profileService: ProfileService,\n    ) {}\n\n    @Input() currentTab: string = ''\n\n    profileId: number = -1\n\n    firstName$: Observable<string> = this.store$.pipe(\n        select(myProfileNameSelector),\n        map(fullName => {\n            console.log(fullName)\n            return fullName.firstName\n        }),\n    )\n\n    lastName$: Observable<string> = this.store$.pipe(\n        select(myProfileNameSelector),\n        map(fullName => fullName.lastName),\n    )\n\n    dateOfBirth$: Observable<number> = this.store$.pipe(\n        select(myProfileDOBSelector),\n    )\n\n    gender$: Observable<string> = this.store$.pipe(\n        select(myProfileGenderSelector),\n    )\n\n    avatar$: Observable<string> = this.store$.pipe(\n        select(myProfileAvatarSelector),\n    )\n\n    email$: Observable<string> = this.store$.pipe(\n        select(myProfileEmailSelector),\n    )\n\n    phone$: Observable<string> = this.store$.pipe(\n        select(myProfilePhoneSelector),\n    )\n\n    dateOfLastPasswordUpdate$: Observable<number> = this.store$.pipe(\n        select(myProfileDateOfLastPasswordUpdateSelector),\n    )\n\n    profileId$: Observable<number> = this.store$.pipe(\n        select(myProfileIdSelector),\n        take(2),\n    )\n\n    role$: Observable<string> = this.store$.pipe(select(myProfileRoleSelector))\n\n    about$: Observable<string> = this.store$.pipe(\n        select(myProfileAboutSelector),\n    )\n\n    profession$: Observable<string> = this.store$.pipe(\n        select(myProfileProfessionSelector),\n    )\n\n    contactInfo$: Observable<IContact[]> = this.store$.pipe(\n        select(myProfileContactInfoSelector),\n    )\n\n    locality$: Observable<{ country: string; city: string }> = this.store$.pipe(\n        select(myProfileLocalitySelector),\n    )\n\n    projects$: Observable<IProject[]> = this.store$.pipe(\n        select(myProfileProjectsSelector),\n    )\n\n    experience$: Observable<IExp[]> = this.store$.pipe(\n        select(myProfileExperienceSelector),\n    )\n\n    education$: Observable<IUniversity[]> = this.store$.pipe(\n        select(myProfileEducationSelector),\n    )\n\n    editPersonalInfoStatus: { status: string; message: string } | null = null\n\n    editPersonalInfo(info: IPersonalInfo): void {\n        const [year, month, day] = (info.dateOfBirth as string).split('-')\n        console.log(day)\n        this.profileService\n            .editPersonalInfo(\n                {\n                    ...info,\n                    dateOfBirth: Number(\n                        new Date(\n                            Number(year),\n                            Number(month) - 1,\n                            Number(day) + 1,\n                        ),\n                    ),\n                },\n                this.profileId,\n            )\n            .subscribe(res => {\n                if (res.status === 'changed') {\n                    this.editPersonalInfoStatus = {\n                        status: 'success',\n                        message: 'Personal information has been changed',\n                    }\n                }\n                if (res.status === 'not found')\n                    this.editPersonalInfoStatus = {\n                        status: 'fail',\n                        message: 'User is not found, try reloading this page',\n                    }\n            })\n    }\n\n    changeAvatarHandler(data: { type: string; file: File }): void {\n        if (data.type === 'change') this.changeAvatar(data.file)\n\n        if (data.type === 'delete') this.deleteAvatar()\n    }\n\n    changeAvatar(file: File): void {\n        this.profileService.changeAvatar(file, this.profileId).subscribe(\n            res => {\n                console.log(res)\n                // console.log(res.message)\n                this.store$.dispatch(\n                    new MyProfileChangeAvatarSuccessAction({ url: res.url }),\n                )\n            },\n            err => {\n                console.error(err.message)\n            },\n        )\n    }\n\n    deleteAvatar(): void {\n        this.profileService.deleteAvatar(this.profileId).subscribe(\n            res => {\n                console.log(res.message)\n                this.store$.dispatch(new MyProfileDeleteAvatarSuccessAction())\n            },\n            err => {\n                console.error(err.message)\n            },\n        )\n    }\n\n    changeRole(role: string): void {\n        this.store$.dispatch(new MyProfileChangeRoleAction({ role, id: this.profileId }))\n    }\n    // changeCompany(company: any): void\n    changeAbout(about: string): void {\n        this.store$.dispatch(new MyProfileChangeAboutAction({ about, id: this.profileId }))\n    }\n    changeProfession(profession: string): void {\n        this.store$.dispatch(new MyProfileChangeProfessionAction({ profession, id: this.profileId }))\n    }\n    changeLocality(locality: { country: string; city: string }): void {\n        this.store$.dispatch(new MyProfileChangeLocalityAction({ locality, id: this.profileId }))\n    }\n    changeContactInfo(contactInfo: IContact[]): void {\n        this.store$.dispatch(new MyProfileChangeContactInfoAction({ contactInfo, id: this.profileId }))\n    }\n    changeProjects(projects: IProject[]): void {\n        this.store$.dispatch(new MyProfileChangeProjectsAction({ projects, id: this.profileId }))\n    }\n    changeExperience(experience: IExp[]): void {\n        this.store$.dispatch(new MyProfileChangeExperienceAction({ experience, id: this.profileId }))\n    }\n    changeEducation(education: IUniversity[]): void {\n        this.store$.dispatch(new MyProfileChangeEducationAction({ education, id: this.profileId }))\n    }\n\n    ngOnInit(): void {\n        this.profileId$.subscribe(id => (this.profileId = id))\n    }\n\n    changeAdditionalInfoHandler(ev: { type: string; data: any }): void {\n        switch (ev.type) {\n            case 'role':\n                this.changeRole(ev.data)\n                return\n            case 'about':\n                this.changeAbout(ev.data)\n                return\n            case 'profession':\n                this.changeProfession(ev.data)\n                return\n            case 'locality':\n                this.changeLocality(ev.data)\n                return\n            case 'contact-info':\n                this.changeContactInfo(ev.data)\n                return\n            case 'projects':\n                this.changeProjects(ev.data)\n                return\n            case 'experience':\n                this.changeExperience(ev.data)\n                return\n            case 'education':\n                this.changeEducation(ev.data)\n                return\n        }\n    }\n}\n","<app-edit-personal-data *ngIf=\"currentTab === 'Personal data'\" [editStatus]=\"editPersonalInfoStatus\"\n\t\t\t\t\t\t[firstName]=\"(firstName$ | async) || ''\" [lastName]=\"(lastName$ | async) || ''\"\n\t\t\t\t\t\t[DOB]=\"(dateOfBirth$ | async) || 1\" [gender]=\"(gender$ | async) || ''\" [avatar]=\"(avatar$ | async) || 'assets/img/avatar-man.png'\"\n\t\t\t\t\t\t(saveChanges)=\"editPersonalInfo($event)\" (changeAvatar)=\"changeAvatarHandler($event)\"\n></app-edit-personal-data>\n<app-edit-login-and-security *ngIf=\"currentTab === 'Login and security'\"\n\t\t\t\t\t\t\t [email]=\"(email$ | async) || ''\" [phone]=\"(phone$ | async) || ''\"\n\t\t\t\t\t\t\t [dateOfLastPasswordUpdate]=\"(dateOfLastPasswordUpdate$ | async) || null\"\n\t\t\t\t\t\t\t [profileId]=\"profileId\"\n></app-edit-login-and-security>\n<app-edit-additional-info *ngIf=\"currentTab === 'Additional information'\"\n\t\t\t\t\t\t  [role]=\"(role$ | async) || ''\" [about]=\"(about$ | async) || ''\" [profession]=\"(profession$ | async) || ''\"\n\t\t\t\t\t\t  [locality]=\"(locality$ | async) || { country: '', city: '' }\" [contactInfo]=\"(contactInfo$ | async) || []\"\n\t\t\t\t\t\t  [projects]=\"(projects$ | async) || []\" [experience]=\"(experience$ | async) || []\"\n\t\t\t\t\t\t  [education]=\"(education$ | async) || []\" (onChange)=\"changeAdditionalInfoHandler($event)\"\n></app-edit-additional-info>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-account-deleted',\n    templateUrl: './account-deleted.component.html',\n    styleUrls: ['./account-deleted.component.less'],\n})\nexport class AccountDeletedComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<h1>Your account has been deleted!</h1>\n","import {\n    ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE,\n    CANCEL_CONNECTION_SUCCESS_ACTION_TYPE,\n    CHANGE_AVATAR_SUCCESS_ACTION_TYPE,\n    DECLINE_CONNECTION_SUCCESS_ACTION_TYPE,\n    DELETE_AVATAR_SUCCESS_ACTION_TYPE,\n    GET_MY_PROFILE_INFO_SUCCESS_ACTION_TYPE,\n    MyProfileActions,\n    REMOVE_CONNECTION_SUCCESS_ACTION_TYPE,\n} from './my-profile.actions'\nimport { IFile } from '../../interfaces/file'\nimport { IContact } from '../../interfaces/contact'\nimport { IProject } from '../../interfaces/project'\nimport { IExp } from '../../interfaces/exp'\nimport { IUniversity } from '../../interfaces/university'\n\nexport const myProfileNode = 'my profile'\n\nexport interface MyProfileState {\n    id: number\n\n    firstName: string\n    lastName: string\n    email: string\n    phone: string\n    password: string\n\n    info: {\n        isOnline: boolean\n        role: string\n        description: string\n        about: string\n        views: {\n            current: number\n            prev: number\n        }\n        connections: { userId: number; date: number }[]\n        sentConnections: { userId: number; message: string }[]\n        receivedConnections: { userId: number; message: string }[]\n        posts: {\n            postId: number\n        }[]\n        avatar: IFile | null\n        profileHeaderBg: IFile | null\n        dateOfBirth: number\n        gender: string\n        profession: string\n        locality: {\n            country: string\n            city: string\n        }\n        contactInfo: IContact[]\n        projects: IProject[]\n        experience: IExp[]\n        education: IUniversity[]\n        dateOfLastPasswordUpdate: number\n    }\n}\n\nconst initialState: MyProfileState = {\n    id: -1,\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n\n    info: {\n        isOnline: false,\n        role: '',\n        description: '',\n        about: '',\n        views: {\n            current: 0,\n            prev: 0,\n        },\n        connections: [],\n        sentConnections: [],\n        receivedConnections: [],\n        posts: [],\n        avatar: null,\n        profileHeaderBg: null,\n        dateOfBirth: 0,\n        gender: '',\n        profession: '',\n        locality: {\n            country: '',\n            city: '',\n        },\n        contactInfo: [],\n        projects: [],\n        experience: [],\n        education: [],\n        dateOfLastPasswordUpdate: 0,\n    },\n}\n\nexport const myProfileReducer = (\n    state: MyProfileState = initialState,\n    action: MyProfileActions,\n) => {\n    switch (action.type) {\n        case GET_MY_PROFILE_INFO_SUCCESS_ACTION_TYPE:\n            return action.payload.profile\n        case ACCEPT_CONNECTION_SUCCESS_ACTION_TYPE:\n            console.log(action.payload)\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    connections: [\n                        ...state.info.connections,\n                        {\n                            userId: action.payload.senderId,\n                            date: action.payload.date,\n                        },\n                    ],\n                    receivedConnections: [],\n                },\n            }\n        case DECLINE_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    receivedConnections: state.info.receivedConnections.filter(\n                        user => user.userId !== action.payload.senderId,\n                    ),\n                },\n            }\n        case CANCEL_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    sentConnections: state.info.sentConnections.filter(\n                        user => user.userId !== action.payload.userId,\n                    ),\n                },\n            }\n        case REMOVE_CONNECTION_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    connections: state.info.connections.filter(\n                        user => user.userId !== action.payload.userId,\n                    ),\n                },\n            }\n        case CHANGE_AVATAR_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    avatar: {\n                        ...state.info.avatar,\n                        url: action.payload.url,\n                    },\n                },\n            }\n        case DELETE_AVATAR_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                info: {\n                    ...state.info,\n                    avatar: null,\n                },\n            }\n        default:\n            return state\n    }\n}\n","import { Injectable } from '@angular/core'\n\nimport { io } from 'socket.io-client'\nimport { Observable } from 'rxjs'\nimport { environment } from '../../environments/environment'\nimport { Socket } from 'ngx-socket-io'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class WebSocketService {\n    constructor(private socket: Socket) {\n        // this.socket = io(environment.server_url)\n    }\n\n    listen<T>(eventName: string): Observable<T> {\n        return new Observable(subscriber => {\n            this.socket.on(eventName, (data: T) => {\n                subscriber.next(data)\n            })\n        })\n    }\n\n    emit(eventName: string, data: any): void {\n        this.socket.emit(eventName, data)\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { NamePipe } from './name-pipe/name-pipe.pipe'\nimport { PrefixPlusPipe } from './prefix-plus-pipe/prefix-plus.pipe'\nimport { MaskedPhonePipe } from './masked-phone/masked-phone.pipe'\nimport { MaskedEmailPipe } from './masked-email/masked-email.pipe'\nimport { AvatarPipe } from './avatar.pipe'\n\n@NgModule({\n    declarations: [\n        NamePipe,\n        PrefixPlusPipe,\n        MaskedPhonePipe,\n        MaskedEmailPipe,\n        AvatarPipe,\n    ],\n    exports: [\n        PrefixPlusPipe,\n        NamePipe,\n        MaskedPhonePipe,\n        MaskedEmailPipe,\n        AvatarPipe,\n    ],\n    imports: [CommonModule],\n})\nexport class PipesModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { AuthService } from '../../../services/auth.service'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { AuthForm } from '../../../../../../server/src/interfaces/auth/auth'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { SignInAction } from '../../../store/auth/auth.actions'\nimport { AuthState } from '../../../store/auth/auth.reducer'\nimport { Store } from '@ngrx/store'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport { MyProfileGetInfoSuccessAction } from '../../../store/my-profile/my-profile.actions'\nimport { IUser } from '../../../interfaces/user'\n\n@Component({\n    selector: 'app-authorization',\n    templateUrl: './authorization.component.html',\n    styleUrls: ['./authorization.component.less', '../auth.styles.less'],\n})\nexport class AuthorizationComponent implements OnInit {\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private store$: Store<AuthState | MyProfileState>,\n    ) {}\n\n    message: string = ''\n    backendError = ''\n\n    authForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required]),\n    })\n\n    onSubmit(): void {\n        const form: AuthForm = this.authForm.value\n        if (this.authForm.valid) {\n            this.authService.signInRequest(form).subscribe(\n                res => {\n                    console.log('SERVER AUTH RESPONSE', res)\n                    this.store$.dispatch(new SignInAction())\n                    this.store$.dispatch(\n                        new MyProfileGetInfoSuccessAction({\n                            profile: res.user,\n                        }),\n                    )\n                    localStorage.setItem('currentUser', JSON.stringify(res))\n                    this.router.navigate(['/feed'])\n                },\n                err => (this.backendError = err.error.error),\n            )\n        }\n    }\n\n    ngOnInit(): void {\n        // this.authService.testReq()\n\n        this.activatedRoute.queryParams.subscribe(params => {\n            if (params.message) {\n                this.message = params.message\n            }\n        })\n\n        console.log(this.message)\n    }\n}\n","<div class=\"wrapper\">\n\t<div class=\"container\">\n\t\t<div class=\"container__header\">\n\t\t\t<h2 class=\"logo\">Linked<svg icon=\"whiteLogo\"></svg></h2>\n\t\t</div>\n\t\t<div class=\"container__body\">\n\t\t\t<div *ngIf=\"message\" class=\"message\">{{ message }}</div>\n\t\t\t<form [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n\t\t\t\t<ul class=\"form__errors\">\n\t\t\t\t\t<li *ngIf=\"backendError\">{{ backendError }}</li>\n\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"email\">E-mail</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"email\" id=\"email\" formControlName=\"email\" required>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<label class=\"form__label\" for=\"password\">Password</label>\n\t\t\t\t\t<input class=\"form__control\" type=\"password\" id=\"password\" formControlName=\"password\" required>\n\t\t\t\t</div>\n\t\t\t\t<button class=\"submit\" type=\"submit\">Sign in</button>\n\t\t\t\t<span class=\"auth-link\">New to LinkedIn? <a routerLink=\"/signup\">Join now</a></span>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\n\nimport { UsersListComponent } from './network/users-list/users-list.component'\nimport { SelectComponent } from './select/select.component'\nimport { SvgIconModule } from '../svg-icon/svg-icon.module'\nimport { AccountDeletedComponent } from './account-deleted/account-deleted.component'\n\n@NgModule({\n    declarations: [\n        UsersListComponent,\n        SelectComponent,\n        AccountDeletedComponent,\n    ],\n    imports: [CommonModule, RouterModule, SvgIconModule],\n    exports: [UsersListComponent, SelectComponent],\n})\nexport class ComponentsModule {}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { IPost } from '../interfaces/post/post'\nimport { environment } from '../../environments/environment'\nimport { PostDto } from '../dto/post.dto'\nimport { CommentDto } from '../dto/comment.dto'\nimport { IComment } from '../interfaces/post/comment'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PostsService {\n    constructor(private http: HttpClient) {}\n\n    createPost(post: PostDto): Observable<IPost> {\n        // console.log('service request [POST]:', post)\n        return this.http.post<IPost>(\n            `${environment.server_url}/posts/create`,\n            post,\n        )\n    }\n\n    editPost(content: string, postId: number): void {}\n    removePost(postId: number): void {}\n\n    likePost(postId: number, userId: number): Observable<{ like: boolean }> {\n        return this.http.post<{ like: boolean }>(\n            `${environment.server_url}/posts/like/${postId}`,\n            { id: userId },\n        )\n    }\n\n    dontLikePost(\n        postId: number,\n        userId: number,\n    ): Observable<{ like: boolean }> {\n        return this.http.post<{ like: boolean }>(\n            `${environment.server_url}/posts/dont-like/${postId}`,\n            { id: userId },\n        )\n    }\n\n    createComment(comment: CommentDto, postId: number): Observable<IComment[]> {\n        return this.http.post<IComment[]>(\n            `${environment.server_url}/posts/${postId}/comments/add`,\n            comment,\n        )\n    }\n\n    editComment(postId: number, commentId: number, content: string): void {}\n    removeComment(postId: number, commentId: number): void {}\n\n    likeComment(\n        postId: number,\n        commentId: number,\n        userId: number,\n    ): Observable<{ like: boolean }> {\n        return this.http.post<{ like: boolean }>(\n            `${environment.server_url}/${postId}/comments/like/${commentId}`,\n            { id: userId },\n        )\n    }\n    dontLikeComment(\n        postId: number,\n        commentId: number,\n        userId: number,\n    ): Observable<{ like: boolean }> {\n        return this.http.post<{ like: boolean }>(\n            `${environment.server_url}/${postId}/comments/dont-like/${commentId}`,\n            { id: userId },\n        )\n    }\n\n    getPosts(id: string | number): Observable<{ posts: IPost[] }> {\n        return this.http.get<{ posts: IPost[] }>(\n            `${environment.server_url}/posts/${id}`,\n        )\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { ChatComponent } from './chat.component'\nimport { ChatMainComponent } from './chat-main/chat-main.component'\nimport { ChatSideComponent } from './chat-side/chat-side.component'\nimport { FormsModule } from '@angular/forms'\nimport { SvgIconModule } from '../../svg-icon/svg-icon.module'\nimport { ChatService } from '../../services/chat.service'\n\n@NgModule({\n    declarations: [ChatComponent, ChatMainComponent, ChatSideComponent],\n    imports: [CommonModule, FormsModule, SvgIconModule],\n    providers: [ChatService],\n})\nexport class ChatModule {}\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-chat',\n    templateUrl: './chat.component.html',\n    styleUrls: ['./chat.component.less'],\n})\nexport class ChatComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"chat-wrapper\">\n\t<app-chat-side class=\"side\"></app-chat-side>\n\t<app-chat-main class=\"main\"></app-chat-main>\n</div>\n","import { Injectable } from '@angular/core'\nimport { environment } from '../../environments/environment'\nimport { Observable } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { RegistrationForm } from '../../../../server/src/interfaces/auth/registration'\nimport { AuthForm } from '../../../../server/src/interfaces/auth/auth'\nimport { IsdCountryCode } from '../../../../server/src/interfaces/auth/isdCountryCode'\nimport { MyProfileState } from '../store/my-profile/my-profile.reducer'\nimport { map } from 'rxjs/operators'\nimport { IUser } from '../interfaces/user'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    isAuth: boolean\n\n    constructor(private http: HttpClient) {\n        this.isAuth = false\n    }\n\n    signUpRequest(formValue: RegistrationForm): Observable<RegistrationForm> {\n        formValue.passwordRepeat = undefined\n        return this.http.post<RegistrationForm>(\n            `${environment.server_url}/users/create`,\n            formValue,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            },\n        )\n    }\n\n    signInRequest(formValue: AuthForm): Observable<{ user: IUser }> {\n        return this.http\n            .post<{ user: IUser }>(\n                `${environment.server_url}/users/auth`,\n                formValue,\n            )\n            .pipe(\n                map(res => {\n                    console.log(res)\n                    return res\n                }),\n            )\n    }\n\n    getIsdCountryCode(): Observable<IsdCountryCode[]> {\n        return this.http.get<IsdCountryCode[]>(\n            'https://gist.githubusercontent.com/iamswapnilsonar/0e1868229e98cc27a6d2e3487b44f7fa/raw/10f8979f0b1daa0e0b490137d51fb96736767a09/isd_country_code.json',\n        )\n    }\n\n    testReq(): void {\n        this.http\n            .get(`${environment.server_url}/users/test`)\n            .subscribe(res => console.log(res))\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\nimport { IBuffer } from '../interfaces/buffer'\n\n@Pipe({\n    name: 'avatar',\n})\nexport class AvatarPipe implements PipeTransform {\n    transform(value: IBuffer | string | null, ...args: unknown[]): any {\n        if (typeof value === 'string') return value\n        if (value === null) return 'assets/img/avatar-man.png'\n\n        const arrayBufferView = new Uint8Array(value.data)\n        // const blob = new Blob([ arrayBufferView ], { type: 'image/jpeg' })\n        // console.log(blob)\n        // const urlCreator = window.URL || window.webkitURL\n        //\n        // return urlCreator.createObjectURL(blob)\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport { Observable, of, Subscription } from 'rxjs'\nimport {\n    myProfileConnectionsSelector,\n    myProfileIdSelector,\n    myProfileReceivedConnectionsSelector,\n    myProfileSentConnectionsSelector,\n} from '../../../store/my-profile/my-profile.selectors'\nimport { ProfileService } from '../../../services/profile.service'\nimport { IUser } from '../../../interfaces/user'\nimport { ProfileState } from '../../../store/profile/profile.reducer'\nimport {\n    MyProfileAcceptConnectionAction,\n    MyProfileCancelConnectionAction,\n    MyProfileDeclineConnectionAction,\n    MyProfileGetInfoAction,\n    MyProfileRemoveConnectionAction,\n} from '../../../store/my-profile/my-profile.actions'\nimport { filter, map, switchMap } from 'rxjs/operators'\n\n@Component({\n    selector: 'app-network-main',\n    templateUrl: './network-main.component.html',\n    styleUrls: ['./network-main.component.less'],\n})\nexport class NetworkMainComponent implements OnInit, OnDestroy {\n    constructor(\n        private store$: Store<MyProfileState | ProfileState>,\n        private profileService: ProfileService,\n    ) {}\n\n    private subs: Subscription[] = []\n    private set sub(s: Subscription) {\n        this.subs.push(s)\n    }\n\n    myConnections: { user: IUser; date: number }[] = []\n    myProfileId: number = -1\n\n    @Input() activeTab: string = ''\n\n    myConnections$: Observable<\n        { user: IUser; date: number }[]\n    > = this.store$.pipe(\n        select(myProfileConnectionsSelector),\n        switchMap(connections => {\n            return this.profileService.getConnectionsById$(connections)\n        }),\n    )\n\n    removeConnection(data: { action: string; userId: number }): void {\n        console.log(data)\n        this.store$.dispatch(\n            new MyProfileRemoveConnectionAction({\n                senderId: this.myProfileId,\n                userId: data.userId,\n            }),\n        )\n    }\n\n    ngOnInit(): void {\n        this.sub = this.store$\n            .pipe(select(myProfileIdSelector))\n            .subscribe(id => {\n                if (id >= 0) this.myProfileId = id\n                else\n                    this.myProfileId = JSON.parse(\n                        localStorage.getItem('currentUser') as string,\n                    ).user.id\n            }) // get this.myProfileId\n\n        this.store$.dispatch(\n            new MyProfileGetInfoAction({ id: this.myProfileId }),\n        ) // get info\n\n        this.sub = this.myConnections$.subscribe(\n            connections => (this.myConnections = connections),\n        )\n    }\n\n    ngOnDestroy(): void {\n        this.subs.forEach(sub => sub.unsubscribe())\n    }\n}\n","<div class=\"network-main\">\n\t<app-invitations\n\t\t\t*ngIf=\"activeTab === 'invitations'\"\n\t\t\t[myProfileId]=\"myProfileId\"\n\t\t\t[myConnections$]=\"myConnections$\"\n\t></app-invitations>\n\t<h2 *ngIf=\"activeTab === 'connections'\" class=\"title\">Connections</h2>\n\t<app-users-list\n\t\t\t*ngIf=\"activeTab === 'connections'\"\n\t\t\t[connections]=\"myConnections\"\n\t\t\t[isMyProfile]=\"true\"\n\t\t\t(action)=\"removeConnection($event)\"\n\t></app-users-list>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'namePipe',\n})\nexport class NamePipe implements PipeTransform {\n    transform(value: string, ...args: unknown[]): string {\n        // tslint:disable-next-line:prefer-const\n        let [firstName, lastName] = value.split(' ')\n        return `${firstName[0]}. ${lastName}`\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { ProfileService } from '../../../../../services/profile.service'\nimport { IBuffer } from '../../../../../interfaces/buffer'\n\n@Component({\n    selector: 'app-edit-personal-data',\n    templateUrl: './edit-personal-data.component.html',\n    styleUrls: ['./edit-personal-data.component.less'],\n})\nexport class EditPersonalDataComponent implements OnInit, OnChanges {\n    constructor() {}\n\n    @Input() firstName: string = ''\n    @Input() lastName: string = ''\n    @Input() DOB: number = 0\n    @Input() gender: string = ''\n    @Input() avatar: string | IBuffer = ''\n    @Input() editStatus: { status: string; message: string } | null = null\n\n    @Output() saveChanges = new EventEmitter()\n    @Output() changeAvatar = new EventEmitter()\n\n    editProfileDataForm = new FormGroup({\n        firstName: new FormControl(this.firstName, [\n            Validators.required,\n            Validators.minLength(2),\n        ]),\n        lastName: new FormControl(this.lastName, [Validators.required]),\n        dateOfBirth: new FormControl(\n            new Date(this.DOB).toJSON().split('T')[0],\n            [Validators.required],\n        ),\n    })\n\n    selectedGender: string = ''\n    genderIsRequiredError: boolean = false\n\n    changeAvatarMenu: HTMLElement | null = null\n\n    toggleChangeAvatarMenu(menu: HTMLElement): void {\n        menu.classList.toggle('transparent')\n        menu.classList.toggle('hidden')\n\n        this.changeAvatarMenu = menu\n    }\n\n    hideChangeAvatarMenu(menu: HTMLElement): void {\n        menu.classList.add('transparent')\n        menu.classList.add('hidden')\n    }\n\n    selectOnChange(option: string): void {\n        this.selectedGender = option\n    }\n\n    changeAvatarHandler(e: Event): void {\n        const target = e.target as HTMLInputElement\n        const files = target.files as FileList\n\n        this.changeAvatar.emit({ type: 'change', file: files.item(0) })\n\n        target.value = ''\n        if (this.changeAvatarMenu)\n            this.toggleChangeAvatarMenu(this.changeAvatarMenu)\n    }\n\n    deleteAvatarHandler(): void {\n        this.changeAvatar.emit({ type: 'delete' })\n        if (this.changeAvatarMenu)\n            this.toggleChangeAvatarMenu(this.changeAvatarMenu)\n    }\n\n    onSubmit(): void {\n        if (this.selectedGender === 'Indicate your gender') {\n            this.genderIsRequiredError = true\n            return\n        }\n        this.genderIsRequiredError = false\n        if (this.editProfileDataForm.valid) {\n            this.saveChanges.emit({\n                ...this.editProfileDataForm.value,\n                gender: this.selectedGender.trim(),\n            })\n        }\n    }\n\n    ngOnInit(): void {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('firstName') &&\n            changes.hasOwnProperty('lastName') &&\n            changes.hasOwnProperty('DOB')\n        ) {\n            this.editProfileDataForm.setValue({\n                firstName: changes.firstName.currentValue,\n                lastName: changes.lastName.currentValue,\n                dateOfBirth: new Date(changes.DOB.currentValue)\n                    .toJSON()\n                    .split('T')[0],\n            })\n        }\n    }\n}\n","<div class=\"edit-personal-data\">\n\t<div class=\"edit-personal-data__header\">\n\t\t<div class=\"avatar-wrapper\">\n\t\t\t<div class=\"avatar-box\" (click)=\"toggleChangeAvatarMenu(avatar_change)\">\n\t\t\t\t<img [src]=\"avatar\" alt=\"avatar\">\n\t\t\t\t<div class=\"shadow\"></div>\n\t\t\t\t<svg icon=\"camera\"></svg>\n\t\t\t</div>\n\t\t\t<div class=\"hidden avatar-change\" #avatar_change>\n\t\t\t\t<div class=\"change\" (click)=\"input_avatar_upload.click()\">Change avatar</div>\n\t\t\t\t<div class=\"delete\" (click)=\"deleteAvatarHandler()\">Delete avatar</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"helper\">\n\t\t\t<h3 class=\"name\">{{ firstName + ' ' + lastName }}</h3>\n\t\t\t<p class=\"help\">Provide basic information about yourself</p>\n\t\t</div>\n\t</div>\n\t<div class=\"edit-personal-data__body\">\n\t\t\n\t\t<div *ngIf=\"editStatus\" class=\"edit-status\"\n\t\t\t [class.success]=\"editStatus.status === 'success'\"\n\t\t\t [class.fail]=\"editStatus.status === 'fail'\"\n\t\t>\n\t\t\t{{ editStatus.message }}\n\t\t\t<svg (click)=\"editStatus = null\" class=\"close\" icon=\"close\"></svg>\n\t\t</div>\n\t\t\n\t\t<form [formGroup]=\"editProfileDataForm\" id=\"edit-personal-data-form\" (ngSubmit)=\"onSubmit()\">\n\t\t\t<div class=\"input-wrapper\">\n\t\t\t\t<label for=\"first_name\">First name</label>\n\t\t\t\t<input id=\"first_name\" type=\"text\" formControlName=\"firstName\">\n\t\t\t</div>\n\t\t\t<div class=\"input-wrapper\">\n\t\t\t\t<label for=\"last_name\">Last name</label>\n\t\t\t\t<input id=\"last_name\" type=\"text\" formControlName=\"lastName\">\n\t\t\t</div>\n\t\t\t<div class=\"input-wrapper\">\n\t\t\t\t<label>Gender</label>\n\t\t\t\t<app-select [options]=\"['Male', 'Female']\" [error]=\"genderIsRequiredError\"\n\t\t\t\t\t\t\t[selectedByDefault]=\"gender || 'Indicate your gender'\"\n\t\t\t\t\t\t\t(onChange)=\"selectOnChange($event)\"\n\t\t\t\t></app-select>\n\t\t\t</div>\n\t\t\t<div class=\"input-wrapper\">\n\t\t\t\t<label for=\"DOB\">Date of birth</label>\n\t\t\t\t<input id=\"DOB\" type=\"date\" formControlName=\"dateOfBirth\">\n\t\t\t</div>\n\t\t\t\n\t\t\t<button class=\"btn\" type=\"submit\">Save</button>\n\t\t</form>\n\t</div>\n</div>\n\n<input type=\"file\" class=\"hidden\" accept=\".jpg,.png,.gif\" (change)=\"changeAvatarHandler($event)\" #input_avatar_upload>\n\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core'\nimport { Subscription } from 'rxjs'\nimport { IUser } from '../../../interfaces/user'\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.less'],\n})\nexport class UsersListComponent implements OnInit, OnDestroy {\n    constructor() {}\n\n    private subs: Subscription[] = []\n    private set sub(s: Subscription) {\n        this.subs.push(s)\n    }\n\n    @Input() connections: { user: IUser; date: number }[] = []\n    @Input() isMyProfile: boolean = false\n\n    @Output() action: EventEmitter<{\n        action: string\n        userId: number\n    }> = new EventEmitter<{ action: string; userId: number }>()\n\n    removeConnection(userId: number): void {\n        this.action.emit({ action: 'remove', userId })\n    }\n\n    ngOnInit(): void {}\n\n    ngOnDestroy(): void {\n        this.subs.forEach(sub => sub.unsubscribe())\n    }\n}\n","<div class=\"connections\">\n\t<h2 *ngIf=\"connections.length === 0\" class=\"no-connections\">You have no connections yet</h2>\n\t<div *ngIf=\"connections.length\" class=\"connections__list\">\n\t\t<div *ngFor=\"let connection of connections\" class=\"connection\" [class.justify-content-center]=\"!isMyProfile\">\n\t\t\t<a data-hystclose [routerLink]=\"'/profile/' + connection.user.id\" class=\"user\">\n\t\t\t\t<div class=\"avatar-box\">\n\t\t\t\t\t<img [src]=\"connection.user.info.avatar?.url || 'assets/img/avatar-man.png'\" alt=\"avatar\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info\">\n\t\t\t\t\t<div class=\"name\">{{ connection.user.firstName }} {{ connection.user.lastName }}</div>\n\t\t\t\t\t<div class=\"profession\">{{ connection.user.info.profession }}</div>\n\t\t\t\t\t<div class=\"user-connections\">{{ connection.user.info.connections.length }} connections</div>\n<!--\t\t\t\t\t<div class=\"date\">{{ connection.date }}</div>-->\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t\t<button *ngIf=\"isMyProfile\" (click)=\"removeConnection(connection.user.id)\" class=\"btn\">Remove</button>\n\t\t</div>\n\t</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-feed',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.less'],\n})\nexport class FeedComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div class=\"feed\">\n    <div class=\"feed__wrapper\">\n        <app-feed-main class=\"main\"></app-feed-main>\n        <app-feed-side class=\"side\"></app-feed-side>\n    </div>\n</div>\n","import {\n    AuthActions,\n    LOG_OUT_ACTION_TYPE,\n    SIGN_IN_ACTION_TYPE,\n} from './auth.actions'\n\nexport const authNode = 'auth'\n\nexport interface AuthState {\n    authStatus: boolean\n}\n\nconst initialState: AuthState = {\n    authStatus: false,\n}\n\nexport const authReducer = (state = initialState, action: AuthActions) => {\n    switch (action.type) {\n        case SIGN_IN_ACTION_TYPE:\n            return {\n                ...state,\n                authStatus: true,\n            }\n        case LOG_OUT_ACTION_TYPE:\n            return {\n                ...state,\n                authStatus: false,\n            }\n        default:\n            return state\n    }\n}\n","import { Injectable } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport { ChatState } from '../store/chat/chat.reducer'\nimport { ReceiveMessageAction } from '../store/chat/chat.actions'\nimport { IMessage } from '../interfaces/chat/message'\nimport { WebSocketService } from './web-socket.service'\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService {\n    constructor(\n        private socketService: WebSocketService,\n        private store$: Store<ChatState>,\n    ) {\n        this.socketService\n            .listen('connection')\n            .subscribe(() => this.onConnection())\n\n        this.socketService\n            .listen('new-message')\n            .subscribe(message => console.log('WS response => ', message))\n    }\n\n    joinToChat(chatId: number): void {\n        this.socketService.emit('joinPrivateChat', { chatId })\n    }\n\n    sendMessage(message: string): void {\n        this.socketService.emit('sendMessage', { message })\n    }\n\n    test(message: string): void {\n        console.log(message)\n        this.socketService.emit('new-message', message)\n    }\n\n    onConnection(): void {\n        console.log('Connected!')\n        this.socketService\n            .listen<{ msg: IMessage; senderId: number }>('receiveMsg')\n            .subscribe(data => console.log('[WebSocket Message]', data.msg))\n\n        this.socketService\n            .listen<{ message: string }>('joinSuccess')\n            .subscribe(data => console.log('[WebSocket Message]', data.message))\n\n        // this.store$.dispatch(new ReceiveMessageAction({\n        //     senderId: data.senderId,\n        //     content: data.msg\n        // }))\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n    name: 'maskedPhone',\n})\nexport class MaskedPhonePipe implements PipeTransform {\n    transform(value: string, ...args: unknown[]): string {\n        const length = value.length\n\n        let result = value[0] + value[1]\n        for (let i = 2; i < length - 2; i++) {\n            result += '•'\n        }\n        result += value[length - 2]\n        result += value[length - 1]\n\n        return result\n    }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { NoticesComponent } from './notices.component'\n\n@NgModule({\n    declarations: [NoticesComponent],\n    imports: [CommonModule],\n})\nexport class NoticesModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { SvgIconComponent } from './svg-icon.component'\n\n@NgModule({\n    declarations: [SvgIconComponent],\n    exports: [SvgIconComponent],\n    imports: [CommonModule],\n})\nexport class SvgIconModule {}\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { profileNode, ProfileState } from './profile.reducer'\n\nexport const profileFeatureSelector = createFeatureSelector<ProfileState>(\n    profileNode,\n)\n\nexport const profileSelector = createSelector(\n    profileFeatureSelector,\n    state => state,\n)\n\nexport const profileIdSelector = createSelector(\n    profileFeatureSelector,\n    state => state.id,\n)\n\nexport const profileNameSelector = createSelector(\n    profileFeatureSelector,\n    state => `${state.firstName} ${state.lastName}`,\n)\n\nexport const profilePhoneSelector = createSelector(\n    profileFeatureSelector,\n    state => state.phone,\n)\n\nexport const profileEmailSelector = createSelector(\n    profileFeatureSelector,\n    state => state.email,\n)\n\nexport const profilePostsSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.posts,\n)\n\nexport const profileConnectionsSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.connections,\n)\n\nexport const profileCurrentViewsSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.views.current,\n)\n\nexport const profilePrevViewsSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.views.prev,\n)\n\nexport const profileAvatarSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.avatar?.url ?? '../../../assets/img/avatar-man.png',\n)\n\nexport const profileHeaderBgSelector = createSelector(\n    profileFeatureSelector,\n    state =>\n        state.info.profileHeaderBg?.url ??\n        '../../../assets/img/profile-header.png',\n)\n\nexport const profileDescriptionSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.description,\n)\n\nexport const profileProfessionSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.profession,\n)\n\nexport const profileDOBSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.dateOfBirth,\n)\n\nexport const profileLocalitySelector = createSelector(\n    profileFeatureSelector,\n    state => {\n        const locality = state.info.locality\n        return `${locality.city}, ${locality.country}`\n    },\n)\n\nexport const profileSentConnectionsSelector = createSelector(\n    profileFeatureSelector,\n    state => state.info.sentConnections,\n)\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-network',\n    templateUrl: './network.component.html',\n    styleUrls: ['./network.component.less'],\n})\nexport class NetworkComponent implements OnInit {\n    constructor() {}\n\n    activeTab: string = 'invitations'\n\n    activateTab(tab: string): void {\n        console.log(tab)\n        this.activeTab = tab\n    }\n\n    ngOnInit(): void {}\n}\n","<div class=\"network-wrapper\">\r\n\t<app-network-side class=\"side\" (activateItem)=\"activateTab($event)\"></app-network-side>\r\n\t<app-network-main class=\"main\" [activeTab]=\"activeTab\"></app-network-main>\r\n</div>\r\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { BaseLayoutComponent } from './layouts/base/base.component'\nimport { FeedComponent } from './views/feed/feed.component'\nimport { NetworkComponent } from './views/network/network.component'\nimport { JobsComponent } from './views/jobs/jobs.component'\nimport { ChatComponent } from './views/chat/chat.component'\nimport { NoticesComponent } from './views/notices/notices.component'\nimport { ProfileComponent } from './views/profile/profile.component'\n\nimport { AuthLayoutComponent } from './layouts/auth/auth.component'\nimport { AuthorizationComponent } from './views/auth/authorization/authorization.component'\nimport { RegistrationComponent } from './views/auth/registration/registration.component'\nimport { AuthGuard } from './guards/auth.guard'\nimport { EditProfileComponent } from './views/profile/edit-profile/edit-profile.component'\nimport { AccountDeletedComponent } from './components/account-deleted/account-deleted.component'\n\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: '/feed' },\n    {\n        component: BaseLayoutComponent,\n        path: '',\n        children: [\n            {\n                path: 'feed',\n                component: FeedComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'network',\n                component: NetworkComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'jobs',\n                component: JobsComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'chats',\n                component: ChatComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'notices',\n                component: NoticesComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'profile',\n                component: ProfileComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'profile/edit',\n                component: EditProfileComponent,\n                canActivate: [AuthGuard],\n            },\n            {\n                path: 'profile/:id',\n                component: ProfileComponent,\n                canActivate: [AuthGuard],\n            },\n        ],\n    },\n    {\n        path: '',\n        component: AuthLayoutComponent,\n        children: [\n            { path: 'signup', component: RegistrationComponent },\n            { path: 'signin', component: AuthorizationComponent },\n        ],\n    },\n    {\n        path: 'account-deleted',\n        component: AccountDeletedComponent,\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n    providers: [AuthGuard],\n})\nexport class AppRoutingModule {}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { MyProfileState } from '../../../store/my-profile/my-profile.reducer'\nimport { ProfileState } from '../../../store/profile/profile.reducer'\nimport { ProfileService } from '../../../services/profile.service'\nimport { Observable, of, Subscription } from 'rxjs'\nimport {\n    myProfileConnectionsSelector,\n    myProfileReceivedConnectionsSelector,\n    myProfileSentConnectionsSelector,\n} from '../../../store/my-profile/my-profile.selectors'\nimport { IUser } from '../../../interfaces/user'\nimport { filter, map, switchMap } from 'rxjs/operators'\nimport {\n    MyProfileAcceptConnectionAction,\n    MyProfileCancelConnectionAction,\n    MyProfileDeclineConnectionAction,\n} from '../../../store/my-profile/my-profile.actions'\nimport { ChatService } from '../../../services/chat.service'\n\n@Component({\n    selector: 'app-invitations',\n    templateUrl: './invitations.component.html',\n    styleUrls: ['./invitations.component.less'],\n})\nexport class InvitationsComponent implements OnInit, OnDestroy {\n    constructor(\n        private store$: Store<MyProfileState | ProfileState>,\n        private profileService: ProfileService,\n        private chatService: ChatService,\n    ) {}\n\n    private subs: Subscription[] = []\n    private set sub(s: Subscription) {\n        this.subs.push(s)\n    }\n\n    @Input() myProfileId: number = -1\n\n    @Input() myConnections$: Observable<\n        { user: IUser; date: number }[]\n    > = new Observable()\n\n    currentTab: string = 'received'\n\n    receivedConnections$: Observable<\n        { userId: number; message: string }[]\n    > = this.store$.pipe(select(myProfileReceivedConnectionsSelector))\n\n    sentConnections$: Observable<\n        { user: IUser; message: string }[]\n    > = this.store$.pipe(\n        select(myProfileSentConnectionsSelector),\n        map(connections => {\n            const identifiers: number[] = []\n            connections.forEach(el => identifiers.push(el.userId))\n            return { identifiers, connections }\n        }),\n        switchMap(({ identifiers, connections }) => {\n            if (identifiers.length > 1)\n                return this.profileService\n                    .getProfileInfo<{ users: IUser[] }>(identifiers.join(','))\n                    .pipe(\n                        map(res => res.users),\n                        map(users => {\n                            return users.map(user => ({\n                                user,\n                                message: (connections.find(\n                                    connection => connection.userId === user.id,\n                                ) as { userId: number; message: string })\n                                    .message,\n                            }))\n                        }),\n                    )\n            if (identifiers.length === 1)\n                return this.profileService\n                    .getProfileInfo<{ user: IUser }>(identifiers[0])\n                    .pipe(\n                        map(res => res.user),\n                        map(user => {\n                            return [\n                                {\n                                    user,\n                                    message: (connections.find(\n                                        connection =>\n                                            connection.userId === user.id,\n                                    ) as { userId: number; message: string })\n                                        .message,\n                                },\n                            ]\n                        }),\n                    )\n            else return of([])\n        }),\n    )\n\n    newConnections: { user: IUser; message: string }[] = []\n    sentConnections: { user: IUser; message: string }[] = []\n    recentConnections: { user: IUser; date: number }[] = []\n\n    acceptConnection(senderId: number): void {\n        this.store$.dispatch(\n            new MyProfileAcceptConnectionAction({\n                senderId,\n                userId: this.myProfileId,\n                date: Date.now(),\n            }),\n        )\n    }\n    declineConnection(senderId: number): void {\n        this.store$.dispatch(\n            new MyProfileDeclineConnectionAction({\n                senderId,\n                userId: this.myProfileId,\n            }),\n        )\n    }\n\n    cancelConnection(userId: number): void {\n        this.store$.dispatch(\n            new MyProfileCancelConnectionAction({\n                senderId: this.myProfileId,\n                userId,\n            }),\n        )\n    }\n\n    action(data: { type: string; id: number }): void {\n        if (data.type === 'accept') {\n            this.acceptConnection(data.id)\n        }\n\n        if (data.type === 'decline') {\n            this.declineConnection(data.id)\n        }\n\n        if (data.type === 'cancel') {\n            this.cancelConnection(data.id)\n        }\n    }\n\n    activateTab(e: MouseEvent): void {\n        const element = e.target as HTMLElement\n        const parent = element.parentNode as HTMLElement\n        const children = Array.from(parent.children)\n\n        children.forEach(el => el.classList.remove('active'))\n\n        element.classList.add('active')\n        this.currentTab = (element.textContent as string).toLowerCase()\n    }\n\n    ngOnInit(): void {\n        this.sub = this.receivedConnections$.subscribe(connections => {\n            if (!connections.length) {\n                this.newConnections = []\n                return\n            }\n\n            const usersId = connections.map(connection => connection.userId)\n            if (usersId.length > 1) {\n                this.sub = this.profileService\n                    .getProfileInfo<{ users: IUser[] }>(usersId.join(','))\n                    .subscribe(res => {\n                        const users = res.users\n                        this.newConnections = connections.map(connection => {\n                            return {\n                                user: users.find(\n                                    user => user.id === connection.userId,\n                                ) as IUser,\n                                message: connection.message,\n                            }\n                        })\n                    })\n            } else if (usersId.length === 1) {\n                this.sub = this.profileService\n                    .getProfileInfo<{ user: IUser }>(usersId.join(','))\n                    .subscribe(res => {\n                        const user = res.user\n                        this.newConnections = connections.map(connection => {\n                            return {\n                                user,\n                                message: connection.message,\n                            }\n                        })\n                    })\n            }\n        })\n\n        this.sub = this.myConnections$\n            .pipe(\n                map(connections => {\n                    console.log('map connections', connections)\n                    return connections.reverse()\n                }),\n                filter((val, index) => index < 4),\n            )\n            .subscribe(connections => {\n                this.recentConnections = connections\n                console.log('recent connections', connections)\n            })\n\n        this.sub = this.sentConnections$.subscribe(sent => {\n            this.sentConnections = sent\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.subs.forEach(sub => sub.unsubscribe())\n    }\n}\n","<div class=\"invitations\">\n\t<div (click)=\"activateTab($event)\" class=\"tabs\">\n\t\t<div class=\"tab active\">Received</div>\n\t\t<div class=\"tab\">Sent</div>\n\t</div>\n\t\n\t<div class=\"content\">\n\t\t<h2 class=\"no-connections\" *ngIf=\"!newConnections.length && currentTab === 'received'\">\n\t\t\tYou have no incoming connections yet\n\t\t</h2>\n\t\t<h2 class=\"no-connections\" *ngIf=\"!sentConnections.length && currentTab === 'sent'\">\n\t\t\tYou have no sent connections yet\n\t\t</h2>\n\t\t\n\t\t<app-connections-list *ngIf=\"newConnections.length && currentTab === 'received'\" [connections]=\"newConnections\" [type]=\"'incoming'\" (action)=\"action($event)\"></app-connections-list>\n\t\t<app-connections-list *ngIf=\"sentConnections.length && currentTab === 'sent'\" [connections]=\"sentConnections\" [type]=\"'sent'\" (action)=\"action($event)\"></app-connections-list>\n\t\t\n\t\t<div *ngIf=\"recentConnections.length\" class=\"recent-connections\">\n\t\t\t<div class=\"title\">Recent connections</div>\n\t\t\t<div class=\"users\">\n\t\t\t\t<a *ngFor=\"let connection of recentConnections\" [routerLink]=\"'/profile/' + connection.user.id\" class=\"profile-link\">\n\t\t\t\t\t<div class=\"user\">\n\t\t\t\t\t\t<div class=\"avatar-box\">\n\t\t\t\t\t\t\t<img [src]=\"connection.user.info.avatar ? connection.user.info.avatar.url : 'assets/img/avatar-man.png'\" alt=\"avatar\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t<div class=\"name\">{{ connection.user.firstName + ' ' + connection.user.lastName }}</div>\n\t\t\t\t\t\t\t<div class=\"profession\">{{ connection.user.info.profession }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"date\">{{ connection.date | date: 'medium' }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import {\n    COMMENT_CREATE_FAILED_ACTION_TYPE,\n    COMMENT_CREATE_SUCCESS_ACTION_TYPE,\n    POST_COMMENTS_CLOSE_ACTION_TYPE,\n    POST_COMMENTS_OPEN_ACTION_TYPE,\n    POST_CREATE_FAILED_ACTION_TYPE,\n    POST_CREATE_SUCCESS_ACTION_TYPE,\n    POST_DONT_LIKE_FAILED_ACTION_TYPE,\n    POST_DONT_LIKE_SUCCESS_ACTION_TYPE,\n    POST_EDIT_FAILED_ACTION_TYPE,\n    POST_EDIT_SUCCESS_ACTION_TYPE,\n    POST_GET_FAILED_ACTION_TYPE,\n    POST_GET_SUCCESS_ACTION_TYPE,\n    POST_LIKE_FAILED_ACTION_TYPE,\n    POST_LIKE_SUCCESS_ACTION_TYPE,\n    PostActions,\n} from './post.actions'\nimport { IPost } from '../../interfaces/post/post'\nimport { IComment } from '../../interfaces/post/comment'\n\nexport const postNode = 'post'\n\nexport interface PostState {\n    posts: IPost[]\n    error: string\n}\n\nconst initialState: PostState = {\n    posts: [],\n    error: '',\n}\n\nexport const postReducer = (\n    state: PostState = initialState,\n    action: PostActions,\n) => {\n    switch (action.type) {\n        case POST_CREATE_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                posts: [action.payload.post, ...state.posts],\n            }\n        case POST_CREATE_FAILED_ACTION_TYPE:\n            return {\n                ...state,\n                error: action.payload.err,\n            }\n        case POST_EDIT_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n            }\n        case POST_EDIT_FAILED_ACTION_TYPE:\n            return {\n                ...state,\n                error: action.payload.err,\n            }\n        case POST_LIKE_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if (action.payload.postId === post.id) {\n                        return {\n                            ...post,\n                            likes: [\n                                ...post.likes,\n                                { userId: action.payload.userId },\n                            ],\n                        }\n                    }\n                    return post\n                }),\n            }\n        case POST_LIKE_FAILED_ACTION_TYPE:\n            return {\n                ...state,\n                error: action.payload.err,\n            }\n        case POST_DONT_LIKE_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if (action.payload.postId === post.id) {\n                        return {\n                            ...post,\n                            likes: post.likes.filter(\n                                user => user.userId !== action.payload.userId,\n                            ),\n                        }\n                    }\n                    return post\n                }),\n            }\n        case POST_DONT_LIKE_FAILED_ACTION_TYPE:\n            return {\n                ...state,\n                // error: action.payload.err\n            }\n        case POST_GET_SUCCESS_ACTION_TYPE:\n            return {\n                ...state,\n                posts: action.payload.posts,\n            }\n        case POST_GET_FAILED_ACTION_TYPE:\n            return {\n                ...state,\n                error: action.payload.err,\n            }\n        case POST_COMMENTS_OPEN_ACTION_TYPE:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if (post.id === action.payload.postId) {\n                        return {\n                            ...post,\n                            commentsOpen: true,\n                        }\n                    }\n                    return post\n                }),\n            }\n        case POST_COMMENTS_CLOSE_ACTION_TYPE:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if (post.id === action.payload.postId) {\n                        return {\n                            ...post,\n                            commentsOpen: false,\n                        }\n                    }\n                    return post\n                }),\n            }\n        case COMMENT_CREATE_SUCCESS_ACTION_TYPE:\n            const payload = action.payload as {\n                postId: number\n                comments: IComment[]\n            }\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if (post.id === payload.postId)\n                        return {\n                            ...post,\n                            comments: payload.comments,\n                        }\n                    return post\n                }),\n            }\n        case COMMENT_CREATE_FAILED_ACTION_TYPE:\n\n        default:\n            return state\n    }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { select, Store } from '@ngrx/store'\nimport { ProfileState } from '../../store/profile/profile.reducer'\nimport { ProfileGetInfoAction } from '../../store/profile/profile.actions'\nimport { profileSelector } from '../../store/profile/profile.selectors'\nimport {\n    myProfileIdSelector,\n    myProfileSelector,\n} from '../../store/my-profile/my-profile.selectors'\nimport { MyProfileState } from '../../store/my-profile/my-profile.reducer'\nimport { Observable } from 'rxjs'\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.less'],\n})\nexport class ProfileComponent implements OnInit {\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private store$: Store<ProfileState | MyProfileState>,\n    ) {}\n\n    myProfileId$: Observable<number> = this.store$.pipe(\n        select(myProfileIdSelector),\n    )\n    isMyProfile: boolean = false\n\n    ngOnInit(): void {\n        this.activatedRoute.params.subscribe(params => {\n            if (params.id) {\n                this.myProfileId$.subscribe(id => {\n                    console.log('id:', id, '\\nparams id:', params.id)\n                    this.isMyProfile = id === +params.id\n                })\n                console.log('params id:', +params.id)\n                this.store$.dispatch(\n                    new ProfileGetInfoAction({ id: +params.id }),\n                )\n            } else {\n                this.myProfileId$.subscribe(id => {\n                    this.router.navigate([`/profile/${id}`])\n                })\n            }\n        })\n    }\n}\n\nexport const initialProfileState = {\n    email: '',\n    firstName: '',\n    id: 0,\n    info: {\n        avatar: null,\n        connections: [],\n        dateOfBirth: 0,\n        description: '',\n        isOnline: false,\n        posts: [],\n        profession: '',\n        profileHeaderBg: null,\n        receivedConnections: [],\n        sentConnections: [],\n        views: { current: 0, prev: 0 },\n    },\n    lastName: '',\n    password: '',\n    phone: '',\n}\n","<div class=\"profile\">\n    <div class=\"profile__wrapper\">\n        <app-profile-main [isMyProfile]=\"isMyProfile\"></app-profile-main>\n        <app-profile-side *ngIf=\"isMyProfile\"></app-profile-side>\n    </div>\n</div>\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { postNode, PostState } from './post.reducer'\n\nexport const postFeatureSelector = createFeatureSelector<PostState>(postNode)\n\nexport const postsSelector = createSelector(\n    postFeatureSelector,\n    (state: PostState) => {\n        return state?.posts || []\n    },\n)\n\nexport const postsErrorSelector = createSelector(\n    postFeatureSelector,\n    state => state.error,\n)\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n    selector: 'app-network-side',\n    templateUrl: './network-side.component.html',\n    styleUrls: ['./network-side.component.less'],\n})\nexport class NetworkSideComponent implements OnInit {\n    constructor() {}\n\n    @Output() activateItem: EventEmitter<string> = new EventEmitter<string>()\n\n    activeMenuItem: string = ''\n\n    activateListItem(e: MouseEvent, list: HTMLElement): void {\n        if (e.target === list) return\n\n        const element = (e.target as HTMLElement).closest('.menu__item')\n        if (element) {\n            const listItems = Array.from(list.children)\n\n            listItems.forEach(el => el.classList.remove('active'))\n            element.classList.add('active')\n\n            this.activeMenuItem =\n                element.querySelector('.title')?.textContent ?? ''\n            this.activateItem.emit(this.activeMenuItem.toLowerCase().trim())\n        }\n    }\n\n    ngOnInit(): void {}\n}\n","<div class=\"network-menu\">\n\t<ul (click)=\"activateListItem($event, list)\" class=\"menu\" #list>\n\t\t<li class=\"menu__item\">\n\t\t\t<span class=\"title\">\n\t\t\t\t<svg icon=\"connections\"></svg>\n\t\t\t\tConnections\n\t\t\t</span>\n\t\t</li>\n\t\t<li class=\"menu__item active\">\n\t\t\t<span class=\"title\">\n\t\t\t\t<svg icon=\"invitations\"></svg>\n\t\t\t\tInvitations\n\t\t\t</span>\n\t\t\t\n\t\t</li>\n\t\t<li class=\"menu__item\">\n\t\t\t<span class=\"title\">\n\t\t\t\t<svg icon=\"teammates\"></svg>\n\t\t\t\tTeammates\n\t\t\t</span>\n\t\t\t\n\t\t</li>\n\t\t<li class=\"menu__item\">\n\t\t\t<span class=\"title\">\n\t\t\t\t<svg icon=\"network\"></svg>\n\t\t\t\tGroups\n\t\t\t</span>\n\t\t\t\n\t\t</li>\n\t\t<li class=\"menu__item\">\n\t\t\t<span class=\"title\">\n\t\t\t\t<svg icon=\"hash\"></svg>\n\t\t\t\tHashtags\n\t\t\t</span>\n\t\t\t\n\t\t</li>\n\t</ul>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\n@Component({\n    selector: 'app-notices',\n    templateUrl: './notices.component.html',\n    styleUrls: ['./notices.component.less'],\n})\nexport class NoticesComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<p>notices works!</p>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { NetworkComponent } from './network.component'\nimport { NetworkSideComponent } from './network-side/network-side.component'\nimport { NetworkMainComponent } from './network-main/network-main.component'\nimport { SvgIconModule } from '../../svg-icon/svg-icon.module'\nimport { RouterModule } from '@angular/router'\n\nimport { ConnectionsListComponent } from '../../components/network/connections-list/connections-list.component'\nimport { InvitationsComponent } from '../../components/network/invitations/invitations.component'\n\nimport { ComponentsModule } from '../../components/components.module'\n\n@NgModule({\n    declarations: [\n        NetworkComponent,\n        NetworkSideComponent,\n        NetworkMainComponent,\n        ConnectionsListComponent,\n        InvitationsComponent,\n    ],\n    imports: [CommonModule, SvgIconModule, RouterModule, ComponentsModule],\n    exports: [],\n})\nexport class NetworkModule {}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\n\nimport { ChatModule } from './chat/chat.module'\nimport { FeedModule } from './feed/feed.module'\nimport { JobsModule } from './jobs/jobs.module'\nimport { NetworkModule } from './network/network.module'\nimport { NoticesModule } from './notices/notices.module'\nimport { ProfileModule } from './profile/profile.module'\nimport { PipesModule } from '../pipes/pipes.module'\nimport { SvgIconModule } from '../svg-icon/svg-icon.module'\n\nimport { ICONS_PATH } from '../svg-icon/icons-path'\nimport { AuthModule } from './auth/auth.module'\nimport { PostsService } from '../services/posts.service'\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        ChatModule,\n        FeedModule,\n        JobsModule,\n        NetworkModule,\n        NoticesModule,\n        ProfileModule,\n        AuthModule,\n        PipesModule,\n        SvgIconModule,\n        RouterModule,\n    ],\n    providers: [\n        {\n            provide: ICONS_PATH,\n            useValue: 'assets/img/svg',\n        },\n        PostsService,\n    ],\n    exports: [],\n})\nexport class ViewsModule {}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core'\nimport { IsdCountryCode } from '../../../../../server/src/interfaces/auth/isdCountryCode'\n\n@Component({\n    selector: 'app-select',\n    templateUrl: './select.component.html',\n    styleUrls: ['./select.component.less'],\n})\nexport class SelectComponent implements OnInit, OnChanges {\n    constructor() {}\n\n    @Input() options: string[] = []\n    @Input() selectedByDefault: string = ''\n    @Input() error: boolean = false\n\n    @Output() onChange = new EventEmitter<string>()\n\n    selected: string = ''\n\n    toggleOptions(el: HTMLElement): void {\n        el.classList.toggle('show')\n    }\n\n    closeOptions(el: HTMLElement): void {\n        el.classList.remove('show')\n    }\n\n    changeSelected(option: string, select: HTMLElement): void {\n        this.closeOptions(select)\n        if (this.selected === option) return\n        this.selected = option\n        this.onChange.emit(option)\n    }\n\n    ngOnInit(): void {\n        this.onChange.emit(this.selectedByDefault)\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.hasOwnProperty('selectedByDefault'))\n            this.onChange.emit(changes.selectedByDefault.currentValue)\n    }\n}\n","<div class=\"select\" [class.error]=\"error\" #select>\n\t<div (click)=\"toggleOptions(select)\" class=\"selected\">\n\t\t{{ selected || selectedByDefault }}\n\t\t<svg icon=\"chevronDown\"></svg>\n\t</div>\n\t<div class=\"options\">\n\t\t<div *ngFor=\"let option of options\"\n\t\t\t (click)=\"changeSelected(option, select)\"\n\t\t\t [class.disabled]=\"selected ? option === selected : option === selectedByDefault\"\n\t\t\t class=\"option\"\n\t\t>{{ option }}</div>\n\t</div>\n</div>\n<div (click)=\"closeOptions(select)\" *ngIf=\"select.classList.contains('show')\" class=\"select-bg\"></div>\n","import { InjectionToken } from '@angular/core'\n\nexport const ICONS_PATH = new InjectionToken<string>('Pass to the icons folder')\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n    enableProdMode()\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}